[{"path":"/articles/spacetime_data.html","id":"creating-spacetime-data","dir":"Articles","previous_headings":"","what":"Creating Spacetime data","title":"Spacetime Data in statsurv","text":"Often, hardest part data analysis getting data right format. two common formats might data , get right format statsurv package","code":""},{"path":"/articles/spacetime_data.html","id":"point-data","dir":"Articles","previous_headings":"Creating Spacetime data","what":"Point data","title":"Spacetime Data in statsurv","text":"Often, underlying data comes series points. example, elevated blood lead levels reported based geo-coded address date. work data statsurv, point data needs aggregated space time. Suppose following set data, raw latitude, longitude, date, wanted assign points month county New Mexico: One way sf lubridate packages. assign points county, first need load county boundaries: , convert point data sf, use spatial join assign counties, use match convert county names id: Assigning points months little straightforward. need convert characters dates, use floor_date figure month date belongs , convert date number. last step can use function match, careful gaps data. first steps methods: gaps data, can one line: option calculate dates explicitly: Since gaps data, option2 better example. can aggregate data use statistical surveillance: However, still don’t valid spacetime data, gaps id_time. can pad data frame: ’s little annoying hand, also use function pad_spacetime_data automatically:","code":"point_data <- data.frame(lat = c(34.579, 36.382, 35.863, 32.539, 34.876, 38.876),                          lon = c(-105.143, -106.882, -103.552, -108.089, -106.454, -106.454),                          date = c(\"03/14/19\", \"2/11/19\", \"4/4/19\", \"5/8/19\", \"7/10/19\", \"2/12/19\"),                          y = runif(6, min = 0, max = 9)) point_data              #>      lat      lon     date         y #> 1 34.579 -105.143 03/14/19 0.8117515 #> 2 36.382 -106.882  2/11/19 4.4761807 #> 3 35.863 -103.552   4/4/19 6.7324410 #> 4 32.539 -108.089   5/8/19 3.4041678 #> 5 34.876 -106.454  7/10/19 2.2634268 #> 6 38.876 -106.454  2/12/19 7.7451168 library(sf) data(\"NM_county_sf\") geo_data <- st_as_sf(point_data,                     coords = c(\"lon\", \"lat\"),                    crs = \"+proj=longlat\",                    remove = FALSE)  geo_data <- geo_data %>%   st_transform(st_crs(NM_county_sf))  geo_data_w_county <- st_join(geo_data, NM_county_sf) %>%   filter(!is.na(county)) %>%   mutate(id_space = match(county, unique(county))) geo_data_w_county #> Simple feature collection with 5 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 209887.5 ymin: 3604391 xmax: 630734.5 ymax: 4027964 #> CRS:           +proj=utm +zone=13 #>      lat      lon     date         y id_space    county #> 1 34.579 -105.143 03/14/19 0.8117515        1 guadalupe #> 2 36.382 -106.882  2/11/19 4.4761807        2 rioarriba #> 3 35.863 -103.552   4/4/19 6.7324410        3   harding #> 4 32.539 -108.089   5/8/19 3.4041678        4     grant #> 5 34.876 -106.454  7/10/19 2.2634268        5  valencia #>                   geometry #> 1 POINT (486884.5 3826367) #> 2 POINT (331192.5 4027964) #> 3 POINT (630734.5 3969721) #> 4 POINT (209887.5 3604391) #> 5 POINT (367115.3 3860256) library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union curr_data <- geo_data_w_county %>%   mutate(date = mdy(date),          month_date = floor_date(date, unit = \"month\")) option1 <- curr_data %>%   mutate(id_time = match(month_date, sort(unique(month_date)))) option1 #> Simple feature collection with 5 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 209887.5 ymin: 3604391 xmax: 630734.5 ymax: 4027964 #> CRS:           +proj=utm +zone=13 #>      lat      lon       date         y id_space    county #> 1 34.579 -105.143 2019-03-14 0.8117515        1 guadalupe #> 2 36.382 -106.882 2019-02-11 4.4761807        2 rioarriba #> 3 35.863 -103.552 2019-04-04 6.7324410        3   harding #> 4 32.539 -108.089 2019-05-08 3.4041678        4     grant #> 5 34.876 -106.454 2019-07-10 2.2634268        5  valencia #>                   geometry month_date id_time #> 1 POINT (486884.5 3826367) 2019-03-01       2 #> 2 POINT (331192.5 4027964) 2019-02-01       1 #> 3 POINT (630734.5 3969721) 2019-04-01       3 #> 4 POINT (209887.5 3604391) 2019-05-01       4 #> 5 POINT (367115.3 3860256) 2019-07-01       5 time_levels <- seq(min(curr_data$month_date), max(curr_data$month_date), by = \"month\") option2 <- curr_data %>%   mutate(id_time = match(month_date, time_levels)) option2 #> Simple feature collection with 5 features and 8 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 209887.5 ymin: 3604391 xmax: 630734.5 ymax: 4027964 #> CRS:           +proj=utm +zone=13 #>      lat      lon       date         y id_space    county #> 1 34.579 -105.143 2019-03-14 0.8117515        1 guadalupe #> 2 36.382 -106.882 2019-02-11 4.4761807        2 rioarriba #> 3 35.863 -103.552 2019-04-04 6.7324410        3   harding #> 4 32.539 -108.089 2019-05-08 3.4041678        4     grant #> 5 34.876 -106.454 2019-07-10 2.2634268        5  valencia #>                   geometry month_date id_time #> 1 POINT (486884.5 3826367) 2019-03-01       2 #> 2 POINT (331192.5 4027964) 2019-02-01       1 #> 3 POINT (630734.5 3969721) 2019-04-01       3 #> 4 POINT (209887.5 3604391) 2019-05-01       4 #> 5 POINT (367115.3 3860256) 2019-07-01       6 aggregated_data <- option2 %>%   st_drop_geometry() %>%   group_by(id_space, id_time) %>%   summarize(y = sum(y)) #> `summarise()` has grouped output by 'id_space'. You can override using the #> `.groups` argument.  aggregated_data #> # A tibble: 5 x 3 #> # Groups:   id_space [5] #>   id_space id_time     y #>      <int>   <int> <dbl> #> 1        1       2 0.812 #> 2        2       1 4.48  #> 3        3       3 6.73  #> 4        4       4 3.40  #> 5        5       6 2.26 coord_df <- expand.grid(id_space = unique(aggregated_data$id_space),                          id_time = 1:max(aggregated_data$id_time)) padded_aggregated_data <- full_join(aggregated_data, coord_df) %>%   arrange(id_space, id_time) #> Joining, by = c(\"id_space\", \"id_time\") padded_aggregated_data #> # A tibble: 30 x 3 #> # Groups:   id_space [5] #>    id_space id_time      y #>       <int>   <int>  <dbl> #>  1        1       1 NA     #>  2        1       2  0.812 #>  3        1       3 NA     #>  4        1       4 NA     #>  5        1       5 NA     #>  6        1       6 NA     #>  7        2       1  4.48  #>  8        2       2 NA     #>  9        2       3 NA     #> 10        2       4 NA     #> # ... with 20 more rows  validate_spacetime_data(padded_aggregated_data) padded_aggregated_data <- pad_spacetime_data(aggregated_data) validate_spacetime_data(padded_aggregated_data)"},{"path":"/articles/spacetime_data.html","id":"sf-data","dir":"Articles","previous_headings":"Creating Spacetime data","what":"sf data","title":"Spacetime Data in statsurv","text":"Another situation data stored sf object additional field time. example, let’s take example fake data New Mexico. 3 time points geometry, well county name. county name, can ignore geometry create id_space based county names. ’s often also easier split data two tables, one aggregated data, one spatial information don’t labels spatial areas, beyond geometries? Well ’s little trickier, still manageable. can select distinct geometries, assign one id_space: use st_join line sample data: Finally, data organized way statsurv expects. Maybe quickly easily expected though. better worse though, difficulty comes aggregate data spatial areas time blocks. ’ve done , just take couple mutate/match calls get form expected statsurv.","code":"NM_sample_sf #> Simple feature collection with 96 features and 3 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 114557.3 ymin: 3471000 xmax: 682840.2 ymax: 4102426 #> CRS:           +proj=utm +zone=13 #> # A tibble: 96 x 4 #>          y date       county                                            geometry #>  *   <dbl> <date>     <chr>                                        <POLYGON [m]> #>  1 0.493   2022-01-01 bernalillo ((374492.6 3859524, 371038.3 3859562, 371039.8~ #>  2 0.649   2022-02-01 bernalillo ((374492.6 3859524, 371038.3 3859562, 371039.8~ #>  3 0.00381 2022-03-01 bernalillo ((374492.6 3859524, 371038.3 3859562, 371039.8~ #>  4 0.133   2022-01-01 catron     ((125979.7 3764745, 126150.3 3769552, 126350.9~ #>  5 0.115   2022-02-01 catron     ((125979.7 3764745, 126150.3 3769552, 126350.9~ #>  6 0.480   2022-03-01 catron     ((125979.7 3764745, 126150.3 3769552, 126350.9~ #>  7 0.434   2022-01-01 chaves     ((563052.3 3761894, 569725.2 3761914, 577922 3~ #>  8 0.950   2022-02-01 chaves     ((563052.3 3761894, 569725.2 3761914, 577922 3~ #>  9 0.339   2022-03-01 chaves     ((563052.3 3761894, 569725.2 3761914, 577922 3~ #> 10 0.445   2022-01-01 colfax     ((509971.1 4012919, 504328.5 4012914, 499949.7~ #> # ... with 86 more rows NM_sample_sf_id <- NM_sample_sf %>%   mutate(id_space = match(county, unique(county)),          id_time = match(date, sort(unique(date)))) NM_sample_sf_id #> Simple feature collection with 96 features and 5 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 114557.3 ymin: 3471000 xmax: 682840.2 ymax: 4102426 #> CRS:           +proj=utm +zone=13 #> # A tibble: 96 x 6 #>          y date       county                            geometry id_sp~1 id_time #>  *   <dbl> <date>     <chr>                        <POLYGON [m]>   <int>   <int> #>  1 0.493   2022-01-01 bernalillo ((374492.6 3859524, 371038.3 3~       1       1 #>  2 0.649   2022-02-01 bernalillo ((374492.6 3859524, 371038.3 3~       1       2 #>  3 0.00381 2022-03-01 bernalillo ((374492.6 3859524, 371038.3 3~       1       3 #>  4 0.133   2022-01-01 catron     ((125979.7 3764745, 126150.3 3~       2       1 #>  5 0.115   2022-02-01 catron     ((125979.7 3764745, 126150.3 3~       2       2 #>  6 0.480   2022-03-01 catron     ((125979.7 3764745, 126150.3 3~       2       3 #>  7 0.434   2022-01-01 chaves     ((563052.3 3761894, 569725.2 3~       3       1 #>  8 0.950   2022-02-01 chaves     ((563052.3 3761894, 569725.2 3~       3       2 #>  9 0.339   2022-03-01 chaves     ((563052.3 3761894, 569725.2 3~       3       3 #> 10 0.445   2022-01-01 colfax     ((509971.1 4012919, 504328.5 4~       4       1 #> # ... with 86 more rows, and abbreviated variable name 1: id_space NM_sample_data <- NM_sample_sf_id %>%   st_drop_geometry()  NM_sample_geom <- NM_sample_sf_id %>%   select(id_space) %>%   group_by(id_space) %>%   slice_head(n = 1)  NM_sample_data #> # A tibble: 96 x 5 #>          y date       county     id_space id_time #>  *   <dbl> <date>     <chr>         <int>   <int> #>  1 0.493   2022-01-01 bernalillo        1       1 #>  2 0.649   2022-02-01 bernalillo        1       2 #>  3 0.00381 2022-03-01 bernalillo        1       3 #>  4 0.133   2022-01-01 catron            2       1 #>  5 0.115   2022-02-01 catron            2       2 #>  6 0.480   2022-03-01 catron            2       3 #>  7 0.434   2022-01-01 chaves            3       1 #>  8 0.950   2022-02-01 chaves            3       2 #>  9 0.339   2022-03-01 chaves            3       3 #> 10 0.445   2022-01-01 colfax            4       1 #> # ... with 86 more rows  NM_sample_geom #> Simple feature collection with 32 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: 114557.3 ymin: 3471000 xmax: 682840.2 ymax: 4102426 #> CRS:           +proj=utm +zone=13 #> # A tibble: 32 x 2 #> # Groups:   id_space [32] #>    id_space                                                             geometry #>       <int>                                                       <GEOMETRY [m]> #>  1        1 POLYGON ((374492.6 3859524, 371038.3 3859562, 371039.8 3860579, 371~ #>  2        2 POLYGON ((125979.7 3764745, 126150.3 3769552, 126350.9 3774176, 126~ #>  3        3 POLYGON ((563052.3 3761894, 569725.2 3761914, 577922 3761968, 57788~ #>  4        4 POLYGON ((509971.1 4012919, 504328.5 4012914, 499949.7 4012870, 498~ #>  5        5 GEOMETRYCOLLECTION (MULTIPOLYGON (((637673.3 3849533, 640863.6 3849~ #>  6        6 GEOMETRYCOLLECTION (MULTIPOLYGON (((526127.5 3762059, 519766.1 3762~ #>  7        7 GEOMETRYCOLLECTION (POLYGON ((284078 3598156, 284170.6 3600224, 284~ #>  8        8 POLYGON ((563319.6 3540653, 550400.7 3540573, 544243 3540566, 54021~ #>  9        9 POLYGON ((158862.9 3680471, 160064.1 3680425, 160059.7 3680246, 162~ #> 10       10 MULTIPOLYGON (((473385.2 3844025, 473385.2 3844025, 473385.2 384402~ #> # ... with 22 more rows NM_geometries <- NM_sample_sf %>%   distinct(geometry)  NM_geometries$id_space <- 1:nrow(NM_geometries) NM_spacetime_data <- st_join(NM_sample_sf, NM_geometries, join = st_equals) %>%   mutate(id_time = match(date, sort(unique(date)))) validate_spacetime_data(NM_spacetime_data)"},{"path":"/articles/statsurv_overview.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"An introduction to `statsurv`","text":"Statistical surveillance sort systematic, ongoing analysis aimed detecting changes outcomes occur. process requires developing model predict outcome interest, systematically examining measured outcomes occur determining observed outcomes longer match predicted outcomes. amount data reported large significant natural variability rate case events, statistical techniques can extremely helpful determining change number events important, merely noise key steps applying statistical surveillance follows: Collecting standardizing measurements outcome variable Developing statistical model predict outcome variable Using statistical model predict outcome variable given region time period. Applying alarm function compare actual outcome predictions, determine likelihood actual outcome happening chance given predictions. Repeating process continually new data collected. statsurv package designed help every aspect process, particular emphasis helping design evaluate new statistical surveillance systems. ’s perfectly possible ’ll use statsurv ’re designing surveillance system, decide doesn’t make sense use package actually implement system.","code":""},{"path":"/articles/statsurv_overview.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"An introduction to `statsurv`","text":"statsurv package currently lives GitHub, https://github.com/CO-TEEO/statsurv. currently CRAN, installation slightly involved typical R package. easiest way install run commands: RStudio.","code":"install.packages(\"remotes\")  remotes::install_github(\"cran/reliaR\") remotes::install_github(\"BenjaK/scanstatistics\") remotes::install_github(\"CO-TEEO/statsurv\")"},{"path":"/articles/statsurv_overview.html","id":"spacetime-data","dir":"Articles","previous_headings":"","what":"Spacetime data","title":"An introduction to `statsurv`","text":"statsurv package simple way representing data series spatial areas time. Spacetime data stored data frame contains columns id_space id_time. entries columns must set consecutive integers. column id_time identifies time point associated row data frame, lower numbers earlier higher numbers later. column id_space identifies spatial location area associated row. specific values id_space assumed meaning order beyond identification. ’re even unsure whether ’re data correctly formatted statsurv, can call function validate_spacetime_data, give error data frame follow spacetime data conventions. information formatting data frames follow conventions, see spacetime data vignette","code":""},{"path":"/articles/statsurv_overview.html","id":"using-the-statsurv-package","dir":"Articles","previous_headings":"","what":"Using the statsurv package","title":"An introduction to `statsurv`","text":"example use statsurv package, ’re going use data set brain cancer cases New Mexico. dataset studied Kulldorff developing SaTScan, identified potential cluster cases two counties 1986 1989. start performing surveillance, need load data. populations case counts, well county boundaries, included datasets statsurv package. data package already comes baseline estimate, ’re going remove column generate . case, data already provided us county level. instead individual case locations, ’d first aggregate year county level.","code":"library(scanstatistics) library(broom.mixed) library(lubridate) library(ggplot2) library(tibble) library(dplyr) library(tidyr) library(broom) library(lme4) library(sf)   data(\"NM_county_sf\") data(\"NM_data\")  NM_data <- as_tibble(NM_data) %>%   select(-baseline_est)  NM_data #> # A tibble: 608 x 6 #>    id_time id_space  year county     population count #>      <dbl>    <dbl> <int> <fct>           <int> <int> #>  1       1        1  1973 bernalillo     353813    16 #>  2       2        1  1974 bernalillo     357520    16 #>  3       3        1  1975 bernalillo     368166    16 #>  4       4        1  1976 bernalillo     378483    16 #>  5       5        1  1977 bernalillo     388471    15 #>  6       6        1  1978 bernalillo     398130    18 #>  7       7        1  1979 bernalillo     407460    19 #>  8       8        1  1980 bernalillo     416461    22 #>  9       9        1  1981 bernalillo     425133    21 #> 10      10        1  1982 bernalillo     433476    21 #> # ... with 598 more rows"},{"path":"/articles/statsurv_overview.html","id":"developing-a-model","dir":"Articles","previous_headings":"Using the statsurv package","what":"Developing a model","title":"An introduction to `statsurv`","text":"first step analysis develop model predict number cases county year. model going used generate estimates expected number cases absense clusters, don’t want include potential cluster fitting model. ’ll make 2 data sets: one data 1985 used fit model, one data 1989 generate predictions. can use prepare_training_data generate first data set. Now data sets, can now fit model. Let’s start fairly simple model, number cases depends year, offset log population county. , generate predictions number cases, can use extract_yhat function statsurv. add column .fitted data frame containing model estimates location.  model predictions look OK. maybe ’d better added random effect county?  looks bit better. Let’s use results model see can identify clusters. identify clusters, ’re going use expectation-based poisson scan statistic. , ’ll use function scan_eb_poisson2. function calls scan_eb_poisson scanstatistics package, takes inputs convenient form. call function, need single spacetime data frame containing observed cases baseline estimates location, set zones want scan . statsurv scanstatistics, zone set 1 spatial locations. can construct zones want investigate spatial setup using create_zones function. function takes sf object construct zones using k-nearest neighbors approach. location, zone containing location , zone containing location nearest neighbor, zone containing location two nearest-neighbors, maximum size. can call scan_eb_poisson2. pass valid spacetime data object function, function needs know spatial location time period associated row. scan_eb_poisson2 also uses tidy-evaluation, means can specify columns containing observed cases baseline estimates using bare words, quoted strings, like dplyr::select dplyr::mutate. see likely cluster covers 4 years, locations 15 26. can look counties : Los Alamos Santa Fe counties, counties identified Kulldorff, 1988.","code":"prediction_data <- NM_data %>%    filter(year <= 1989)  training_data <- prepare_training_data(prediction_data,                                          outcome_cols = count,                                           split_id = 14,                                           prep_strategy = \"truncate\") mod <- glm(count ~ I(year - 1985),            family = poisson(link = \"log\"),            offset = log(population),            data = training_data) aug_data <- extract_yhat(mod, prediction_data) plot(aug_data$count, aug_data$.fitted, xlab = \"Observed Counts\", ylab = \"Model Predictions\") abline(a = 0, b = 1, col = \"blue\") mod2 <- glmer(count ~ I(year - 1985) + (1 | county) + offset(log(population)),               family = poisson(link = \"log\"),               data = training_data) aug_data2 <- extract_yhat(mod2, prediction_data) plot(aug_data2$count, aug_data2$.fitted, xlab = \"Observed Counts\", ylab = \"Model Predictions\") abline(a = 0, b = 1, col = \"blue\") zones <- create_zones(NM_county_sf, max_k = 10, min_k = 1) scan_res <- scan_eb_poisson2(aug_data2, outcome_col = count, zones,                               baseline_col = .fitted, n_mcsim = 99) scan_res #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      17 #> Number of spatial zones:          288 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   NULL #> Most likely event duration:       4 #> ID of locations in MLC:           15, 26 NM_county_sf %>%   filter(id_space %in% c(15, 26)) #> Simple feature collection with 2 features and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 371834.6 ymin: 3877849 xmax: 435402.4 ymax: 3984704 #> CRS:           +proj=utm +zone=13 #>   id_space    county                       geometry #> 1       15 losalamos POLYGON ((373586 3965813, 3... #> 2       26   santafe POLYGON ((394170.5 3965524,..."},{"path":"/articles/statsurv_overview.html","id":"evaluating-statistical-surveillance-methods","dir":"Articles","previous_headings":"","what":"Evaluating statistical surveillance methods","title":"An introduction to `statsurv`","text":"’s definitely good sign method identified potential cluster Kulldorff scanstatistics, isn’t thing care . Statistical surveillance techniques usually used prospectively, meaning ’re typically used repeatedly new data collected. evaluating statistical surveillance system, want understand quickly can detect true cluster starts, likely give us false alarms. statsurv number functions help mimic experience running surveillance system every year new data collected.","code":""},{"path":"/articles/statsurv_overview.html","id":"performing-surveillance-repeatedly","dir":"Articles","previous_headings":"Evaluating statistical surveillance methods","what":"Performing surveillance repeatedly","title":"An introduction to `statsurv`","text":"first step evaluating surveillance system figure data present time run model. can use window_idtime function package . give minimum number data points need train model , number data points want generate predictions , window_idtime give us data available model every time run . example, ’re going require minimum 7 years data fit model , every year, ’re going generate predictions 3 years. window_idtime gives back nested data frame, data frame one columns list data frames. tidyverse website articles nested data frames list-columns data frames want information concepts. Nested data frames great way keeping track sets data, mean data frames now list-columns , makes working little complicated. Typically, use function mutate, whole column gets passed function . doesn’t usually work list-columns - fit model data passing data frame, list data frames. ’re using dplyr data frame list-columns, ’ll typically want first use rowwise, row data frame treated independently, use mutate verbs create modify columns. create new columns interesting things , like data frames model fits, ’ll need remember wrap results list. ’s ’d prepare training data fit model time point using functions `dplyr: works, ’s little clunky. statsurv provides single function, rowmute, ’s supposed remove lot annoyance working list columns data frames. rowmute version mutate always works one row time. ’s name portmanteau rowwise mutate, might help remember ’s . ’s ’d thing using rowmute. ’s one function call instead 2, don’t remember return list. just work, find situation doesn’t, can always replace rowwise mutate. can use rowmute extract model predictions adds column aug_data giant data frame everything, containing model predictions every time point. Finally, can use data calculate scan statistic every point. now results! list scan statistic every point time. results, ’s couple things can . First, can extract information top cluster every time point, using report_top_clusters function.’ll unnest resulting data frame get information single data frame. Let’s add back information year counties affected: Interestingly, see addition cluster identified 1989, several , stronger clusters detected previous years. includes large clusters 1987 1988, cluster 1985 nearly strong one 1989, includes neither counties identified 1989. suggests potential cluster 1989 occurred chance, withstanding low p-values calculated alarm function. agrees findings Kuldorff, 1998, also concluded cluster detected 1986-1989 likely occured chance. result, probably go back re-examine model, see ’s adequately capturing trends data time. also look trends cluster time. ’re interested rates Los Alamos Sante Fe counties, corresponds zone number #132. can use report_top_clusters well - ’ll first extract information clusters, filter ones zone #132.","code":"windowed_data <- window_idtime(NM_data, min_train = 7, max_train = Inf, n_predict = 3,                                step = 1) windowed_data #> # A tibble: 10 x 4 #>    window_time_id window_space_id split_id curr_data          #>             <dbl> <list>             <dbl> <list>             #>  1             10 <dbl [32]>             8 <tibble [320 x 6]> #>  2             11 <dbl [32]>             9 <tibble [352 x 6]> #>  3             12 <dbl [32]>            10 <tibble [384 x 6]> #>  4             13 <dbl [32]>            11 <tibble [416 x 6]> #>  5             14 <dbl [32]>            12 <tibble [448 x 6]> #>  6             15 <dbl [32]>            13 <tibble [480 x 6]> #>  7             16 <dbl [32]>            14 <tibble [512 x 6]> #>  8             17 <dbl [32]>            15 <tibble [544 x 6]> #>  9             18 <dbl [32]>            16 <tibble [576 x 6]> #> 10             19 <dbl [32]>            17 <tibble [608 x 6]> windowed_data %>%   rowwise() %>%   mutate(training_data = list(prepare_training_data(curr_data,                                                       outcome_cols = count,                                                       split_id = split_id,                                                       prep_strategy = \"truncate\")),          mod = list(glmer(count ~ I(year - 1985) + (1 | county) + offset(log(population)),                        family = poisson(link = \"log\"),                        data = training_data))) #> # A tibble: 10 x 6 #> # Rowwise:  #>    window_time_id window_space_id split_id curr_data training_data mod        #>             <dbl> <list>             <dbl> <list>    <list>        <list>     #>  1             10 <dbl [32]>             8 <tibble>  <tibble>      <glmerMod> #>  2             11 <dbl [32]>             9 <tibble>  <tibble>      <glmerMod> #>  3             12 <dbl [32]>            10 <tibble>  <tibble>      <glmerMod> #>  4             13 <dbl [32]>            11 <tibble>  <tibble>      <glmerMod> #>  5             14 <dbl [32]>            12 <tibble>  <tibble>      <glmerMod> #>  6             15 <dbl [32]>            13 <tibble>  <tibble>      <glmerMod> #>  7             16 <dbl [32]>            14 <tibble>  <tibble>      <glmerMod> #>  8             17 <dbl [32]>            15 <tibble>  <tibble>      <glmerMod> #>  9             18 <dbl [32]>            16 <tibble>  <tibble>      <glmerMod> #> 10             19 <dbl [32]>            17 <tibble>  <tibble>      <glmerMod> model_fits <- windowed_data %>%   rowmute(training_data = prepare_training_data(curr_data,                                                    outcome_col = count,                                                   split_id = split_id,                                                    prep_strategy = \"truncate\"),           mod =  glmer(count ~ I(year - 1985) + (1 | county) + offset(log(population)),                        family = poisson(link = \"log\"),                        data = training_data))  model_fits #> # A tibble: 10 x 6 #>    window_time_id window_space_id split_id curr_data training_data mod        #>             <dbl> <list>             <dbl> <list>    <list>        <list>     #>  1             10 <dbl [32]>             8 <tibble>  <tibble>      <glmerMod> #>  2             11 <dbl [32]>             9 <tibble>  <tibble>      <glmerMod> #>  3             12 <dbl [32]>            10 <tibble>  <tibble>      <glmerMod> #>  4             13 <dbl [32]>            11 <tibble>  <tibble>      <glmerMod> #>  5             14 <dbl [32]>            12 <tibble>  <tibble>      <glmerMod> #>  6             15 <dbl [32]>            13 <tibble>  <tibble>      <glmerMod> #>  7             16 <dbl [32]>            14 <tibble>  <tibble>      <glmerMod> #>  8             17 <dbl [32]>            15 <tibble>  <tibble>      <glmerMod> #>  9             18 <dbl [32]>            16 <tibble>  <tibble>      <glmerMod> #> 10             19 <dbl [32]>            17 <tibble>  <tibble>      <glmerMod> model_predictions <- model_fits %>%   rowmute(aug_data = extract_yhat(mod, curr_data)) scan_results <- model_predictions %>%   rowmute(scan_res = scan_eb_poisson2(aug_data, outcome_col = count, zones,                               baseline_col = .fitted, n_mcsim = 99)) scan_results #> # A tibble: 10 x 8 #>    window_tim~1 windo~2 split~3 curr_d~4 traini~5 mod        aug_data scan_res   #>           <dbl> <list>    <dbl> <list>   <list>   <list>     <list>   <list>     #>  1           10 <dbl>         8 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  2           11 <dbl>         9 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  3           12 <dbl>        10 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  4           13 <dbl>        11 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  5           14 <dbl>        12 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  6           15 <dbl>        13 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  7           16 <dbl>        14 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  8           17 <dbl>        15 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #>  9           18 <dbl>        16 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #> 10           19 <dbl>        17 <tibble> <tibble> <glmerMod> <tibble> <scnsttst> #> # ... with abbreviated variable names 1: window_time_id, 2: window_space_id, #> #   3: split_id, 4: curr_data, 5: training_data top_clusters_over_time <- scan_results %>%   rowmute(top_cluster = report_top_clusters(scan_res, score, max_reported = 1)) %>%   select(window_time_id, top_cluster) %>%   unnest(top_cluster) years <- distinct(NM_data[, c(\"id_time\", \"year\")]) top_clusters_over_time <- left_join(top_clusters_over_time, years,                                      by = c(\"window_time_id\" = \"id_time\"))  top_clusters_over_time %>%   rowmute(counties = NM_county_sf$county[zones[[zone]]]) %>%   select(year, duration, score, mc_pvalue, counties) %>%   unnest_wider(counties) #> # A tibble: 10 x 14 #>     year duration score mc_pva~1 ...1  ...2  ...3  ...4  ...5  ...6  ...7  ...8  #>    <int>    <dbl> <dbl>    <dbl> <chr> <chr> <chr> <chr> <chr> <chr> <chr> <chr> #>  1  1982        1  5.21     0.21 curry roos~ NA    NA    NA    NA    NA    NA    #>  2  1983        2  5.42     0.19 curry roos~ NA    NA    NA    NA    NA    NA    #>  3  1984        5  5.57     0.17 bern~ losa~ mora  rioa~ sand~ sanm~ sant~ taos  #>  4  1985        1  6.82     0.08 bern~ catr~ dona~ linc~ sand~ sier~ soco~ torr~ #>  5  1986        2  7.53     0.01 bern~ catr~ dona~ linc~ sand~ sant~ sier~ soco~ #>  6  1987        2 10.3      0.01 colf~ guad~ hard~ losa~ mora  sanm~ sant~ taos  #>  7  1988        3  9.68     0.01 colf~ deba~ guad~ hard~ losa~ mora  quay  sanm~ #>  8  1989        4  7.87     0.04 losa~ sant~ NA    NA    NA    NA    NA    NA    #>  9  1990        5  5.66     0.11 colf~ guad~ hard~ losa~ mora  quay  sanm~ sant~ #> 10  1991       17  3.78     0.6  sier~ NA    NA    NA    NA    NA    NA    NA    #> # ... with 2 more variables: ...9 <chr>, ...10 <chr>, and abbreviated variable #> #   name 1: mc_pvalue trends_in_zone132 <- scan_results %>%   rowmute(all_clusters = report_top_clusters(scan_res, score, max_reported = Inf)) %>%   select(window_time_id, all_clusters) %>%   unnest(all_clusters) %>%   filter(zone == 132) %>%   left_join(years, by = c(\"window_time_id\" = \"id_time\"))   ggplot(trends_in_zone132, aes(x = year, y = mc_pvalue)) +    geom_line() +   geom_point()"},{"path":"/articles/statsurv_overview.html","id":"refining-our-approach","dir":"Articles","previous_headings":"Evaluating statistical surveillance methods","what":"Refining our approach","title":"An introduction to `statsurv`","text":"One strength statsurv ability swap bits pieces analysis keeping rest intact. simple example, can switch using poisson-based alarm function, using negative binomial-based alarm function: can also use CUSUM alarm function, instead scan-type alarm function: can also swap ’re preforming modeling. lm, glm, INLA, lme4, ARIMA, INLA work without modification, model augment function. Let’s get rid random effects fit data using regular glm model: Note use prep_strategy = \"NA\" control.predictor=list(compute = TRUE) order able extract accurate predictions glmer model. ability swap different parts surveillance system without change parts makes easier improve refine surveillance system developing .","code":"# Use the negative binomial scan function instead of the expectation-based poisson nb_scan_results <- model_predictions %>%   rowmute(scan_res = scan_eb_negbin2(aug_data, outcome_col = count, zones,                                       baseline_col = .fitted, n_mcsim = 99,                                      theta_col = 1)) cusum_results <- model_predictions %>%   rowmute(cumusm_res = parallel_cusum_poisson2(aug_data, count, .fitted)) model_fits <- windowed_data %>%   rowmute(training_data = prepare_training_data(curr_data,                                                  outcome_col = count,                                                 split_id = split_id,                                                  prep_strategy = \"NA\"),           mod =  glm(count ~ I(year - 1985) + offset(log(population)),                      family = poisson(link = \"log\"),                      data = training_data)   ) model_fits %>%   rowmute(aug_data = extract_yhat(mod, curr_data)) #> # A tibble: 10 x 7 #>    window_time_id window_space_id split_id curr_data training_d~1 mod   aug_data #>             <dbl> <list>             <dbl> <list>    <list>       <lis> <list>   #>  1             10 <dbl [32]>             8 <tibble>  <tibble>     <glm> <tibble> #>  2             11 <dbl [32]>             9 <tibble>  <tibble>     <glm> <tibble> #>  3             12 <dbl [32]>            10 <tibble>  <tibble>     <glm> <tibble> #>  4             13 <dbl [32]>            11 <tibble>  <tibble>     <glm> <tibble> #>  5             14 <dbl [32]>            12 <tibble>  <tibble>     <glm> <tibble> #>  6             15 <dbl [32]>            13 <tibble>  <tibble>     <glm> <tibble> #>  7             16 <dbl [32]>            14 <tibble>  <tibble>     <glm> <tibble> #>  8             17 <dbl [32]>            15 <tibble>  <tibble>     <glm> <tibble> #>  9             18 <dbl [32]>            16 <tibble>  <tibble>     <glm> <tibble> #> 10             19 <dbl [32]>            17 <tibble>  <tibble>     <glm> <tibble> #> # ... with abbreviated variable name 1: training_data"},{"path":"/articles/statsurv_overview.html","id":"other-features","dir":"Articles","previous_headings":"","what":"Other features","title":"An introduction to `statsurv`","text":"number features inside statsurv package might useful depending ’re trying . : Applying model different spatial locations: models, many ARIMA models, can handle single spatial location time. window_id_time function can include spatial location separate window. can fit model window, combine locations together using collapse_all function. Friendlier ARIMA models: ARIMA (Autoregressive Integrated Moving Average) models widely used analyze time series. number ways fit ARIMA models R, use different arguments specifications types models, lm glm models. arima_tidy function allows use fit ARIMA models covariates using formulas, instead passing matrix regressors. Surveillance Residuals: statistical surveillance, “surveillance residuals” defined difference observed data new time period predictions model fit using previous time periods. key difference ordinary model residuals surveillance residuals never calculated data points used fit model. theory, examining surveillance residuals allow statistical methods detect outbreaks clusters rapidly, since model used predict baseline estimates affected current outbreaks. practice, still open question whether using surveillance residuals ordinary residuals provides appreciable benefit. calculate_surveillance_residuals takes set data frames combines recent time period time periods one. data frames contain estimates sequentially fitting model, new set data frames contains surveillance residuals series model fits. Secondary Clusters: addition reporting likely cluster study area, scan statistics can used identify independent secondary clusters exist. order identify secondary clusters, must remove information clusters almost identical primary cluster. Calling function remove_overlapping_clusters running report_top_clusters identify independent secondary clusters.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paul Romer Present. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Romer Present P (2022). statsurv: Tools Spatiotemporal Statistical Surveillance. R package version 0.3.0, https://github.com/CO-TEEO/statsurv.","code":"@Manual{,   title = {statsurv: Tools for Spatiotemporal Statistical Surveillance},   author = {Paul {Romer Present}},   year = {2022},   note = {R package version 0.3.0},   url = {https://github.com/CO-TEEO/statsurv}, }"},{"path":"/index.html","id":"statsurv-a-package-for-developing-and-performing-statistical-surveillance","dir":"","previous_headings":"","what":"Tools for Spatiotemporal Statistical Surveillance","title":"Tools for Spatiotemporal Statistical Surveillance","text":"Statistical surveillance sort systematic, ongoing analysis aimed detecting changes outcomes occur. amount data reported large significant natural variability rate case events, statistical techniques can extremely helpful determining change number events important, merely noise. statsurv package designed help designing statistical surveillance system implementing routine use. One key part making easy apply statistical surveillance varying “windows” data, mimic process routinely implementing surveillance technique time. allows performance different statistical surveillance methods compared evaluated.","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview:","title":"Tools for Spatiotemporal Statistical Surveillance","text":"statsurv package designed performing statistical surveillance developing evaluating statistical surveillance methods. Typically, conduct statistical surveillance, need collect aggregate measurements variable interest, compare measurements baseline estimate, typically generated model. process repeated additional measurements collected time. functions package fall 5 main categories: Functions preparing data analysis Functions making easier generate predictions models Functions comparing outcomes baseline estimates (scan statistic functions) Functions used generate reports summaries surveillance outcomes Functions applying previous functions varying data windows developing statistical surveillance system scratch, generally first steps collect analyze data, compare model, run scan statistic generate results. first four categories functions used process. , process must repeated varying data windows see system performed routine use since data collection began. can performance system, including average time detect simulated cluster average rate false alarms, evaluated.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Paul S. Romer Present Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/reference/arima_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit ARIMA models via formula — arima_tidy","title":"Fit ARIMA models via formula — arima_tidy","text":"arima_tidy wrapper around arima allows specify response variable external regressors ARIMA model using data.frame formula, instead manually generate xreg. makes workflow fitting ARIMA models much closer workflow fitting lm glm models.","code":""},{"path":"/reference/arima_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit ARIMA models via formula — arima_tidy","text":"","code":"arima_tidy(   f,   data,   order = c(0L, 0L, 0L),   seasonal = list(order = c(0L, 0L, 0L), period = NA),   include.mean = TRUE,   transform.pars = TRUE,   fixed = NULL,   init = NULL,   method = c(\"CSS-ML\", \"ML\", \"CSS\"),   n.cond,   SSinit = c(\"Gardner1980\", \"Rossignol2011\"),   optim.method = \"BFGS\",   optim.control = list(),   kappa = 1e+06 )"},{"path":"/reference/arima_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit ARIMA models via formula — arima_tidy","text":"f formula describing response variable external regressors used arima model. variables included f must contained data. response variable passed arima x external regressors passed xreg. data data frame data frame extension (e.g., tibble) containing variables model order specification non-seasonal part ARIMA     model: three integer components \\((p, d, q)\\) AR order,     degree differencing, MA order. seasonal specification seasonal part ARIMA model, plus period. must specified list components order period. include.mean ARMA model include mean/intercept term?      default TRUE undifferenced series, ignored     ARIMA models differencing. transform.pars logical; true, AR parameters     transformed ensure remain region     stationarity.  used method = \"CSS\".      method = \"ML\", advantageous set     transform.pars = FALSE cases, see also fixed. fixed optional numeric vector length total     number coefficients estimated.  form     $$(\\phi_1, \\ldots, \\phi_p, \\theta_1, \\ldots, \\theta_q,       \\Phi_1, \\ldots, \\Phi_P, \\Theta_1, \\ldots, \\Theta_Q, \\mu),     $$     \\(\\phi_i\\) AR coefficients,     \\(\\theta_i\\) MA coefficients,     \\(\\Phi_i\\) seasonal AR coefficients,     \\(\\Theta_i\\) seasonal MA coefficients     \\(\\mu\\) intercept term.  Note \\(\\mu\\)     entry required include.mean TRUE.     particular present model ARIMA     model differencing. entries fixed vector consist     values user wishes “fix” corresponding     coefficient, NA coefficient     fixed, estimated. argument transform.pars set FALSE     AR parameters fixed.  warning given transform.pars     set (left default) TRUE.  may wise set     transform.pars = FALSE even fixing MA parameters,     especially values cause model nearly non-invertible. init optional numeric vector initial parameter     values.  Missing values filled , zeroes except     regression coefficients.  Values already specified fixed     ignored. method fitting method: maximum likelihood minimize     conditional sum--squares.  default (unless missing     values) use conditional-sum--squares find starting     values, maximum likelihood.  Can abbreviated. n.cond used fitting conditional-sum--squares:     number initial observations ignore.  ignored     less maximum lag AR term. SSinit string specifying algorithm compute     state-space initialization likelihood; see     KalmanLike details.   Can abbreviated. optim.method value passed method argument     optim. optim.control List control parameters optim. kappa prior variance (multiple innovations     variance) past observations differenced model.      reduce .","code":""},{"path":"/reference/arima_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit ARIMA models via formula — arima_tidy","text":"model fit object class \"arima_tidy\". extension Arima model fit produced arima, functions predict work identically. output arima_tidy contains additional components make working easier: formula formula used fit model data data used fit model xreg generated values xreg used external regressors fitted fitted values produced model. output arima contains residuals, fitted values.","code":""},{"path":[]},{"path":"/reference/arima_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit ARIMA models via formula — arima_tidy","text":"","code":"data(\"LakeHuron\") LakeHuron_df <- data.frame(lake_level = as.numeric(LakeHuron),                            date = seq(start(LakeHuron)[[1]],                                       end(LakeHuron)[[1]],                                       by = 1)) LakeHuron_df$election_year = LakeHuron_df$date %% 4 == 0  # Basically anything that works in a formula can be used in arima_tidy arima_tidy(lake_level ~ I(date - 1920), data = LakeHuron_df, order = c(2, 0, 0)) #>  #> Call: #> stats::arima(x = resp, order = order, seasonal = seasonal, xreg = xreg, include.mean = include.mean,  #>     transform.pars = transform.pars, fixed = fixed, init = init, method = method,  #>     n.cond = n.cond, SSinit = SSinit, optim.method = optim.method, optim.control = optim.control,  #>     kappa = kappa) #>  #> Coefficients: #>          ar1      ar2  intercept  I(date - 1920) #>       1.0048  -0.2913   579.0993         -0.0216 #> s.e.  0.0976   0.1004     0.2370          0.0081 #>  #> sigma^2 estimated as 0.4566:  log likelihood = -101.2,  aic = 212.4  arima_tidy(sqrt(lake_level) ~ date + election_year, data = LakeHuron_df, order = c(2, 0, 0)) #>  #> Call: #> stats::arima(x = resp, order = order, seasonal = seasonal, xreg = xreg, include.mean = include.mean,  #>     transform.pars = transform.pars, fixed = fixed, init = init, method = method,  #>     n.cond = n.cond, SSinit = SSinit, optim.method = optim.method, optim.control = optim.control,  #>     kappa = kappa) #>  #> Coefficients: #> Warning: NaNs produced #>          ar1      ar2  intercept    date  election_yearTRUE #>       1.0058  -0.2928    24.9299  -5e-04             0.0011 #> s.e.  0.0854      NaN     0.3214   1e-04             0.0020 #>  #> sigma^2 estimated as 0.0001965:  log likelihood = 278.59,  aic = -545.18  # We can reference variables outside of the `data` argument  shift <- 2000 arima_tidy(sqrt(lake_level) ~ log(date + shift),  data = LakeHuron_df, order = c(2, 0, 0)) #>  #> Call: #> stats::arima(x = resp, order = order, seasonal = seasonal, xreg = xreg, include.mean = include.mean,  #>     transform.pars = transform.pars, fixed = fixed, init = init, method = method,  #>     n.cond = n.cond, SSinit = SSinit, optim.method = optim.method, optim.control = optim.control,  #>     kappa = kappa) #>  #> Coefficients: #>          ar1      ar2  intercept  log(date + shift) #>       1.0046  -0.2917    38.6558            -1.7636 #> s.e.  0.0976   0.1003     5.4524             0.6589 #>  #> sigma^2 estimated as 0.0001971:  log likelihood = 278.44,  aic = -546.89  # We can handle data with NA's and seasonal data: data(\"presidents_df\")  arima_tidy(approval_rating ~ 1, data = presidents_df, order = c(1, 0, 0)) #>  #> Call: #> stats::arima(x = resp, order = order, seasonal = seasonal, xreg = NULL, include.mean = include.mean,  #>     transform.pars = transform.pars, fixed = fixed, init = init, method = method,  #>     n.cond = n.cond, SSinit = SSinit, optim.method = optim.method, optim.control = optim.control,  #>     kappa = kappa) #>  #> Coefficients: #>          ar1  intercept #>       0.8242    56.1505 #> s.e.  0.0555     4.6434 #>  #> sigma^2 estimated as 85.47:  log likelihood = -416.89,  aic = 839.78  # We lose the frequency information when the data is # stored in a data.frame, so we have to specify # the period manually for seasonal approaches: arima_tidy(approval_rating ~ 1, data = presidents_df, order=c(2,0,1),            seasonal= list(order = c(1,0,0), period = 4),            fixed=c(NA, NA, 0.5, -0.1, 50), transform.pars=FALSE) #>  #> Call: #> stats::arima(x = resp, order = order, seasonal = seasonal, xreg = NULL, include.mean = include.mean,  #>     transform.pars = transform.pars, fixed = fixed, init = init, method = method,  #>     n.cond = n.cond, SSinit = SSinit, optim.method = optim.method, optim.control = optim.control,  #>     kappa = kappa) #>  #> Coefficients: #>          ar1     ar2  ma1  sar1  intercept #>       0.2047  0.6269  0.5  -0.1         50 #> s.e.  0.0734  0.0747  0.0   0.0          0 #>  #> sigma^2 estimated as 84.01:  log likelihood = -416.07,  aic = 838.14"},{"path":"/reference/augment.arima_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Augment data with information from an arima_tidy object — augment.arima_tidy","title":"Augment data with information from an arima_tidy object — augment.arima_tidy","text":"method augment generic arima_tidy objects. Takes model object dataset, adds information fitted values .fitted column model residuals .resid column.","code":""},{"path":"/reference/augment.arima_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Augment data with information from an arima_tidy object — augment.arima_tidy","text":"","code":"# S3 method for arima_tidy augment(x, newdata, ...)"},{"path":"/reference/augment.arima_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Augment data with information from an arima_tidy object — augment.arima_tidy","text":"x result arima_tidy fit. newdata data used originally fit model well additional data used generate predictions. rows assumed ordered earliest latest. originally model fit n data points, first n rows newdata assumed data used fit model, additional rows used generate predictions using predict.arima_tidy. ... Additional arguments. used.","code":""},{"path":"/reference/augment.arima_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Augment data with information from an arima_tidy object — augment.arima_tidy","text":"newdata additional columns .fitted .resid containing predicted values residuals.","code":""},{"path":"/reference/augment.arima_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Augment data with information from an arima_tidy object — augment.arima_tidy","text":"","code":"data(presidents_df) # Fit on the first 110 rows, predict the last 10 fit <- arima_tidy(approval_rating ~ 1,                   data = presidents_df[1:110, ],                   order = c(1, 0, 0)) # Augment takes the whole dataset (both training and prediction data) augment(fit, presidents_df) #>     approval_rating    date election_year  .fitted       .resid #> 1                NA 1945.25             0       NA           NA #> 2                87 1945.50             0 69.51369  17.48630754 #> 3                82 1945.75             0 80.96226   1.03773849 #> 4                75 1946.00             0 77.02747  -2.02747477 #> 5                63 1946.25             0 71.51877  -8.51877333 #> 6                50 1946.50             0 62.07529 -12.07528515 #> 7                43 1946.75             0 51.84484  -8.84483963 #> 8                32 1947.00             0 46.33614 -14.33613819 #> 9                35 1947.25             0 37.67961  -2.67960736 #> 10               60 1947.50             0 40.04048  19.95952060 #> 11               54 1947.75             0 59.71441  -5.71441311 #> 12               55 1948.00             1 54.99267   0.00733098 #> 13               36 1948.25             1 55.77963 -19.77962637 #> 14               39 1948.50             1 40.82744  -1.82743675 #> 15               NA 1948.75             1       NA           NA #> 16               NA 1949.00             0       NA           NA #> 17               69 1949.25             0 54.92311  14.07689119 #> 18               57 1949.50             0 66.79703  -9.79702924 #> 19               57 1949.75             0 57.35354  -0.35354106 #> 20               51 1950.00             0 57.35354  -6.35354106 #> 21               45 1950.25             0 52.63180  -7.63179698 #> 22               37 1950.50             0 47.91005 -10.91005289 #> 23               46 1950.75             0 41.61439   4.38560590 #> 24               39 1951.00             0 48.69701  -9.69701023 #> 25               36 1951.25             0 43.18831  -7.18830880 #> 26               24 1951.50             0 40.82744 -16.82743675 #> 27               32 1951.75             0 31.38395   0.61605143 #> 28               23 1952.00             1 37.67961 -14.67960736 #> 29               25 1952.25             1 30.59699  -5.59699122 #> 30               32 1952.50             1 32.17091  -0.17090592 #> 31               NA 1952.75             1       NA           NA #> 32               32 1953.00             0 39.97570  -7.97569599 #> 33               59 1953.25             0 37.67961  21.32039264 #> 34               74 1953.50             0 58.92746  15.07254424 #> 35               75 1953.75             0 70.73182   4.26818402 #> 36               60 1954.00             0 71.51877 -11.51877333 #> 37               71 1954.25             0 59.71441  11.28558689 #> 38               61 1954.50             0 68.37094  -7.37094394 #> 39               71 1954.75             0 60.50137  10.49862954 #> 40               57 1955.00             0 68.37094 -11.37094394 #> 41               71 1955.25             0 57.35354  13.64645894 #> 42               68 1955.50             0 68.37094  -0.37094394 #> 43               79 1955.75             0 66.01007  12.98992810 #> 44               73 1956.00             1 74.66660  -1.66660273 #> 45               76 1956.25             1 69.94486   6.05514136 #> 46               71 1956.50             1 72.30573  -1.30573068 #> 47               67 1956.75             1 68.37094  -1.37094394 #> 48               75 1957.00             0 65.22311   9.77688545 #> 49               79 1957.25             0 71.51877   7.48122667 #> 50               62 1957.50             0 74.66660 -12.66660273 #> 51               63 1957.75             0 61.28833   1.71167219 #> 52               57 1958.00             0 62.07529  -5.07528515 #> 53               60 1958.25             0 57.35354   2.64645894 #> 54               49 1958.50             0 59.71441 -10.71441311 #> 55               48 1958.75             0 51.05788  -3.05788228 #> 56               52 1959.00             0 50.27092   1.72907507 #> 57               57 1959.25             0 53.41875   3.58124568 #> 58               62 1959.50             0 57.35354   4.64645894 #> 59               61 1959.75             0 61.28833  -0.28832781 #> 60               66 1960.00             1 60.50137   5.49862954 #> 61               71 1960.25             1 64.43616   6.56384280 #> 62               62 1960.50             1 68.37094  -6.37094394 #> 63               61 1960.75             1 61.28833  -0.28832781 #> 64               57 1961.00             0 60.50137  -3.50137046 #> 65               72 1961.25             0 57.35354  14.64645894 #> 66               83 1961.50             0 69.15790  13.84209871 #> 67               71 1961.75             0 77.81443  -6.81443212 #> 68               78 1962.00             0 68.37094   9.62905606 #> 69               79 1962.25             0 73.87965   5.12035462 #> 70               71 1962.50             0 74.66660  -3.66660273 #> 71               62 1962.75             0 68.37094  -6.37094394 #> 72               74 1963.00             0 61.28833  12.71167219 #> 73               76 1963.25             0 70.73182   5.26818402 #> 74               64 1963.50             0 72.30573  -8.30573068 #> 75               62 1963.75             0 62.86224  -0.86224250 #> 76               57 1964.00             1 61.28833  -4.28832781 #> 77               80 1964.25             1 57.35354  22.64645894 #> 78               73 1964.50             1 75.45356  -2.45356007 #> 79               69 1964.75             1 69.94486  -0.94485864 #> 80               69 1965.00             0 66.79703   2.20297076 #> 81               71 1965.25             0 66.79703   4.20297076 #> 82               64 1965.50             0 68.37094  -4.37094394 #> 83               69 1965.75             0 62.86224   6.13775750 #> 84               62 1966.00             0 66.79703  -4.79702924 #> 85               63 1966.25             0 61.28833   1.71167219 #> 86               46 1966.50             0 62.07529 -16.07528515 #> 87               56 1966.75             0 48.69701   7.30298977 #> 88               44 1967.00             0 56.56658 -12.56658372 #> 89               44 1967.25             0 47.12310  -3.12309554 #> 90               52 1967.50             0 47.12310   4.87690446 #> 91               38 1967.75             0 53.41875 -15.41875432 #> 92               46 1968.00             1 42.40135   3.59864855 #> 93               36 1968.25             1 48.69701 -12.69701023 #> 94               49 1968.50             1 40.82744   8.17256325 #> 95               35 1968.75             1 51.05788 -16.05788228 #> 96               44 1969.00             0 40.04048   3.95952060 #> 97               59 1969.25             0 47.12310  11.87690446 #> 98               65 1969.50             0 58.92746   6.07254424 #> 99               65 1969.75             0 63.64920   1.35080015 #> 100              56 1970.00             0 63.64920  -7.64919985 #> 101              66 1970.25             0 56.56658   9.43341628 #> 102              53 1970.50             0 64.43616 -11.43615720 #> 103              61 1970.75             0 54.20571   6.79428833 #> 104              52 1971.00             0 60.50137  -8.50137046 #> 105              51 1971.25             0 53.41875  -2.41875432 #> 106              48 1971.50             0 52.63180  -4.63179698 #> 107              54 1971.75             0 50.27092   3.72907507 #> 108              49 1972.00             1 54.99267  -5.99266902 #> 109              49 1972.25             1 51.05788  -2.05788228 #> 110              61 1972.50             1 51.05788   9.94211772 #> 111              NA 1972.75             1 60.50137           NA #> 112              NA 1973.00             0 60.10897           NA #> 113              68 1973.25             0 59.80017   8.19983193 #> 114              44 1973.50             0 59.55715 -15.55715390 #> 115              40 1973.75             0 59.36591 -19.36591212 #> 116              27 1974.00             0 59.21541 -32.21541299 #> 117              28 1974.25             0 59.09698 -31.09697660 #> 118              25 1974.50             0 59.00377 -34.00377221 #> 119              24 1974.75             0 58.93042 -34.93042433 #> 120              24 1975.00             0 58.87270 -34.87270267  fit <- arima_tidy(approval_rating ~ election_year,                   data = presidents_df[1:110, ],                   order = c(1, 0, 0)) augment(fit, presidents_df) #>     approval_rating    date election_year  .fitted      .resid #> 1                NA 1945.25             0       NA          NA #> 2                87 1945.50             0 69.93468  17.0653153 #> 3                82 1945.75             0 81.07760   0.9223990 #> 4                75 1946.00             0 77.15253  -2.1525269 #> 5                63 1946.25             0 71.65742  -8.6574231 #> 6                50 1946.50             0 62.23725 -12.2372452 #> 7                43 1946.75             0 52.03205  -9.0320525 #> 8                32 1947.00             0 46.53695 -14.5369487 #> 9                35 1947.25             0 37.90179  -2.9017857 #> 10               60 1947.50             0 40.25683  19.7431699 #> 11               54 1947.75             0 59.88220  -5.8822008 #> 12               55 1948.00             1 52.05969   2.9403066 #> 13               36 1948.25             1 55.28800 -19.2880028 #> 14               39 1948.50             1 40.37272  -1.3727211 #> 15               NA 1948.75             1       NA          NA #> 16               NA 1949.00             0       NA          NA #> 17               69 1949.25             0 56.30450  12.6955032 #> 18               57 1949.50             0 66.94733  -9.9473342 #> 19               57 1949.75             0 57.52716  -0.5271563 #> 20               51 1950.00             0 57.52716  -6.5271563 #> 21               45 1950.25             0 52.81707  -7.8170673 #> 22               37 1950.50             0 48.10698 -11.1069784 #> 23               46 1950.75             0 41.82686   4.1731402 #> 24               39 1951.00             0 48.89199  -9.8919932 #> 25               36 1951.25             0 43.39689  -7.3968894 #> 26               24 1951.50             0 41.04184 -17.0418450 #> 27               32 1951.75             0 31.62167   0.3783329 #> 28               23 1952.00             1 34.78937 -11.7893672 #> 29               25 1952.25             1 30.16753  -5.1675284 #> 30               32 1952.50             1 31.73756   0.2624419 #> 31               NA 1952.75             1       NA          NA #> 32               32 1953.00             0 41.79519  -9.7951905 #> 33               59 1953.25             0 37.90179  21.0982143 #> 34               74 1953.50             0 59.09719  14.9028141 #> 35               75 1953.75             0 70.87241   4.1275917 #> 36               60 1954.00             0 71.65742 -11.6574231 #> 37               71 1954.25             0 59.88220  11.1177992 #> 38               61 1954.50             0 68.51736  -7.5173638 #> 39               71 1954.75             0 60.66722  10.3327844 #> 40               57 1955.00             0 68.51736 -11.5173638 #> 41               71 1955.25             0 57.52716  13.4728437 #> 42               68 1955.50             0 68.51736  -0.5173638 #> 43               79 1955.75             0 66.16232  12.8376806 #> 44               73 1956.00             1 71.68506   1.3149360 #> 45               76 1956.25             1 69.41827   6.5817303 #> 46               71 1956.50             1 71.77331  -0.7733141 #> 47               67 1956.75             1 67.84824  -0.8482400 #> 48               75 1957.00             0 67.82060   7.1794008 #> 49               79 1957.25             0 71.65742   7.3425769 #> 50               62 1957.50             0 74.79748 -12.7974824 #> 51               63 1957.75             0 61.45223   1.5477696 #> 52               57 1958.00             0 62.23725  -5.2372452 #> 53               60 1958.25             0 57.52716   2.4728437 #> 54               49 1958.50             0 59.88220 -10.8822008 #> 55               48 1958.75             0 51.24704  -3.2470377 #> 56               52 1959.00             0 50.46202   1.5379771 #> 57               57 1959.25             0 53.60208   3.3979178 #> 58               62 1959.50             0 57.52716   4.4728437 #> 59               61 1959.75             0 61.45223  -0.4522304 #> 60               66 1960.00             1 57.55480   8.4452029 #> 61               71 1960.25             1 63.92317   7.0768341 #> 62               62 1960.50             1 67.84824  -5.8482400 #> 63               61 1960.75             1 60.78311   0.2168934 #> 64               57 1961.00             0 63.11051  -6.1105102 #> 65               72 1961.25             0 57.52716  14.4728437 #> 66               83 1961.50             0 69.30238  13.6976213 #> 67               71 1961.75             0 77.93754  -6.9375417 #> 68               78 1962.00             0 68.51736   9.4826362 #> 69               79 1962.25             0 74.01247   4.9875324 #> 70               71 1962.50             0 74.79748  -3.7974824 #> 71               62 1962.75             0 68.51736  -6.5173638 #> 72               74 1963.00             0 61.45223  12.5477696 #> 73               76 1963.25             0 70.87241   5.1275917 #> 74               64 1963.50             0 72.44244  -8.4424380 #> 75               62 1963.75             0 63.02226  -1.0222601 #> 76               57 1964.00             1 58.33981  -1.3398120 #> 77               80 1964.25             1 56.85803  23.1419675 #> 78               73 1964.50             1 74.91337  -1.9133734 #> 79               69 1964.75             1 69.41827  -0.4182697 #> 80               69 1965.00             0 69.39063  -0.3906288 #> 81               71 1965.25             0 66.94733   4.0526658 #> 82               64 1965.50             0 68.51736  -4.5173638 #> 83               69 1965.75             0 63.02226   5.9777399 #> 84               62 1966.00             0 66.94733  -4.9473342 #> 85               63 1966.25             0 61.45223   1.5477696 #> 86               46 1966.50             0 62.23725 -16.2372452 #> 87               56 1966.75             0 48.89199   7.1080068 #> 88               44 1967.00             0 56.74214 -12.7421415 #> 89               44 1967.25             0 47.32196  -3.3219636 #> 90               52 1967.50             0 47.32196   4.6780364 #> 91               38 1967.75             0 53.60208 -15.6020822 #> 92               46 1968.00             1 39.49946   6.5005438 #> 93               36 1968.25             1 48.22287 -12.2228694 #> 94               49 1968.50             1 40.37272   8.6272789 #> 95               35 1968.75             1 50.57791 -15.5779139 #> 96               44 1969.00             0 42.70012   1.2998752 #> 97               59 1969.25             0 47.32196  11.6780364 #> 98               65 1969.50             0 59.09719   5.9028141 #> 99               65 1969.75             0 63.80727   1.1927251 #> 100              56 1970.00             0 63.80727  -7.8072749 #> 101              66 1970.25             0 56.74214   9.2578585 #> 102              53 1970.50             0 64.59229 -11.5922897 #> 103              61 1970.75             0 54.38710   6.6129030 #> 104              52 1971.00             0 60.66722  -8.6672156 #> 105              51 1971.25             0 53.60208  -2.6020822 #> 106              48 1971.50             0 52.81707  -4.8170673 #> 107              54 1971.75             0 50.46202   3.5379771 #> 108              49 1972.00             1 52.05969  -3.0596934 #> 109              49 1972.25             1 50.57791  -1.5779139 #> 110              61 1972.50             1 50.57791  10.4220861 #> 111              NA 1972.75             1 59.99809          NA #> 112              NA 1973.00             0 62.32400          NA #> 113              68 1973.25             0 61.70657   6.2934268 #> 114              44 1973.50             0 61.22189 -17.2218860 #> 115              40 1973.75             0 60.84140 -20.8413994 #> 116              27 1974.00             0 60.54271 -33.5427118 #> 117              28 1974.25             0 60.30824 -32.3082376 #> 118              25 1974.50             0 60.12417 -35.1241718 #> 119              24 1974.75             0 59.97968 -35.9796775 #> 120              24 1975.00             0 59.86625 -35.8662473"},{"path":"/reference/calculate_alarm_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the category of an alarm function — calculate_alarm_type","title":"Identify the category of an alarm function — calculate_alarm_type","text":"`statsurv` uses two different forms alarm functions: scan-type alarms,   calcualte alarm statistic large number spatial zones, parallel-type alarms,   calculate alarm statistic individual spatial locations. identifiable   whether name alarm function starts \"scan_\" \"parallel_\".","code":""},{"path":"/reference/calculate_alarm_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the category of an alarm function — calculate_alarm_type","text":"","code":"calculate_alarm_type(alarm_function_name)"},{"path":"/reference/calculate_alarm_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the category of an alarm function — calculate_alarm_type","text":"alarm_function_name name alarm function question, character string.","code":""},{"path":"/reference/calculate_alarm_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the category of an alarm function — calculate_alarm_type","text":"Either \"scan\" \"parallel\".","code":""},{"path":"/reference/calculate_alarm_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the category of an alarm function — calculate_alarm_type","text":"","code":"calculate_alarm_type(\"scan_eb_poisson\") #> [1] \"scan\" calculate_alarm_type(\"parallel_cusum_poisson\") #> [1] \"parallel\""},{"path":"/reference/calculate_surveillance_residuals.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"statistical surveillance, \"surveillance residuals\" defined difference observed data new time period predictions model fit using previous time periods. key difference ordinary model residuals surveillance residuals never calculated data points used fit model. theory, examining surveillance residuals allow statistical methods detect outbreaks clusters rapidly, since model used predict baseline estimates affected current outbreaks. practice, still open question whether using surveillance residuals ordinary residuals provides appreciable benefit. calculate_surveillance_residuals takes set data frames combines recent time period time periods one. data frames contain estimates sequentially fitting model, new set data frames contains surveillance residuals series model fits.","code":""},{"path":"/reference/calculate_surveillance_residuals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"","code":"calculate_surveillance_residuals(   list_of_dataframes,   window_time_ids,   split_ids,   grow_length = FALSE,   include_init = FALSE,   check_space_ids = TRUE )"},{"path":"/reference/calculate_surveillance_residuals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"list_of_dataframes list data frames data frame extensions, organized oldest newest.  data frame must includes columns 'id_space' 'id_time' set consecutive integers. column 'id_time' identifies time point associated row, lower numbers earlier higher numbers later. column 'id_space' identifies spatial location area associated row, meaning order ascribed values. window_time_ids vector length list_of_dataframes. entry value id_time associated data frame list_of_dataframes. example, list_of_dataframes contains model output, window_time_ids time point model run, latest timepoint included model. split_ids vector length list_of_dataframes. entry value id_time marks beginning prediction data data frame. grow_length Boolean. size returned dataframes increase number available surveillance predictions increase? include_init Boolean. output include time points always used fitting model never predictions generated ? include_init TRUE grow_length false, dimensions returned data frames identical size input data frames. check_space_ids Boolean. function throw error values id_space data frame . Defaults TRUE, use caution overriding.","code":""},{"path":"/reference/calculate_surveillance_residuals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"list data frames giving surveillance predictions every entry list_of_dataframes. grow_length = FALSE, surveillance predictions never reported time point included corresponding dataframe list_of_dataframes. grow_lenth = TRUE, data frame contain surveillance predictions calculated point. include_init = TRUE, data frame also include data points never predictions generated .","code":""},{"path":"/reference/calculate_surveillance_residuals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"Unlike ordinary model predictions, reported data points, surveillance predictions reported points used calculating model fit. example, model run time \\(t\\) time points \\(0\\) \\((t-1)\\) used calculate model fit, model predictions generated time points \\(0\\) \\(t\\), surveillance predictions time point \\(t\\). calculate_surveillance_residuals can used list data frames, designed used series  predictions model fit sequentially growing set data. Given list ordinary model predictions, model fit sequentially different sets data, convert_to_surveillance combines surveillance predictions multiple model fits. time period predictions generated , recent value reported.","code":""},{"path":"/reference/calculate_surveillance_residuals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine the most recent data points from a sequence of data frames — calculate_surveillance_residuals","text":"","code":"library(\"scanstatistics\") library(\"magrittr\") library(\"broom\") data(NM_popcas)  # Generate a series of model predictions, each time including the data from another year: spacetime_data <- NM_popcas %>%   dplyr::mutate(id_time = year - min(year),                 id_space = as.numeric(factor(county)))  windowed_data <- spacetime_data %>%   window_idtime(min_train = 5, max_train = 5, n_predict = 1)  model_res <- windowed_data %>%   rowmute(training_data = prepare_training_data(curr_data, count, split_id),           model_fit = glm(count ~ year, family = poisson(),                           offset = log(population), data = training_data),           model_predictions = extract_yhat(model_fit, newdata = curr_data)) # The sequential model predictions are now stored in the model_res$model_predictions  # Use convert_to_surveillance to take the last time period # from each model prediction calculate_surveillance_residuals(model_res$model_predictions,                                  model_res$window_time_id,                                  model_res$split_id) #> [[1]] #> # A tibble: 32 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 22 more rows #>  #> [[2]] #> # A tibble: 64 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 54 more rows #>  #> [[3]] #> # A tibble: 96 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 86 more rows #>  #> [[4]] #> # A tibble: 128 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 118 more rows #>  #> [[5]] #> # A tibble: 160 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 150 more rows #>  #> [[6]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 182 more rows #>  #> [[7]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1980 bernalillo     416461    22       7        1 16.1    #>  2  1980 catron           2639     0       7        2  0.102  #>  3  1980 chaves          51928     2       7        3  2.01   #>  4  1980 colfax          14049     0       7        4  0.544  #>  5  1980 curry           41846     0       7        5  1.62   #>  6  1980 debaca           2448     1       7        6  0.0948 #>  7  1980 donaana         96111     4       7        7  3.72   #>  8  1980 eddy            50760     0       7        8  1.96   #>  9  1980 grant           27310     2       7        9  1.06   #> 10  1980 guadalupe        4394     0       7       10  0.170  #> # ... with 182 more rows #>  #> [[8]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1981 bernalillo     425133    21       8        1  19.3   #>  2  1981 catron           2657     0       8        2   0.121 #>  3  1981 chaves          52810     3       8        3   2.40  #>  4  1981 colfax          14124     0       8        4   0.641 #>  5  1981 curry           41887     0       8        5   1.90  #>  6  1981 debaca           2437     0       8        6   0.111 #>  7  1981 donaana         99704     5       8        7   4.53  #>  8  1981 eddy            51595     2       8        8   2.34  #>  9  1981 grant           27670     0       8        9   1.26  #> 10  1981 guadalupe        4338     0       8       10   0.197 #> # ... with 182 more rows #>  #> [[9]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1982 bernalillo     433476    21       9        1 15.4    #>  2  1982 catron           2668     0       9        2  0.0949 #>  3  1982 chaves          53643     3       9        3  1.91   #>  4  1982 colfax          14155     1       9        4  0.503  #>  5  1982 curry           41977     6       9        5  1.49   #>  6  1982 debaca           2425     0       9        6  0.0862 #>  7  1982 donaana        103450     4       9        7  3.68   #>  8  1982 eddy            52235     5       9        8  1.86   #>  9  1982 grant           27968     1       9        9  0.994  #> 10  1982 guadalupe        4288     0       9       10  0.152  #> # ... with 182 more rows #>  #> [[10]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1983 bernalillo     441490    26      10        1 17.9    #>  2  1983 catron           2673     0      10        2  0.108  #>  3  1983 chaves          54428     4      10        3  2.21   #>  4  1983 colfax          14143     0      10        4  0.574  #>  5  1983 curry           42115     1      10        5  1.71   #>  6  1983 debaca           2413     0      10        6  0.0979 #>  7  1983 donaana        107350     2      10        7  4.35   #>  8  1983 eddy            52681     0      10        8  2.14   #>  9  1983 grant           28202     0      10        9  1.14   #> 10  1983 guadalupe        4244     0      10       10  0.172  #> # ... with 182 more rows #>  #> [[11]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1984 bernalillo     449175    17      11        1  21.7   #>  2  1984 catron           2671     0      11        2   0.129 #>  3  1984 chaves          55164     4      11        3   2.67  #>  4  1984 colfax          14089     0      11        4   0.681 #>  5  1984 curry           42302     0      11        5   2.04  #>  6  1984 debaca           2400     0      11        6   0.116 #>  7  1984 donaana        111404     5      11        7   5.38  #>  8  1984 eddy            52932     2      11        8   2.56  #>  9  1984 grant           28373     1      11        9   1.37  #> 10  1984 guadalupe        4206     0      11       10   0.203 #> # ... with 182 more rows #>  #> [[12]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1985 bernalillo     456531    28      12        1  19.3   #>  2  1985 catron           2663     1      12        2   0.112 #>  3  1985 chaves          55851     4      12        3   2.36  #>  4  1985 colfax          13991     2      12        4   0.590 #>  5  1985 curry           42537     1      12        5   1.79  #>  6  1985 debaca           2387     0      12        6   0.101 #>  7  1985 donaana        115613    10      12        7   4.88  #>  8  1985 eddy            52989     3      12        8   2.23  #>  9  1985 grant           28481     2      12        9   1.20  #> 10  1985 guadalupe        4173     0      12       10   0.176 #> # ... with 182 more rows #>  #> [[13]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1986 bernalillo     463558    27      13        1  26.6   #>  2  1986 catron           2648     1      13        2   0.152 #>  3  1986 chaves          56490     2      13        3   3.24  #>  4  1986 colfax          13851     1      13        4   0.794 #>  5  1986 curry           42821     2      13        5   2.46  #>  6  1986 debaca           2374     0      13        6   0.136 #>  7  1986 donaana        119975     9      13        7   6.88  #>  8  1986 eddy            52851     1      13        8   3.03  #>  9  1986 grant           28526     0      13        9   1.64  #> 10  1986 guadalupe        4147     1      13       10   0.238 #> # ... with 182 more rows #>   # Repeat with grow_length = FALSE, init = TRUE, # so the dimensions of the output match the dimensions of the input calculate_surveillance_residuals(model_res$model_predictions,                                  model_res$window_time_id,                                  model_res$split_id,                                  grow_length = FALSE,                                  include_init = TRUE) #> [[1]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1974 bernalillo     357520    16       1        1  15.8   #>  2  1974 catron           2393     0       1        2   0.106 #>  3  1974 chaves          45616     3       1        3   2.02  #>  4  1974 colfax          12700     1       1        4   0.561 #>  5  1974 curry           42613     2       1        5   1.88  #>  6  1974 debaca           2506     0       1        6   0.111 #>  7  1974 donaana         77790     3       1        7   3.44  #>  8  1974 eddy            41667     1       1        8   1.84  #>  9  1974 grant           23816     0       1        9   1.05  #> 10  1974 guadalupe        4856     0       1       10   0.215 #> # ... with 182 more rows #>  #> [[2]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1975 bernalillo     368166    16       2        1  15.7   #>  2  1975 catron           2450     0       2        2   0.105 #>  3  1975 chaves          46789     3       2        3   2.00  #>  4  1975 colfax          13032     1       2        4   0.556 #>  5  1975 curry           42364     3       2        5   1.81  #>  6  1975 debaca           2498     0       2        6   0.107 #>  7  1975 donaana         80459     2       2        7   3.43  #>  8  1975 eddy            43669     1       2        8   1.86  #>  9  1975 grant           24556     0       2        9   1.05  #> 10  1975 guadalupe        4764     0       2       10   0.203 #> # ... with 182 more rows #>  #> [[3]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1976 bernalillo     378483    16       3        1  15.6   #>  2  1976 catron           2501     0       3        2   0.103 #>  3  1976 chaves          47914     1       3        3   1.98  #>  4  1976 colfax          13322     1       3        4   0.550 #>  5  1976 curry           42164     3       3        5   1.74  #>  6  1976 debaca           2489     0       3        6   0.103 #>  7  1976 donaana         83281     1       3        7   3.44  #>  8  1976 eddy            45476     1       3        8   1.88  #>  9  1976 grant           25234     1       3        9   1.04  #> 10  1976 guadalupe        4678     0       3       10   0.193 #> # ... with 182 more rows #>  #> [[4]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1977 bernalillo     388471    15       4        1 15.5    #>  2  1977 catron           2545     0       4        2  0.101  #>  3  1977 chaves          48990     1       4        3  1.95   #>  4  1977 colfax          13568     0       4        4  0.541  #>  5  1977 curry           42011     4       4        5  1.68   #>  6  1977 debaca           2479     0       4        6  0.0988 #>  7  1977 donaana         86258     4       4        7  3.44   #>  8  1977 eddy            47089     3       4        8  1.88   #>  9  1977 grant           25847     1       4        9  1.03   #> 10  1977 guadalupe        4598     0       4       10  0.183  #> # ... with 182 more rows #>  #> [[5]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1978 bernalillo     398130    18       5        1 15.3    #>  2  1978 catron           2583     0       5        2  0.0995 #>  3  1978 chaves          50018     1       5        3  1.93   #>  4  1978 colfax          13771     0       5        4  0.531  #>  5  1978 curry           41908     3       5        5  1.61   #>  6  1978 debaca           2469     0       5        6  0.0951 #>  7  1978 donaana         89388     5       5        7  3.44   #>  8  1978 eddy            48507     1       5        8  1.87   #>  9  1978 grant           26398     0       5        9  1.02   #> 10  1978 guadalupe        4524     0       5       10  0.174  #> # ... with 182 more rows #>  #> [[6]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1979 bernalillo     407460    19       6        1 15.2    #>  2  1979 catron           2614     0       6        2  0.0974 #>  3  1979 chaves          50997     5       6        3  1.90   #>  4  1979 colfax          13932     1       6        4  0.519  #>  5  1979 curry           41852     1       6        5  1.56   #>  6  1979 debaca           2459     0       6        6  0.0916 #>  7  1979 donaana         92673     4       6        7  3.45   #>  8  1979 eddy            49731     2       6        8  1.85   #>  9  1979 grant           26885     1       6        9  1.00   #> 10  1979 guadalupe        4456     0       6       10  0.166  #> # ... with 182 more rows #>  #> [[7]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1980 bernalillo     416461    22       7        1 16.1    #>  2  1980 catron           2639     0       7        2  0.102  #>  3  1980 chaves          51928     2       7        3  2.01   #>  4  1980 colfax          14049     0       7        4  0.544  #>  5  1980 curry           41846     0       7        5  1.62   #>  6  1980 debaca           2448     1       7        6  0.0948 #>  7  1980 donaana         96111     4       7        7  3.72   #>  8  1980 eddy            50760     0       7        8  1.96   #>  9  1980 grant           27310     2       7        9  1.06   #> 10  1980 guadalupe        4394     0       7       10  0.170  #> # ... with 182 more rows #>  #> [[8]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1981 bernalillo     425133    21       8        1  19.3   #>  2  1981 catron           2657     0       8        2   0.121 #>  3  1981 chaves          52810     3       8        3   2.40  #>  4  1981 colfax          14124     0       8        4   0.641 #>  5  1981 curry           41887     0       8        5   1.90  #>  6  1981 debaca           2437     0       8        6   0.111 #>  7  1981 donaana         99704     5       8        7   4.53  #>  8  1981 eddy            51595     2       8        8   2.34  #>  9  1981 grant           27670     0       8        9   1.26  #> 10  1981 guadalupe        4338     0       8       10   0.197 #> # ... with 182 more rows #>  #> [[9]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1982 bernalillo     433476    21       9        1 15.4    #>  2  1982 catron           2668     0       9        2  0.0949 #>  3  1982 chaves          53643     3       9        3  1.91   #>  4  1982 colfax          14155     1       9        4  0.503  #>  5  1982 curry           41977     6       9        5  1.49   #>  6  1982 debaca           2425     0       9        6  0.0862 #>  7  1982 donaana        103450     4       9        7  3.68   #>  8  1982 eddy            52235     5       9        8  1.86   #>  9  1982 grant           27968     1       9        9  0.994  #> 10  1982 guadalupe        4288     0       9       10  0.152  #> # ... with 182 more rows #>  #> [[10]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1983 bernalillo     441490    26      10        1 17.9    #>  2  1983 catron           2673     0      10        2  0.108  #>  3  1983 chaves          54428     4      10        3  2.21   #>  4  1983 colfax          14143     0      10        4  0.574  #>  5  1983 curry           42115     1      10        5  1.71   #>  6  1983 debaca           2413     0      10        6  0.0979 #>  7  1983 donaana        107350     2      10        7  4.35   #>  8  1983 eddy            52681     0      10        8  2.14   #>  9  1983 grant           28202     0      10        9  1.14   #> 10  1983 guadalupe        4244     0      10       10  0.172  #> # ... with 182 more rows #>  #> [[11]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1984 bernalillo     449175    17      11        1  21.7   #>  2  1984 catron           2671     0      11        2   0.129 #>  3  1984 chaves          55164     4      11        3   2.67  #>  4  1984 colfax          14089     0      11        4   0.681 #>  5  1984 curry           42302     0      11        5   2.04  #>  6  1984 debaca           2400     0      11        6   0.116 #>  7  1984 donaana        111404     5      11        7   5.38  #>  8  1984 eddy            52932     2      11        8   2.56  #>  9  1984 grant           28373     1      11        9   1.37  #> 10  1984 guadalupe        4206     0      11       10   0.203 #> # ... with 182 more rows #>  #> [[12]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1985 bernalillo     456531    28      12        1  19.3   #>  2  1985 catron           2663     1      12        2   0.112 #>  3  1985 chaves          55851     4      12        3   2.36  #>  4  1985 colfax          13991     2      12        4   0.590 #>  5  1985 curry           42537     1      12        5   1.79  #>  6  1985 debaca           2387     0      12        6   0.101 #>  7  1985 donaana        115613    10      12        7   4.88  #>  8  1985 eddy            52989     3      12        8   2.23  #>  9  1985 grant           28481     2      12        9   1.20  #> 10  1985 guadalupe        4173     0      12       10   0.176 #> # ... with 182 more rows #>  #> [[13]] #> # A tibble: 192 x 7 #>     year county     population count id_time id_space .fitted #>    <int> <fct>           <int> <int>   <int>    <dbl>   <dbl> #>  1  1986 bernalillo     463558    27      13        1  26.6   #>  2  1986 catron           2648     1      13        2   0.152 #>  3  1986 chaves          56490     2      13        3   3.24  #>  4  1986 colfax          13851     1      13        4   0.794 #>  5  1986 curry           42821     2      13        5   2.46  #>  6  1986 debaca           2374     0      13        6   0.136 #>  7  1986 donaana        119975     9      13        7   6.88  #>  8  1986 eddy            52851     1      13        8   3.03  #>  9  1986 grant           28526     0      13        9   1.64  #> 10  1986 guadalupe        4147     1      13       10   0.238 #> # ... with 182 more rows #>   # We can use the function inside mutate to add a column to our data frame model_res %>%   dplyr::mutate(surveillance_predictions =                    calculate_surveillance_residuals(model_predictions,                                                     window_time_id,                                                     split_id,                                                     grow_length = FALSE,                                                     include_init = TRUE)) #> # A tibble: 13 x 8 #>    window_time_id window_s~1 split~2 curr_d~3 traini~4 model~5 model_~6 survei~7 #>             <int> <list>       <dbl> <list>   <list>   <list>  <list>   <list>   #>  1              6 <dbl [32]>       6 <tibble> <tibble> <glm>   <tibble> <tibble> #>  2              7 <dbl [32]>       7 <tibble> <tibble> <glm>   <tibble> <tibble> #>  3              8 <dbl [32]>       8 <tibble> <tibble> <glm>   <tibble> <tibble> #>  4              9 <dbl [32]>       9 <tibble> <tibble> <glm>   <tibble> <tibble> #>  5             10 <dbl [32]>      10 <tibble> <tibble> <glm>   <tibble> <tibble> #>  6             11 <dbl [32]>      11 <tibble> <tibble> <glm>   <tibble> <tibble> #>  7             12 <dbl [32]>      12 <tibble> <tibble> <glm>   <tibble> <tibble> #>  8             13 <dbl [32]>      13 <tibble> <tibble> <glm>   <tibble> <tibble> #>  9             14 <dbl [32]>      14 <tibble> <tibble> <glm>   <tibble> <tibble> #> 10             15 <dbl [32]>      15 <tibble> <tibble> <glm>   <tibble> <tibble> #> 11             16 <dbl [32]>      16 <tibble> <tibble> <glm>   <tibble> <tibble> #> 12             17 <dbl [32]>      17 <tibble> <tibble> <glm>   <tibble> <tibble> #> 13             18 <dbl [32]>      18 <tibble> <tibble> <glm>   <tibble> <tibble> #> # ... with abbreviated variable names 1: window_space_id, 2: split_id, #> #   3: curr_data, 4: training_data, 5: model_fit, 6: model_predictions, #> #   7: surveillance_predictions"},{"path":"/reference/collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge entries into a list of length 1 — collapse","title":"Merge entries into a list of length 1 — collapse","text":"Take vector list combine entries list length 1.","code":""},{"path":"/reference/collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge entries into a list of length 1 — collapse","text":"","code":"collapse(vec, combine_dfs = TRUE, unique_only = FALSE)"},{"path":"/reference/collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge entries into a list of length 1 — collapse","text":"vec atomic vector list. combine_dfs Logical. Whether columns containtaining data frames combined single longer data frame (combine_dfs = TRUE) left list data frames (combine_dfs = FALSE) unique_only Logical. Whether entries list contain values rows, including repeats (unique_only = FALSE) unique values reported (unique_only = TRUE). apply data frames combine_dfs = TRUE.","code":""},{"path":"/reference/collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge entries into a list of length 1 — collapse","text":"list length one. combine_dfs = FALSE, unique_only = FALSE, collapse() returns list(vec). combine_dfs = TRUE, vec list data frames, collapse() returns list(bind_rows(vec)). unique_only = TRUE, duplicate entries vec removed.","code":""},{"path":"/reference/collapse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge entries into a list of length 1 — collapse","text":"collapse() helper function used collapse_all, can also used conjunction summarize reduce number rows data frame without losing information.","code":""},{"path":"/reference/collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge entries into a list of length 1 — collapse","text":"","code":"vec <- c(1, 2, 3, 3, 4) collapse(vec) #> [[1]] #> [1] 1 2 3 3 4 #>   collapse(vec, unique_only = TRUE) #> [[1]] #> [1] 1 2 3 4 #>   df1 <- data.frame(x = c(1, 2, 3), y = c(\"A\", \"B\", \"C\")) df2 <- data.frame(x = c(4, 5), y= c(\"D\", \"E\")) collapse(list(df1, df2), combine_dfs = TRUE) #> [[1]] #>   x y #> 1 1 A #> 2 2 B #> 3 3 C #> 4 4 D #> 5 5 E #>   # collapse can be used together with summarize: library(\"dplyr\") #>  #> Attaching package: 'dplyr' #> The following object is masked from 'package:statsurv': #>  #>     collapse #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(\"tidyr\") #>  #> Attaching package: 'tidyr' #> The following object is masked from 'package:magrittr': #>  #>     extract mtcars_nested <- mtcars %>%   group_by(cyl) %>%   nest()  # Generate two models for mpg with different predicting variables model_fits <- tidyr::crossing(mtcars_nested, model_var = c(\"wt\", \"hp\")) %>%   rowwise() %>%   mutate(model = list(lm(paste0(\"mpg ~ \", model_var), data = data)),          predictions = list(broom::augment(model)))  # Combine the results from each model separately model_fits %>%   group_by(model_var) %>%   summarize(models = statsurv::collapse(model),             predictions = statsurv::collapse(predictions, combine_dfs = TRUE)) #> # A tibble: 2 x 3 #>   model_var models     predictions       #>   <chr>     <list>     <list>            #> 1 hp        <list [3]> <tibble [32 x 8]> #> 2 wt        <list [3]> <tibble [32 x 8]>"},{"path":"/reference/collapse_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge rows from each group into a list — collapse_all","title":"Merge rows from each group into a list — collapse_all","text":"collapse_all() takes data frame column, combines entries group list. parameters control whether data frames merged single longer data frame, whether unique values reported, whether columns transformed back atomic columns possible.","code":""},{"path":"/reference/collapse_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge rows from each group into a list — collapse_all","text":"","code":"collapse_all(   df,   combine_dfs = TRUE,   unique_only = FALSE,   unlist_scalars = TRUE,   .groups = NULL )"},{"path":"/reference/collapse_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge rows from each group into a list — collapse_all","text":"df data frame data frame extension. Can grouped. combine_dfs Logical. Whether columns containtaining data frames combined single longer data frame (combine_dfs = TRUE) left list data frames (combine_dfs = FALSE) unique_only Logical. Whether entries list contain values rows, including repeats (unique_only = FALSE) unique values reported (unique_only = TRUE). apply data frames combine_dfs = TRUE. unlist_scalars Logical. columns reduced single row, columns containing scalar values converted list columns regular columns. .groups Grouping structure result. Can \"drop_last\", \"drop\", \"keep\", \"rowwise\". See summarize details.","code":""},{"path":"/reference/collapse_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge rows from each group into a list — collapse_all","text":"object type df, one row per group original data frame. Columns grouping variables transformed list columns. unlist_scalars = TRUE, list columns may converted back regular columns.","code":""},{"path":"/reference/collapse_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge rows from each group into a list — collapse_all","text":"collapse_all can used data frame, designed around data frames sequential series model fits. model might associated parameters, date location corresponds , data, predictions. separate model location, natural want combine predictions location larger dataset can look together. collapse_all simplifies process combining data predictions model fit single data frame. collapse_all works grouping variables, model fits multiple locations multiple different models, easy combine predictions model separately. One way think collapse_all halfway summarize nest. Like summarize, combines rows group single row. Like nest, stores data (unlike unique_only = TRUE), instead reporting single summary value group. Unlike nest though, collapse_all works column individually, stores data list instead data frame. fact, collapse_all wrapper around summarize (nest), call collapse_all can always replaced call summarize, assistance helper functions collapse unlist_scalars: equivalent ","code":"df     collapse_all() df    summarize(across(everything()), .fns = collapse, combined_dfs = TRUE)    unlist_scalars()"},{"path":"/reference/collapse_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge rows from each group into a list — collapse_all","text":"","code":"library(tidyr) library(dplyr)  mtcars_nested <- mtcars %>%   group_by(cyl) %>%   nest()  # Generate two models for mpg with different predicting variables model_fits <- tidyr::crossing(mtcars_nested, model_var = c(\"wt\", \"hp\")) %>%   rowwise() %>%   mutate(model = list(lm(paste0(\"mpg ~ \", model_var), data = data)),          predictions = list(broom::augment(model)))  # Combine the results from each model separately model_fits %>%   group_by(model_var) %>%   collapse_all() #> # A tibble: 2 x 5 #>   model_var cyl       data               model      predictions       #>   <chr>     <list>    <list>             <list>     <list>            #> 1 hp        <dbl [3]> <tibble [32 x 10]> <list [3]> <tibble [32 x 8]> #> 2 wt        <dbl [3]> <tibble [32 x 10]> <list [3]> <tibble [32 x 8]>"},{"path":"/reference/create_zones.html","id":null,"dir":"Reference","previous_headings":"","what":"Create zones from spatial coordinates — create_zones","title":"Create zones from spatial coordinates — create_zones","text":"Scan-type alarm functions work computing alarm function large number spatial zones, zone consists one neighboring spatial locations. Zones can many sizes, single location aggregation max_k locations, location can belong multiple zones. create_zones aggregates individual spatial locations set zones using k-nearest neighbors approach. location, zone containing location , zone containing location nearest neighbor, zone containing location two nearest-neighbors, maximum size.","code":""},{"path":"/reference/create_zones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create zones from spatial coordinates — create_zones","text":"","code":"create_zones(sf, max_k, min_k = 1)"},{"path":"/reference/create_zones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create zones from spatial coordinates — create_zones","text":"sf simple-features (sf) collection describing spatial locations combine zones. row sf represent unique spatial location. max_k maximum number locations included one zone. min_k Optional. minimum number locations included one zone.","code":""},{"path":"/reference/create_zones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create zones from spatial coordinates — create_zones","text":"list integer vectors, specifying locations belong zones. integers identify locations based row sf associated .","code":""},{"path":"/reference/create_zones.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create zones from spatial coordinates — create_zones","text":"","code":"library(\"sf\") #> Linking to GEOS 3.9.1, GDAL 3.2.1, PROJ 7.2.1; sf_use_s2() is TRUE data(\"NM_county_sf\") create_zones(NM_county_sf, max_k = 5, min_k = 2) #> [[1]] #> [1]  1 32 #>  #> [[2]] #> [1]  1 23 32 #>  #> [[3]] #> [1]  1 23 26 32 #>  #> [[4]] #> [1]  1 23 26 30 32 #>  #> [[5]] #> [1] 2 9 #>  #> [[6]] #> [1]  2  9 28 #>  #> [[7]] #> [1]  2  9 27 28 #>  #> [[8]] #> [1]  2  9 27 28 32 #>  #> [[9]] #> [1] 3 8 #>  #> [[10]] #> [1]  3  8 14 #>  #> [[11]] #> [1]  3  6  8 14 #>  #> [[12]] #> [1]  3  6  8 14 22 #>  #> [[13]] #> [1]  4 18 #>  #> [[14]] #> [1]  4 18 29 #>  #> [[15]] #> [1]  4 18 29 31 #>  #> [[16]] #> [1]  4 11 18 29 31 #>  #> [[17]] #> [1]  5 20 #>  #> [[18]] #> [1]  5 20 22 #>  #> [[19]] #> [1]  5  6 20 22 #>  #> [[20]] #> [1]  5  6 10 20 22 #>  #> [[21]] #> [1]  6 10 #>  #> [[22]] #> [1]  6 10 22 #>  #> [[23]] #> [1]  5  6 10 22 #>  #> [[24]] #> [1]  3  5  6 10 22 #>  #> [[25]] #> [1]  7 16 #>  #> [[26]] #> [1]  7 16 27 #>  #> [[27]] #> [1]  7 16 19 27 #>  #> [[28]] #> [1]  7  9 16 19 27 #>  #> [[29]] #> [1]  8 13 #>  #> [[30]] #> [1]  3  8 13 #>  #> [[31]] #> [1]  3  8 13 19 #>  #> [[32]] #> [1]  3  8 13 14 19 #>  #> [[33]] #> [1]  9 16 #>  #> [[34]] #> [1]  9 12 16 #>  #> [[35]] #> [1]  9 12 16 27 #>  #> [[36]] #> [1]  2  9 12 16 27 #>  #> [[37]] #> [1]  6 10 25 #>  #> [[38]] #> [1]  6 10 25 30 #>  #> [[39]] #> [1]  6 10 20 25 30 #>  #> [[40]] #> [1] 11 31 #>  #> [[41]] #> [1] 11 20 31 #>  #> [[42]] #> [1] 11 20 25 31 #>  #> [[43]] #> [1] 11 18 20 25 31 #>  #> [[44]] #> [1] 12 16 #>  #> [[45]] #> [1]  7  9 12 16 #>  #> [[46]] #> [1]  7  9 12 16 27 #>  #> [[47]] #> [1]  3  8 13 22 #>  #> [[48]] #> [1]  3  6  8 13 22 #>  #> [[49]] #> [1]  3 14 #>  #> [[50]] #> [1]  3 14 30 #>  #> [[51]] #> [1]  3  6 14 30 #>  #> [[52]] #> [1]  3  6 14 19 30 #>  #> [[53]] #> [1] 15 26 #>  #> [[54]] #> [1] 15 23 26 #>  #> [[55]] #> [1] 15 21 23 26 #>  #> [[56]] #> [1]  1 15 21 23 26 #>  #> [[57]] #> [1]  7  9 16 #>  #> [[58]] #> [1] 17 24 #>  #> [[59]] #> [1] 17 23 24 #>  #> [[60]] #> [1]  1 17 23 24 #>  #> [[61]] #> [1]  1 17 23 24 32 #>  #> [[62]] #> [1] 18 25 #>  #> [[63]] #> [1]  4 18 25 #>  #> [[64]] #> [1]  4 18 25 29 #>  #> [[65]] #> [1]  4 11 18 25 29 #>  #> [[66]] #> [1]  7 19 #>  #> [[67]] #> [1]  7 14 19 #>  #> [[68]] #> [1]  7  8 14 19 #>  #> [[69]] #> [1]  3  7  8 14 19 #>  #> [[70]] #> [1]  5 11 20 #>  #> [[71]] #> [1]  5  6 11 20 #>  #> [[72]] #> [1]  5  6 10 11 20 #>  #> [[73]] #> [1] 15 21 #>  #> [[74]] #> [1] 15 21 23 #>  #> [[75]] #> [1] 15 21 23 29 #>  #> [[76]] #> [1] 15 21 23 26 29 #>  #> [[77]] #> [1]  5 22 #>  #> [[78]] #> [1]  5  6 22 #>  #> [[79]] #> [1]  3  5  6 22 #>  #> [[80]] #> [1]  3  5  6 20 22 #>  #> [[81]] #> [1] 15 23 #>  #> [[82]] #> [1]  1 15 23 #>  #> [[83]] #> [1]  1 15 23 26 #>  #> [[84]] #> [1] 17 21 24 #>  #> [[85]] #> [1] 17 21 23 24 #>  #> [[86]] #> [1] 15 17 21 23 24 #>  #> [[87]] #> [1] 10 18 25 #>  #> [[88]] #> [1] 10 11 18 25 #>  #> [[89]] #> [1] 10 11 18 25 26 #>  #> [[90]] #> [1]  1 15 26 #>  #> [[91]] #> [1]  1 15 23 26 30 #>  #> [[92]] #> [1]  7 27 #>  #> [[93]] #> [1]  7 27 28 #>  #> [[94]] #> [1]  7 16 27 28 #>  #> [[95]] #> [1]  7  9 16 27 28 #>  #> [[96]] #> [1] 28 32 #>  #> [[97]] #> [1] 27 28 32 #>  #> [[98]] #> [1]  1 27 28 32 #>  #> [[99]] #> [1]  1 27 28 30 32 #>  #> [[100]] #> [1]  4 29 #>  #> [[101]] #> [1]  4 18 21 29 #>  #> [[102]] #> [1]  4 15 18 21 29 #>  #> [[103]] #> [1]  1 30 #>  #> [[104]] #> [1]  1 30 32 #>  #> [[105]] #> [1]  1 26 30 32 #>  #> [[106]] #> [1]  1 10 26 30 32 #>  #> [[107]] #> [1]  4 11 31 #>  #> [[108]] #> [1]  4 11 18 31 #>  #> [[109]] #> [1]  4 11 18 20 31 #>  #> [[110]] #> [1]  1 28 32 #>  #> [[111]] #> [1]  1 28 30 32 #>  #> [[112]] #> [1]  1 23 28 30 32 #>  # 112 zones created from 32 locations"},{"path":"/reference/extract_yhat.Arima.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from an ARIMA model — extract_yhat.Arima","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"Methods extracting fitted values ARIMA models, including fit using stats::arima, forecast::Arima, arima_tidy. Compared types models, extrating fitted values Arima models rather fiddly. particular, order rows newdata newxreg crucially important. ARIMA model originally fit n points, extract_yhat assumes first n rows newdata newxreg correspond exactly data used fit model. number additional rows newdata taken number steps ahead predictions generated.","code":""},{"path":"/reference/extract_yhat.Arima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"","code":"# S3 method for Arima extract_yhat(fit, newdata, resp_var, newxreg = NULL, ...)  # S3 method for forecast_ARIMA extract_yhat(fit, newdata, newxreg = NULL, ...)  # S3 method for arima_tidy extract_yhat(fit, newdata, ...)"},{"path":"/reference/extract_yhat.Arima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"fit ARIMA model fit object. newdata data frame containing data used predict fitted values. Must covariates used model fit object calculate fitted values. first n rows exactly data used fit model, additional rows correspond number steps ahead predictions generated. resp_var column newdata containing time series data model fitted . used stats::arima models. column specified bare text (quotes). newxreg matrix covariate information containing values xreg used originally fit model, new values xreg used prediction. IMPORTANT: Unlike predict.Arima, newxreg must contain old new values xreg. ... Additional arguments passed methods","code":""},{"path":"/reference/extract_yhat.Arima.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"input data frame newdata added column .fitted containing predicted values. models may also return additional columns, .resid. columns added extract_yhat augment start dot.","code":""},{"path":"/reference/extract_yhat.Arima.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"Behind scenes, extract_yhat performing two different tasks: extracting already fitted values ARIMA model, forecasting future values response variable. models, two tasks , since model fit, output one data point dependent data points. fact predictions ARIMA model depend order data points drives lot oddities extract_yhat ARIMA models. Extracting already fitted values simple models fit forecast::Arima arima_tidy functions, fitted values stored model fit object. Models fit stats::arima store information, information must supplied extract_yhat parameters newdata resp_var. extract_yhat can used predict fitted values conditional data used fit model. forecast::Arima stats::arima, covariates necessary generate forecasts must provided last rows newxreg. arima_tidy, covariates must provided last rows newdata. Although newdata note used generating predictions forecast::Ariam stats::arima, still required parameter functions, can used report final result. done output extract_yhat consistent output augment broader Tidyverse, uses data frames key interface passing data functions. version arima based entirely data frames, see arima_tidy.","code":""},{"path":[]},{"path":"/reference/extract_yhat.Arima.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted values from an ARIMA model — extract_yhat.Arima","text":"","code":"data(\"presidents_df\") fit_stats_arima <- stats::arima(presidents_df$approval_rating, order = c(2, 0, 0)) extract_yhat(fit_stats_arima, presidents_df, resp_var = approval_rating) #>     approval_rating    date election_year  .fitted      .resid #> 1                NA 1945.25             0       NA          NA #> 2                87 1945.50             0 69.88907  17.1109291 #> 3                82 1945.75             0 81.73735   0.2626502 #> 4                75 1946.00             0 78.84617  -3.8461656 #> 5                63 1946.25             0 73.14549 -10.1454892 #> 6                50 1946.50             0 63.58330 -13.5832995 #> 7                43 1946.75             0 52.63291  -9.6329134 #> 8                32 1947.00             0 45.86112 -13.8611174 #> 9                35 1947.25             0 37.01767  -2.0176744 #> 10               60 1947.50             0 37.70113  22.2988750 #> 11               54 1947.75             0 56.07146  -2.0714616 #> 12               55 1948.00             1 55.10623  -0.1062303 #> 13               36 1948.25             1 55.02164 -19.0216372 #> 14               39 1948.50             1 41.49934  -2.4993405 #> 15               NA 1948.75             1       NA          NA #> 16               NA 1949.00             0       NA          NA #> 17               69 1949.25             0 51.54767  17.4523293 #> 18               57 1949.50             0 65.54538  -8.5453846 #> 19               57 1949.75             0 58.46748  -1.4674798 #> 20               51 1950.00             0 56.86080  -5.8608004 #> 21               45 1950.25             0 52.54832  -7.5483204 #> 22               37 1950.50             0 47.43250 -10.4325007 #> 23               46 1950.75             0 40.87919   5.1208123 #> 24               39 1951.00             0 46.27679  -7.2767881 #> 25               36 1951.25             0 42.45057  -6.4505710 #> 26               24 1951.50             0 39.35710 -15.3571013 #> 27               32 1951.75             0 30.33047   1.6695286 #> 28               23 1952.00             1 34.47377 -11.4737654 #> 29               25 1952.25             1 29.07616  -4.0761650 #> 30               32 1952.50             1 29.30865   2.6913512 #> 31               NA 1952.75             1       NA          NA #> 32               32 1953.00             0 36.40042  -4.4004227 #> 33               59 1953.25             0 35.68754  23.3124628 #> 34               74 1953.50             0 54.95105  19.0489549 #> 35               75 1953.75             0 69.34727   5.6527263 #> 36               60 1954.00             0 72.07437 -12.0743696 #> 37               71 1954.25             0 61.42706   9.5729405 #> 38               61 1954.50             0 67.32492  -6.3249236 #> 39               71 1954.75             0 61.61025   9.3897536 #> 40               57 1955.00             0 67.45881 -10.4588136 #> 41               71 1955.25             0 58.73526  12.2647403 #> 42               68 1955.50             0 66.92325   1.0767462 #> 43               79 1955.75             0 66.64147  12.3585269 #> 44               73 1956.00             1 74.14602  -1.1460166 #> 45               76 1956.25             1 71.30633   4.6936740 #> 46               71 1956.50             1 72.65923  -1.6592263 #> 47               67 1956.75             1 69.46716  -2.4671628 #> 48               75 1957.00             0 65.92273   9.0772736 #> 49               79 1957.25             0 71.13714   7.8628601 #> 50               62 1957.50             0 75.08325 -13.0832462 #> 51               63 1957.75             0 63.40011  -0.4001126 #> 52               57 1958.00             0 61.84273  -4.8427302 #> 53               60 1958.25             0 57.66414   2.3358599 #> 54               49 1958.50             0 59.01704 -10.0170404 #> 55               48 1958.75             0 51.51250  -3.5124969 #> 56               52 1959.00             0 49.32096   2.6790392 #> 57               57 1959.25             0 52.06206   4.9379425 #> 58               62 1959.50             0 56.19135   5.8086493 #> 59               61 1959.75             0 60.45453   0.5454662 #> 60               66 1960.00             1 60.40524   5.5947632 #> 61               71 1960.25             1 63.86508   7.1349198 #> 62               62 1960.50             1 68.12826  -6.1282633 #> 63               61 1960.75             1 62.32899  -1.3289930 #> 64               57 1961.00             0 60.40524  -3.4052368 #> 65               72 1961.25             0 57.39636  14.6036398 #> 66               83 1961.50             0 67.64200  15.3579995 #> 67               71 1961.75             0 77.55656  -6.5565630 #> 68               78 1962.00             0 70.40439   7.5956076 #> 69               79 1962.25             0 73.82894   5.1710603 #> 70               71 1962.50             0 75.48492  -4.4849160 #> 71               62 1962.75             0 69.86883  -7.8688326 #> 72               74 1963.00             0 62.32899  11.6710070 #> 73               76 1963.25             0 69.74894   6.2510565 #> 74               64 1963.50             0 72.79312  -8.7931163 #> 75               62 1963.75             0 64.43594  -2.4359361 #> 76               57 1964.00             1 61.39176  -4.3917634 #> 77               80 1964.25             1 57.53025  22.4697498 #> 78               73 1964.50             1 73.39197  -0.3919738 #> 79               69 1964.75             1 71.44022  -2.4402159 #> 80               69 1965.00             0 67.62800   1.3720004 #> 81               71 1965.25             0 67.09244   3.9075602 #> 82               64 1965.50             0 68.52993  -4.5299332 #> 83               69 1965.75             0 63.76649   5.2335136 #> 84               62 1966.00             0 66.42299  -4.4229901 #> 85               63 1966.25             0 62.06121   0.9387869 #> 86               46 1966.50             0 61.84273 -15.8427302 #> 87               56 1966.75             0 49.75793   6.2420732 #> 88               44 1967.00             0 54.66926 -10.6692643 #> 89               44 1967.25             0 47.38320  -3.3832038 #> 90               52 1967.50             0 45.77652   6.2234756 #> 91               38 1967.75             0 51.52650 -13.5264978 #> 92               46 1968.00             1 42.53516   3.4648360 #> 93               36 1968.25             1 46.41068 -10.4106781 #> 94               49 1968.50             1 40.29433   8.7056690 #> 95               35 1968.75             1 48.29914 -13.2991382 #> 96               44 1969.00             0 39.97725   4.0227459 #> 97               59 1969.25             0 44.57151  14.4284851 #> 98               65 1969.50             0 56.55772   8.4422756 #> 99               65 1969.75             0 62.87855   2.1214463 #> 100              56 1970.00             0 63.68189  -7.6818934 #> 101              66 1970.25             0 57.21317   8.7868267 #> 102              53 1970.50             0 63.19563 -10.1956305 #> 103              61 1970.75             0 55.19082   5.8091767 #> 104              52 1971.00             0 59.20023  -7.2002273 #> 105              51 1971.25             0 53.80263  -2.8026269 #> 106              48 1971.50             0 51.87887  -3.8788707 #> 107              54 1971.75             0 49.58874   4.4112593 #> 108              49 1972.00             1 53.49955  -4.4995509 #> 109              49 1972.25             1 50.70916  -1.7091572 #> 110              61 1972.50             1 50.03971  10.9602925 #> 111              NA 1972.75             1       NA          NA #> 112              NA 1973.00             0       NA          NA #> 113              68 1973.25             0 60.98400   7.0159974 #> 114              44 1973.50             0 65.62758 -21.6275794 #> 115              40 1973.75             0 48.98988  -8.9898832 #> 116              27 1974.00             0 42.90154 -15.9015377 #> 117              28 1974.25             0 33.02227  -5.0222712 #> 118              25 1974.50             0 32.00045  -7.0004486 #> 119              24 1974.75             0 29.97810  -5.9780985 #> 120              24 1975.00             0 28.85768  -4.8576820   fit_forecast  <- forecast::Arima(presidents_df$approval_rating, order = c(2, 0, 0)) extract_yhat(fit_forecast, presidents_df) #>     approval_rating    date election_year  .fitted #> 1                NA 1945.25             0       NA #> 2                87 1945.50             0 69.88907 #> 3                82 1945.75             0 81.73735 #> 4                75 1946.00             0 78.84617 #> 5                63 1946.25             0 73.14549 #> 6                50 1946.50             0 63.58330 #> 7                43 1946.75             0 52.63291 #> 8                32 1947.00             0 45.86112 #> 9                35 1947.25             0 37.01767 #> 10               60 1947.50             0 37.70113 #> 11               54 1947.75             0 56.07146 #> 12               55 1948.00             1 55.10623 #> 13               36 1948.25             1 55.02164 #> 14               39 1948.50             1 41.49934 #> 15               NA 1948.75             1       NA #> 16               NA 1949.00             0       NA #> 17               69 1949.25             0 51.54767 #> 18               57 1949.50             0 65.54538 #> 19               57 1949.75             0 58.46748 #> 20               51 1950.00             0 56.86080 #> 21               45 1950.25             0 52.54832 #> 22               37 1950.50             0 47.43250 #> 23               46 1950.75             0 40.87919 #> 24               39 1951.00             0 46.27679 #> 25               36 1951.25             0 42.45057 #> 26               24 1951.50             0 39.35710 #> 27               32 1951.75             0 30.33047 #> 28               23 1952.00             1 34.47377 #> 29               25 1952.25             1 29.07616 #> 30               32 1952.50             1 29.30865 #> 31               NA 1952.75             1       NA #> 32               32 1953.00             0 36.40042 #> 33               59 1953.25             0 35.68754 #> 34               74 1953.50             0 54.95105 #> 35               75 1953.75             0 69.34727 #> 36               60 1954.00             0 72.07437 #> 37               71 1954.25             0 61.42706 #> 38               61 1954.50             0 67.32492 #> 39               71 1954.75             0 61.61025 #> 40               57 1955.00             0 67.45881 #> 41               71 1955.25             0 58.73526 #> 42               68 1955.50             0 66.92325 #> 43               79 1955.75             0 66.64147 #> 44               73 1956.00             1 74.14602 #> 45               76 1956.25             1 71.30633 #> 46               71 1956.50             1 72.65923 #> 47               67 1956.75             1 69.46716 #> 48               75 1957.00             0 65.92273 #> 49               79 1957.25             0 71.13714 #> 50               62 1957.50             0 75.08325 #> 51               63 1957.75             0 63.40011 #> 52               57 1958.00             0 61.84273 #> 53               60 1958.25             0 57.66414 #> 54               49 1958.50             0 59.01704 #> 55               48 1958.75             0 51.51250 #> 56               52 1959.00             0 49.32096 #> 57               57 1959.25             0 52.06206 #> 58               62 1959.50             0 56.19135 #> 59               61 1959.75             0 60.45453 #> 60               66 1960.00             1 60.40524 #> 61               71 1960.25             1 63.86508 #> 62               62 1960.50             1 68.12826 #> 63               61 1960.75             1 62.32899 #> 64               57 1961.00             0 60.40524 #> 65               72 1961.25             0 57.39636 #> 66               83 1961.50             0 67.64200 #> 67               71 1961.75             0 77.55656 #> 68               78 1962.00             0 70.40439 #> 69               79 1962.25             0 73.82894 #> 70               71 1962.50             0 75.48492 #> 71               62 1962.75             0 69.86883 #> 72               74 1963.00             0 62.32899 #> 73               76 1963.25             0 69.74894 #> 74               64 1963.50             0 72.79312 #> 75               62 1963.75             0 64.43594 #> 76               57 1964.00             1 61.39176 #> 77               80 1964.25             1 57.53025 #> 78               73 1964.50             1 73.39197 #> 79               69 1964.75             1 71.44022 #> 80               69 1965.00             0 67.62800 #> 81               71 1965.25             0 67.09244 #> 82               64 1965.50             0 68.52993 #> 83               69 1965.75             0 63.76649 #> 84               62 1966.00             0 66.42299 #> 85               63 1966.25             0 62.06121 #> 86               46 1966.50             0 61.84273 #> 87               56 1966.75             0 49.75793 #> 88               44 1967.00             0 54.66926 #> 89               44 1967.25             0 47.38320 #> 90               52 1967.50             0 45.77652 #> 91               38 1967.75             0 51.52650 #> 92               46 1968.00             1 42.53516 #> 93               36 1968.25             1 46.41068 #> 94               49 1968.50             1 40.29433 #> 95               35 1968.75             1 48.29914 #> 96               44 1969.00             0 39.97725 #> 97               59 1969.25             0 44.57151 #> 98               65 1969.50             0 56.55772 #> 99               65 1969.75             0 62.87855 #> 100              56 1970.00             0 63.68189 #> 101              66 1970.25             0 57.21317 #> 102              53 1970.50             0 63.19563 #> 103              61 1970.75             0 55.19082 #> 104              52 1971.00             0 59.20023 #> 105              51 1971.25             0 53.80263 #> 106              48 1971.50             0 51.87887 #> 107              54 1971.75             0 49.58874 #> 108              49 1972.00             1 53.49955 #> 109              49 1972.25             1 50.70916 #> 110              61 1972.50             1 50.03971 #> 111              NA 1972.75             1       NA #> 112              NA 1973.00             0       NA #> 113              68 1973.25             0 60.98400 #> 114              44 1973.50             0 65.62758 #> 115              40 1973.75             0 48.98988 #> 116              27 1974.00             0 42.90154 #> 117              28 1974.25             0 33.02227 #> 118              25 1974.50             0 32.00045 #> 119              24 1974.75             0 29.97810 #> 120              24 1975.00             0 28.85768 # We can extract fitted values and make predictions at the same time fit <- stats::arima(presidents_df$approval_rating[1:110], order = c(2, 0, 0)) extract_yhat(fit, presidents_df, resp_var = approval_rating) #>     approval_rating    date election_year  .fitted       .resid #> 1                NA 1945.25             0       NA           NA #> 2                87 1945.50             0 69.89757  17.10242948 #> 3                82 1945.75             0 81.05837   0.94162800 #> 4                75 1946.00             0 78.51376  -3.51376042 #> 5                63 1946.25             0 73.07179 -10.07178667 #> 6                50 1946.50             0 63.96582 -13.96581983 #> 7                43 1946.75             0 53.47389 -10.47388902 #> 8                32 1947.00             0 46.89598 -14.89597549 #> 9                35 1947.25             0 38.46601  -3.46601029 #> 10               60 1947.50             0 38.93210  21.06790201 #> 11               54 1947.75             0 56.25812  -2.25811610 #> 12               55 1948.00             1 55.75192  -0.75191811 #> 13               36 1948.25             1 55.57596 -19.57596491 #> 14               39 1948.50             1 42.87393  -3.87392646 #> 15               NA 1948.75             1       NA           NA #> 16               NA 1949.00             0       NA           NA #> 17               69 1949.25             0 52.67573  16.32427049 #> 18               57 1949.50             0 65.52282  -8.52282424 #> 19               57 1949.75             0 59.05786  -2.05785524 #> 20               51 1950.00             0 57.35395  -6.35394558 #> 21               45 1950.25             0 53.29794  -8.29793582 #> 22               37 1950.50             0 48.38997 -11.38997122 #> 23               46 1950.75             0 42.13000   3.86999663 #> 24               39 1951.00             0 47.07808  -8.07807825 #> 25               36 1951.25             0 43.62400  -7.62399910 #> 26               24 1951.50             0 40.60205 -16.60204691 #> 27               32 1951.75             0 32.06405  -0.06404997 #> 28               23 1952.00             1 35.76815 -12.76815333 #> 29               25 1952.25             1 30.82008  -5.82007845 #> 30               32 1952.50             1 30.89415   1.10585053 #> 31               NA 1952.75             1       NA           NA #> 32               32 1953.00             0 38.25271  -6.25271200 #> 33               59 1953.25             0 37.11299  21.88700556 #> 34               74 1953.50             0 55.15614  18.84386295 #> 35               75 1953.75             0 69.12996   5.87004180 #> 36               60 1954.00             0 71.93585 -11.93584690 #> 37               71 1954.25             0 61.93781   9.06218505 #> 38               61 1954.50             0 67.24395  -6.24394579 #> 39               71 1954.75             0 62.04585   8.95415331 #> 40               57 1955.00             0 67.38594 -10.38593826 #> 41               71 1955.25             0 59.34184  11.65815982 #> 42               68 1955.50             0 66.81797   1.18203163 #> 43               79 1955.75             0 66.77786  12.22214191 #> 44               73 1956.00             1 73.78790  -0.78789858 #> 45               76 1956.25             1 71.29381   4.70619400 #> 46               71 1956.50             1 72.46986  -1.46985605 #> 47               67 1956.75             1 69.51583  -2.51582533 #> 48               75 1957.00             0 66.10186   8.89814354 #> 49               79 1957.25             0 70.94190   8.05810040 #> 50               62 1957.50             0 74.78185 -12.78184588 #> 51               63 1957.75             0 63.85779  -0.85778809 #> 52               57 1958.00             0 62.11992  -5.11991771 #> 53               60 1958.25             0 58.20590   1.79409959 #> 54               49 1958.50             0 59.38195 -10.38195047 #> 55               48 1958.75             0 52.37191  -4.37190997 #> 56               52 1959.00             0 50.13399   1.86600884 #> 57               57 1959.25             0 52.69601   4.30399480 #> 58               62 1959.50             0 56.64398   5.35601677 #> 59               61 1959.75             0 60.73395   0.26604628 #> 60               66 1960.00             1 60.76791   5.23208555 #> 61               71 1960.25             1 64.00593   6.99406988 #> 62               62 1960.50             1 68.09590  -6.09590061 #> 63               61 1960.75             1 62.72185  -1.72184832 #> 64               57 1961.00             0 60.76791  -3.76791445 #> 65               72 1961.25             0 57.92192  14.07808453 #> 66               83 1961.50             0 67.49397  15.50603000 #> 67               71 1961.75             0 77.05987  -6.05987498 #> 68               78 1962.00             0 70.50977   7.49022737 #> 69               79 1962.25             0 73.53787   5.46212563 #> 70               71 1962.50             0 75.20782  -4.20782329 #> 71               62 1962.75             0 69.94180  -7.94180274 #> 72               74 1963.00             0 62.72185  11.27815168 #> 73               76 1963.25             0 69.55594   6.44406439 #> 74               64 1963.50             0 72.61185  -8.61184852 #> 75               62 1963.75             0 64.78381  -2.78381393 #> 76               57 1964.00             1 61.72790  -4.72790102 #> 77               80 1964.25             1 58.06391  21.93609206 #> 78               73 1964.50             1 72.90198   0.09801698 #> 79               69 1964.75             1 71.43580  -2.43579847 #> 80               69 1965.00             0 67.73784   1.26215534 #> 81               71 1965.25             0 67.16987   3.83012523 #> 82               64 1965.50             0 68.52188  -4.52187803 #> 83               69 1965.75             0 64.07385   4.92614842 #> 84               62 1966.00             0 66.45991  -4.45991242 #> 85               63 1966.25             0 62.43786   0.56213662 #> 86               46 1966.50             0 62.11992 -16.11991771 #> 87               56 1966.75             0 50.76988   5.23011750 #> 88               44 1967.00             0 55.11603 -11.11602677 #> 89               44 1967.25             0 48.42393  -4.42393195 #> 90               52 1967.50             0 46.72002   5.27997771 #> 91               38 1967.75             0 52.12804 -14.12803532 #> 92               46 1968.00             1 43.79995   2.20004770 #> 93               36 1968.25             1 47.22007 -11.22007072 #> 94               49 1968.50             1 41.59599   7.40400579 #> 95               35 1968.75             1 48.96409 -13.96409066 #> 96               44 1969.00             0 41.34597   2.65403000 #> 97               59 1969.25             0 45.44209  13.55790995 #> 98               65 1969.50             0 56.86005   8.13995329 #> 99               65 1969.75             0 63.04594   1.95405645 #> 100              56 1970.00             0 63.89790  -7.89789838 #> 101              66 1970.25             0 57.81388   8.18611627 #> 102              53 1970.50             0 63.29597 -10.29596776 #> 103              61 1970.75             0 55.92787   5.07212869 #> 104              52 1971.00             0 59.48998  -7.48998221 #> 105              51 1971.25             0 54.54191  -3.54190733 #> 106              48 1971.50             0 52.58797  -4.58797346 #> 107              54 1971.75             0 50.41798   3.58202390 #> 108              49 1972.00             1 54.04801  -5.04800846 #> 109              49 1972.25             1 51.51996  -2.51995515 #> 110              61 1972.50             1 50.80999  10.19000721 #> 111              NA 1972.75             1 58.92201           NA #> 112              NA 1973.00             0 59.22120           NA #> 113              68 1973.25             0 59.12839   8.87160905 #> 114              44 1973.50             0 59.10813 -15.10813486 #> 115              40 1973.75             0 59.08126 -19.08126367 #> 116              27 1974.00             0 59.06022 -32.06022249 #> 117              28 1974.25             0 59.04218 -31.04218311 #> 118              25 1974.50             0 59.02700 -34.02700077 #> 119              24 1974.75             0 59.01418 -35.01417603 #> 120              24 1975.00             0 59.00335 -35.00335071  # We can supply an external predictor as well fit <- stats::arima(presidents_df$approval_rating[1:110], order = c(2, 0, 0),                     xreg = as.matrix(presidents_df[1:110, \"election_year\", drop = FALSE])) extract_yhat(fit, presidents_df, resp_var = approval_rating,              newxreg = as.matrix(presidents_df[, \"election_year\", drop = FALSE])) #>     approval_rating    date election_year  .fitted      .resid #> 1                NA 1945.25             0       NA          NA #> 2                87 1945.50             0 70.43649  16.5635128 #> 3                82 1945.75             0 81.19555   0.8044465 #> 4                75 1946.00             0 78.79648  -3.7964778 #> 5                63 1946.25             0 73.37698 -10.3769849 #> 6                50 1946.50             0 64.33458 -14.3345791 #> 7                43 1946.75             0 53.84118 -10.8411782 #> 8                32 1947.00             0 47.15836 -15.1583593 #> 9                35 1947.25             0 38.77737  -3.7773698 #> 10               60 1947.50             0 39.02455  20.9754546 #> 11               54 1947.75             0 56.03370  -2.0337002 #> 12               55 1948.00             1 52.51064   2.4893584 #> 13               36 1948.25             1 54.54114 -18.5411439 #> 14               39 1948.50             1 42.68524  -3.6852427 #> 15               NA 1948.75             1       NA          NA #> 16               NA 1949.00             0       NA          NA #> 17               69 1949.25             0 54.29341  14.7065935 #> 18               57 1949.50             0 65.68901  -8.6890065 #> 19               57 1949.75             0 59.41859  -2.4185868 #> 20               51 1950.00             0 57.52360  -6.5235978 #> 21               45 1950.25             0 53.55510  -8.5551000 #> 22               37 1950.50             0 48.63911 -11.6391077 #> 23               46 1950.75             0 42.40028   3.5997172 #> 24               39 1951.00             0 47.08970  -8.0897035 #> 25               36 1951.25             0 43.88103  -7.8810311 #> 26               24 1951.50             0 40.79137 -16.7913720 #> 27               32 1951.75             0 32.38063  -0.3806291 #> 28               23 1952.00             1 32.27452  -9.2745160 #> 29               25 1952.25             1 29.90168  -4.9016758 #> 30               32 1952.50             1 30.35636   1.6436406 #> 31               NA 1952.75             1       NA          NA #> 32               32 1953.00             0 40.41909  -8.4190913 #> 33               59 1953.25             0 37.56652  21.4334830 #> 34               74 1953.50             0 54.89854  19.1014634 #> 35               75 1953.75             0 69.08351   5.9164936 #> 36               60 1954.00             0 72.11366 -12.1136589 #> 37               71 1954.25             0 62.35033   8.6496698 #> 38               61 1954.50             0 67.25717  -6.2571732 #> 39               71 1954.75             0 62.38008   8.6199165 #> 40               57 1955.00             0 67.41509 -10.4150890 #> 41               71 1955.25             0 59.73442  11.2655817 #> 42               68 1955.50             0 66.78343   1.2165740 #> 43               79 1955.75             0 67.01000  11.9900024 #> 44               73 1956.00             1 70.30938   2.6906249 #> 45               76 1956.25             1 70.39453   5.6054690 #> 46               71 1956.50             1 71.98438  -0.9843782 #> 47               67 1956.75             1 69.15104  -2.1510439 #> 48               75 1957.00             0 69.21825   5.7817455 #> 49               79 1957.25             0 71.56134   7.4386586 #> 50               62 1957.50             0 74.91724 -12.9172399 #> 51               63 1957.75             0 64.30483  -1.3048258 #> 52               57 1958.00             0 62.28167  -5.2816743 #> 53               60 1958.25             0 58.47109   1.5289077 #> 54               49 1958.50             0 59.50785 -10.5078467 #> 55               48 1958.75             0 52.70601  -4.7060146 #> 56               52 1959.00             0 50.30753   1.6924749 #> 57               57 1959.25             0 52.79527   4.2047255 #> 58               62 1959.50             0 56.73402   5.2659810 #> 59               61 1959.75             0 60.83068   0.1693207 #> 60               66 1960.00             1 57.45639   8.5436128 #> 61               71 1960.25             1 62.92213   8.0778666 #> 62               62 1960.50             1 67.57189  -5.5718864 #> 63               61 1960.75             1 62.40872  -1.4087185 #> 64               57 1961.00             0 63.82851  -6.8285150 #> 65               72 1961.25             0 58.70835  13.2916465 #> 66               83 1961.50             0 67.44484  15.5551577 #> 67               71 1961.75             0 77.08916  -6.0891578 #> 68               78 1962.00             0 70.88924   7.1107645 #> 69               79 1962.25             0 73.62416   5.3758394 #> 70               71 1962.50             0 75.39099  -4.3909871 #> 71               62 1962.75             0 70.25757  -8.2575725 #> 72               74 1963.00             0 63.04150  10.9585002 #> 73               76 1963.25             0 69.55725   6.4427464 #> 74               64 1963.50             0 72.77508  -8.7750752 #> 75               62 1963.75             0 65.15391  -3.1539111 #> 76               57 1964.00             1 58.43363  -1.4336350 #> 77               80 1964.25             1 57.12730  22.8726975 #> 78               73 1964.50             1 72.10339   0.8966086 #> 79               69 1964.75             1 71.10554  -2.1055395 #> 80               69 1965.00             0 70.85692  -1.8569186 #> 81               71 1965.25             0 67.90868   3.0913249 #> 82               64 1965.50             0 68.67841  -4.6784150 #> 83               69 1965.75             0 64.36433   4.6356676 #> 84               62 1966.00             0 66.56600  -4.5660036 #> 85               63 1966.25             0 62.72567   0.2743317 #> 86               46 1966.50             0 62.28167 -16.2816743 #> 87               56 1966.75             0 51.19551   4.8044870 #> 88               44 1967.00             0 55.12511 -11.1251082 #> 89               44 1967.25             0 48.76727  -4.7672701 #> 90               52 1967.50             0 46.87228   5.1277189 #> 91               38 1967.75             0 52.16361 -14.1636115 #> 92               46 1968.00             1 40.66465   5.3353452 #> 93               36 1968.25             1 46.06175 -10.0617452 #> 94               49 1968.50             1 41.26400   7.7359991 #> 95               35 1968.75             1 48.28326 -13.2832553 #> 96               44 1969.00             0 44.57879  -0.5787864 #> 97               59 1969.25             0 46.00413  12.9958679 #> 98               65 1969.50             0 56.79353   8.2064744 #> 99               65 1969.75             0 63.13076   1.8692403 #> 100              56 1970.00             0 64.07825  -8.0782542 #> 101              66 1970.25             0 58.12551   7.8744925 #> 102              53 1970.50             0 63.31843 -10.3184287 #> 103              61 1970.75             0 56.29917   4.7008257 #> 104              52 1971.00             0 59.53760  -7.5376000 #> 105              51 1971.25             0 54.84818  -3.8481793 #> 106              48 1971.50             0 52.76552  -4.7655212 #> 107              54 1971.75             0 50.62336   3.3766434 #> 108              49 1972.00             1 50.61565  -1.6156526 #> 109              49 1972.25             1 50.57265  -1.5726461 #> 110              61 1972.50             1 50.33616  10.6638399 #> 111              NA 1972.75             1 58.27316          NA #> 112              NA 1973.00             0 61.86702          NA #> 113              68 1973.25             0 61.49687   6.5031319 #> 114              44 1973.50             0 61.26648 -17.2664787 #> 115              40 1973.75             0 61.05564 -21.0556426 #> 116              27 1974.00             0 60.87981 -33.8798101 #> 117              28 1974.25             0 60.73022 -32.7302173 #> 118              25 1974.50             0 60.60351 -35.6035074 #> 119              24 1974.75             0 60.49608 -36.4960763 #> 120              24 1975.00             0 60.40501 -36.4050102  # We can use arima_tidy to not have to generate xreg manually fit <- arima_tidy(approval_rating ~ election_year, order = c(2, 0, 0),                   data = presidents_df[1:110, ]) extract_yhat(fit, presidents_df) #>     approval_rating    date election_year  .fitted      .resid #> 1                NA 1945.25             0       NA          NA #> 2                87 1945.50             0 70.43649  16.5635128 #> 3                82 1945.75             0 81.19555   0.8044465 #> 4                75 1946.00             0 78.79648  -3.7964778 #> 5                63 1946.25             0 73.37698 -10.3769849 #> 6                50 1946.50             0 64.33458 -14.3345791 #> 7                43 1946.75             0 53.84118 -10.8411782 #> 8                32 1947.00             0 47.15836 -15.1583593 #> 9                35 1947.25             0 38.77737  -3.7773698 #> 10               60 1947.50             0 39.02455  20.9754546 #> 11               54 1947.75             0 56.03370  -2.0337002 #> 12               55 1948.00             1 52.51064   2.4893584 #> 13               36 1948.25             1 54.54114 -18.5411439 #> 14               39 1948.50             1 42.68524  -3.6852427 #> 15               NA 1948.75             1       NA          NA #> 16               NA 1949.00             0       NA          NA #> 17               69 1949.25             0 54.29341  14.7065935 #> 18               57 1949.50             0 65.68901  -8.6890065 #> 19               57 1949.75             0 59.41859  -2.4185868 #> 20               51 1950.00             0 57.52360  -6.5235978 #> 21               45 1950.25             0 53.55510  -8.5551000 #> 22               37 1950.50             0 48.63911 -11.6391077 #> 23               46 1950.75             0 42.40028   3.5997172 #> 24               39 1951.00             0 47.08970  -8.0897035 #> 25               36 1951.25             0 43.88103  -7.8810311 #> 26               24 1951.50             0 40.79137 -16.7913720 #> 27               32 1951.75             0 32.38063  -0.3806291 #> 28               23 1952.00             1 32.27452  -9.2745160 #> 29               25 1952.25             1 29.90168  -4.9016758 #> 30               32 1952.50             1 30.35636   1.6436406 #> 31               NA 1952.75             1       NA          NA #> 32               32 1953.00             0 40.41909  -8.4190913 #> 33               59 1953.25             0 37.56652  21.4334830 #> 34               74 1953.50             0 54.89854  19.1014634 #> 35               75 1953.75             0 69.08351   5.9164936 #> 36               60 1954.00             0 72.11366 -12.1136589 #> 37               71 1954.25             0 62.35033   8.6496698 #> 38               61 1954.50             0 67.25717  -6.2571732 #> 39               71 1954.75             0 62.38008   8.6199165 #> 40               57 1955.00             0 67.41509 -10.4150890 #> 41               71 1955.25             0 59.73442  11.2655817 #> 42               68 1955.50             0 66.78343   1.2165740 #> 43               79 1955.75             0 67.01000  11.9900024 #> 44               73 1956.00             1 70.30938   2.6906249 #> 45               76 1956.25             1 70.39453   5.6054690 #> 46               71 1956.50             1 71.98438  -0.9843782 #> 47               67 1956.75             1 69.15104  -2.1510439 #> 48               75 1957.00             0 69.21825   5.7817455 #> 49               79 1957.25             0 71.56134   7.4386586 #> 50               62 1957.50             0 74.91724 -12.9172399 #> 51               63 1957.75             0 64.30483  -1.3048258 #> 52               57 1958.00             0 62.28167  -5.2816743 #> 53               60 1958.25             0 58.47109   1.5289077 #> 54               49 1958.50             0 59.50785 -10.5078467 #> 55               48 1958.75             0 52.70601  -4.7060146 #> 56               52 1959.00             0 50.30753   1.6924749 #> 57               57 1959.25             0 52.79527   4.2047255 #> 58               62 1959.50             0 56.73402   5.2659810 #> 59               61 1959.75             0 60.83068   0.1693207 #> 60               66 1960.00             1 57.45639   8.5436128 #> 61               71 1960.25             1 62.92213   8.0778666 #> 62               62 1960.50             1 67.57189  -5.5718864 #> 63               61 1960.75             1 62.40872  -1.4087185 #> 64               57 1961.00             0 63.82851  -6.8285150 #> 65               72 1961.25             0 58.70835  13.2916465 #> 66               83 1961.50             0 67.44484  15.5551577 #> 67               71 1961.75             0 77.08916  -6.0891578 #> 68               78 1962.00             0 70.88924   7.1107645 #> 69               79 1962.25             0 73.62416   5.3758394 #> 70               71 1962.50             0 75.39099  -4.3909871 #> 71               62 1962.75             0 70.25757  -8.2575725 #> 72               74 1963.00             0 63.04150  10.9585002 #> 73               76 1963.25             0 69.55725   6.4427464 #> 74               64 1963.50             0 72.77508  -8.7750752 #> 75               62 1963.75             0 65.15391  -3.1539111 #> 76               57 1964.00             1 58.43363  -1.4336350 #> 77               80 1964.25             1 57.12730  22.8726975 #> 78               73 1964.50             1 72.10339   0.8966086 #> 79               69 1964.75             1 71.10554  -2.1055395 #> 80               69 1965.00             0 70.85692  -1.8569186 #> 81               71 1965.25             0 67.90868   3.0913249 #> 82               64 1965.50             0 68.67841  -4.6784150 #> 83               69 1965.75             0 64.36433   4.6356676 #> 84               62 1966.00             0 66.56600  -4.5660036 #> 85               63 1966.25             0 62.72567   0.2743317 #> 86               46 1966.50             0 62.28167 -16.2816743 #> 87               56 1966.75             0 51.19551   4.8044870 #> 88               44 1967.00             0 55.12511 -11.1251082 #> 89               44 1967.25             0 48.76727  -4.7672701 #> 90               52 1967.50             0 46.87228   5.1277189 #> 91               38 1967.75             0 52.16361 -14.1636115 #> 92               46 1968.00             1 40.66465   5.3353452 #> 93               36 1968.25             1 46.06175 -10.0617452 #> 94               49 1968.50             1 41.26400   7.7359991 #> 95               35 1968.75             1 48.28326 -13.2832553 #> 96               44 1969.00             0 44.57879  -0.5787864 #> 97               59 1969.25             0 46.00413  12.9958679 #> 98               65 1969.50             0 56.79353   8.2064744 #> 99               65 1969.75             0 63.13076   1.8692403 #> 100              56 1970.00             0 64.07825  -8.0782542 #> 101              66 1970.25             0 58.12551   7.8744925 #> 102              53 1970.50             0 63.31843 -10.3184287 #> 103              61 1970.75             0 56.29917   4.7008257 #> 104              52 1971.00             0 59.53760  -7.5376000 #> 105              51 1971.25             0 54.84818  -3.8481793 #> 106              48 1971.50             0 52.76552  -4.7655212 #> 107              54 1971.75             0 50.62336   3.3766434 #> 108              49 1972.00             1 50.61565  -1.6156526 #> 109              49 1972.25             1 50.57265  -1.5726461 #> 110              61 1972.50             1 50.33616  10.6638399 #> 111              NA 1972.75             1 58.27316          NA #> 112              NA 1973.00             0 61.86702          NA #> 113              68 1973.25             0 61.49687   6.5031319 #> 114              44 1973.50             0 61.26648 -17.2664787 #> 115              40 1973.75             0 61.05564 -21.0556426 #> 116              27 1974.00             0 60.87981 -33.8798101 #> 117              28 1974.25             0 60.73022 -32.7302173 #> 118              25 1974.50             0 60.60351 -35.6035074 #> 119              24 1974.75             0 60.49608 -36.4960763 #> 120              24 1975.00             0 60.40501 -36.4050102"},{"path":"/reference/extract_yhat.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract fitted values from a model object — extract_yhat","title":"Extract fitted values from a model object — extract_yhat","text":"consistent method extracting fitted values model fit object. Generally wrapper around augment broom package, one always returns values scale response variable. extract_yhat also covers arima INLA models augment . extract_yhat generic, meaning method invoked depends type model passed first argument.","code":""},{"path":"/reference/extract_yhat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract fitted values from a model object — extract_yhat","text":"","code":"extract_yhat(fit, newdata, ...)  # S3 method for merMod extract_yhat(fit, newdata, ...)  # S3 method for inla extract_yhat(fit, newdata, se_fit = FALSE, ...)"},{"path":"/reference/extract_yhat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract fitted values from a model object — extract_yhat","text":"fit model fit object, generated lm glm. newdata data frame containing data used predict fitted values. Must covariates used model fit object calculate fitted values. ... Additional arguments passed methods se_fit TRUE, also calculate standard errors fitted values. available methods.","code":""},{"path":"/reference/extract_yhat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract fitted values from a model object — extract_yhat","text":"input data frame newdata added column .fitted containing predicted values. se_fit = TRUE, data frame also contains column .se.fit errors predicted values. models may also return additional columns, .resid. columns added extract_yhat augment start dot.","code":""},{"path":"/reference/extract_yhat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract fitted values from a model object — extract_yhat","text":"possible, extract_yhat passes arguments augment, calling augment(x = fit, newdata = newdata, type.predict = \"response\"). cases, glmer models, extract_yhat takes additional steps better handle NA values original dataset used fit model. extract_yhat can also extract fitted values arima models models INLA package augment methods. See details individual method.","code":""},{"path":"/reference/extract_yhat.html","id":"method-details","dir":"Reference","previous_headings":"","what":"Method Details","title":"Extract fitted values from a model object — extract_yhat","text":"lm, glm: Identical augment(x = fit, newdata = newdata, type.predict = \"response\") lmer, glmer: Starts calling augment, removes columns \".mu\", \".offset\", \".sqrtXwt\", \".sqrtrwt\", \".weights\", \".wtres\", \".gam\", \".eta\" result. columns necessary statistical surveillance, errors original data frame contains NA's. addition, extract_yhat gives error offset included option glmer. workaround, offsets can specified term model formula, via offset(VAR) INLA: Uses linear predictor calculated INLA link function calculated fitted values. model must fit option control.predictor=list(compute = TRUE) order extract_yhat work. Can called option se_fit = TRUE, gives standard errors fitted values, note can extremely slow. Arima models: See extract_yhat.Arima","code":""},{"path":[]},{"path":"/reference/extract_yhat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract fitted values from a model object — extract_yhat","text":"","code":"library(\"scanstatistics\") library(\"broom\") library(\"broom.mixed\") data(NM_popcas)  # Fit a model to all the data, and then extract predictions: fit <- glm(count ~ year,            family = poisson(link = \"log\"),            offset = log(population),            data = NM_popcas[1:600, ])  # Then use extract_yhat to get out predictions for our observed variable: extract_yhat(fit, NM_popcas, se_fit = TRUE) #> # A tibble: 608 x 6 #>     year county     population count .fitted .se.fit #>    <int> <fct>           <int> <int>   <dbl>   <dbl> #>  1  1973 bernalillo     353813    16    13.7   0.851 #>  2  1974 bernalillo     357520    16    14.0   0.807 #>  3  1975 bernalillo     368166    16    14.7   0.778 #>  4  1976 bernalillo     378483    16    15.4   0.745 #>  5  1977 bernalillo     388471    15    16.1   0.710 #>  6  1978 bernalillo     398130    18    16.8   0.674 #>  7  1979 bernalillo     407460    19    17.4   0.641 #>  8  1980 bernalillo     416461    22    18.1   0.613 #>  9  1981 bernalillo     425133    21    18.8   0.593 #> 10  1982 bernalillo     433476    21    19.5   0.587 #> # ... with 598 more rows  # We can also fit glmer models fit_glmer <- lme4::glmer(count ~ I(year - 1980) + (1 | county) + offset(log(population)),                          family = \"poisson\",                          data = NM_popcas[1:600, ]) extract_yhat(fit_glmer, NM_popcas, se_fit = TRUE) #> # A tibble: 608 x 5 #>     year county     population count .fitted #>    <int> <fct>           <int> <int>   <dbl> #>  1  1973 bernalillo     353813    16    14.9 #>  2  1974 bernalillo     357520    16    15.3 #>  3  1975 bernalillo     368166    16    16.0 #>  4  1976 bernalillo     378483    16    16.8 #>  5  1977 bernalillo     388471    15    17.5 #>  6  1978 bernalillo     398130    18    18.2 #>  7  1979 bernalillo     407460    19    19.0 #>  8  1980 bernalillo     416461    22    19.8 #>  9  1981 bernalillo     425133    21    20.5 #> 10  1982 bernalillo     433476    21    21.3 #> # ... with 598 more rows  if (FALSE) {   # We can also use INLA models if available:   # All the data points to generate predictions for much be included in the   # data arg of the INLA model   fit_inla <- INLA::inla(count ~ year + f(county, model = \"iid\"),                          family = \"poisson\",                          control.family = list(link = \"log\"),                          offset = log(population),                          # This option is required to use extract_yhat                          control.predictor = list(compute = TRUE),                          data = NM_popcas)    extract_yhat(fit_inla, NM_popcas) }"},{"path":"/reference/glance_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize an INLA model — glance_inla","title":"Summarize an INLA model — glance_inla","text":"glance summarizes model data frame. glance_inla adapts INLA models.","code":""},{"path":"/reference/glance_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize an INLA model — glance_inla","text":"","code":"glance_inla(fit)"},{"path":"/reference/glance_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize an INLA model — glance_inla","text":"fit model fit object generated INLA.","code":""},{"path":"/reference/glance_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize an INLA model — glance_inla","text":"1-row data frame containing information goodness fit, p-values, model convergence model object. Contains information DIC, WAIC, log likelihood, CPO, effective number parameters.","code":""},{"path":"/reference/glance_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize an INLA model — glance_inla","text":"","code":"x <- rnorm(20, mean = 0, sd = 3) y <- 1.3 + 2.5 * x + rnorm(20, sd = 1) df <- data.frame(x = x, y = y)  if (FALSE) { fit_inla <- INLA::inla(y ~ x, data = df) glance_inla(fit_inla)  data(NM_data) fit_inla <- INLA::inla(count ~ population + f(county, model = \"iid\"),                        data = NM_data,                        control.compute = list(dic = TRUE, cpo = TRUE, waic = TRUE)) glance_inla(fit_inla) }"},{"path":"/reference/NM_county_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Geographical boundaries for counties in New Mexico — NM_county_sf","title":"Geographical boundaries for counties in New Mexico — NM_county_sf","text":"simple features collection containing geographical boundaries counties   New Mexico, 2010. avoid errors looking counties time, Cibola county   included.","code":""},{"path":"/reference/NM_county_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geographical boundaries for counties in New Mexico — NM_county_sf","text":"","code":"NM_county_sf"},{"path":"/reference/NM_county_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geographical boundaries for counties in New Mexico — NM_county_sf","text":"Simple Features collection 32 rows 2 variables: id_space integer label associated county (1-32) county name county, lower case   (\"bernalillo\" - \"valencia\")","code":""},{"path":"/reference/NM_county_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Geographical boundaries for counties in New Mexico — NM_county_sf","text":"http://rgis.unm.edu/rgis6/","code":""},{"path":"/reference/NM_county_sf.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Geographical boundaries for counties in New Mexico — NM_county_sf","text":"save memory, county boundaries simplified using st_simplify    command therefore exactly match source shapefiles.","code":""},{"path":"/reference/NM_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Population and brain cancer cases in New Mexico, 1973 - 1991 — NM_data","title":"Population and brain cancer cases in New Mexico, 1973 - 1991 — NM_data","text":"data set containing population count dnumber brain cancer cases   county New Mexico years 1973 - 1991. data formatted valid   spacetime data frame","code":""},{"path":"/reference/NM_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population and brain cancer cases in New Mexico, 1973 - 1991 — NM_data","text":"","code":"NM_data"},{"path":"/reference/NM_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population and brain cancer cases in New Mexico, 1973 - 1991 — NM_data","text":"data frame 608 rows 7 columns: id_time integer label associated year (1-19) id_space integer label associated county (1-32) year year cases recorded (1973-1991) county name county, lower cases, spaces (\"bernalillo\" -   \"valencia\") population popoulation county year. Interpolated censuses   1973, 1982, 1991 (977-490248) count number brain cancer cases reported county year (0-34) baseline_est simple baseline estimate expected number cases based   population (0.044-22.5)","code":""},{"path":"/reference/NM_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population and brain cancer cases in New Mexico, 1973 - 1991 — NM_data","text":"https://github.com/BenjaK/scanstatistics","code":""},{"path":"/reference/pad_spacetime_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a spacetime data frame — pad_spacetime_data","title":"Pad a spacetime data frame — pad_spacetime_data","text":"Pad spacetime data frame","code":""},{"path":"/reference/pad_spacetime_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a spacetime data frame — pad_spacetime_data","text":"","code":"pad_spacetime_data(df)"},{"path":"/reference/pad_spacetime_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a spacetime data frame — pad_spacetime_data","text":"df data frame data frame extension (e.g., tibble) includes columns id_space id_time integers. Unlike spacetime_data, may gaps skips entries columns.","code":""},{"path":"/reference/pad_spacetime_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad a spacetime data frame — pad_spacetime_data","text":"data frame padded extra rows valid spacetime data frame. padding,  combinations id_space id_time associated least one row, skipped values two columns. Added rows contain NA columns id_space id_time.","code":""},{"path":[]},{"path":"/reference/pad_spacetime_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad a spacetime data frame — pad_spacetime_data","text":"","code":"df <- data.frame(id_space = c(1, 2),                  id_time = c(1, 3),                  y = c(1, 3)) padded_data <- pad_spacetime_data(df) validate_spacetime_data(padded_data)"},{"path":"/reference/parallel_cusum_gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"parallel_cusum_gaussian calculates Gaussian CUSUM statistic independently spatial region, time points. Unlike e.g., scan_cusum_poisson, information multiple spatial regions never aggregated.","code":""},{"path":"/reference/parallel_cusum_gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"","code":"parallel_cusum_gaussian(   wide_cases,   wide_baseline = NULL,   mean = 0,   sigma = 1,   drift = 0.5 )"},{"path":"/reference/parallel_cusum_gaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. mean estimated mean residuals (wide_cases - wide_baseline) sigma estimated standard deviation residuals. drift downward drift use calculating CUSUM statistic.  value drift typically half expected increase value standardized residuals outbreak.","code":""},{"path":"/reference/parallel_cusum_gaussian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"matrix dimensions wide_cases, rows indicate time (oldest newest) columns indicate locations. Element (, j)  indicates value CUSUM statistic time region j. value CUSUM statistic row incorporates information time points 1 thought .","code":""},{"path":"/reference/parallel_cusum_gaussian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"CUSUM statistic widely used surveillance technique purely temporal processes. calculated taking cumulative sum standard residuals downward drift floor 0. Gaussian process, residuals calculated resid = wide_cases - wide_baseline, standard residuals calculated (resid - mean)/sigma. CUSUM statistic calculated summing standardized residuals downward drift drift. three parameters used calculating standardized residuals CUSUM statistic, mean, sigma, drift, can scalar, vector separate value spatial region, matrix dimensions wide_cases","code":""},{"path":[]},{"path":"/reference/parallel_cusum_gaussian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian","text":"","code":"outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- parallel_cusum_gaussian(wide_cases, wide_baseline,                                    mean = 1,                                    sigma = 2,                                    drift = 0.5)  v_mean <- c(rep(0.0, 8), 2) m_sigma <- matrix(1.5, nrow = 4, ncol = 9) m_sigma[c(3, 4), c(4, 5)] <- 0.25 scanres <- parallel_cusum_gaussian(wide_cases, wide_baseline,                                    mean = v_mean,                                    sigma = m_sigma,                                    drift = 0.5)"},{"path":"/reference/parallel_cusum_gaussian2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"parallel_cusum_gaussian calculates Gaussian CUSUM statistic independently spatial region, time points. spatial region considered independently.","code":""},{"path":"/reference/parallel_cusum_gaussian2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"","code":"parallel_cusum_gaussian2(   spacetime_data,   outcome_col,   baseline_col = NULL,   mean = 0,   sigma = 1,   drift = 0.5 )"},{"path":"/reference/parallel_cusum_gaussian2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts baseline_col Optional. column data containing baseline estimates outcome interest. present, assumed 0 . mean estimated mean residuals (spacetime_data$outcome_col - spacetime_data$baseline_col). Can either scalar value column spacetime_data sigma estimated standard deviation residuals. Can either scalar value column spacetime_data drift downward drift use calculating CUSUM statistic.  value drift typically half expected increase value standardized residuals outbreak. Can either scalar value column spacetime_data","code":""},{"path":"/reference/parallel_cusum_gaussian2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"spacetime_data added column .action_level containing value CUSUM statistic point time.","code":""},{"path":"/reference/parallel_cusum_gaussian2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"CUSUM statistic widely used surveillance technique purely temporal processes. calculated taking cumulative sum standard residuals downward drift floor 0. Gaussian process, residuals calculated resid = outcome - baseline, standard residuals calculated (resid - mean)/sigma. CUSUM statistic calculated summing standardized residuals downward drift drift. three parameters used calculating standardized residuals CUSUM statistic, mean, sigma, drift, can either scalar column spacetime_data.","code":""},{"path":[]},{"path":"/reference/parallel_cusum_gaussian2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Gaussian CUSUM statistic over multiple spatial regions — parallel_cusum_gaussian2","text":"","code":"data(NM_data)  parallel_cusum_gaussian2(NM_data, count, drift = 1) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1              15 #> 2              30 #> 3              45 #> 4              60 #> 5              74 #> 6              91 #> 7             109 #> 8             130 #> 9             150 #> 10            170 #> 11            195 #> 12            211 #> 13            238 #> 14            264 #> 15            280 #> 16            305 #> 17            338 #> 18            366 #> 19            391 #> 20              0 #> 21              0 #> 22              0 #> 23              0 #> 24              0 #> 25              0 #> 26              0 #> 27              0 #> 28              0 #> 29              0 #> 30              0 #> 31              0 #> 32              0 #> 33              0 #> 34              0 #> 35              0 #> 36              0 #> 37              0 #> 38              0 #> 39              1 #> 40              3 #> 41              5 #> 42              5 #> 43              5 #> 44              5 #> 45              9 #> 46             10 #> 47             12 #> 48             14 #> 49             17 #> 50             20 #> 51             23 #> 52             24 #> 53             26 #> 54             31 #> 55             40 #> 56             40 #> 57             45 #> 58              0 #> 59              0 #> 60              0 #> 61              0 #> 62              0 #> 63              0 #> 64              0 #> 65              0 #> 66              0 #> 67              0 #> 68              0 #> 69              0 #> 70              1 #> 71              1 #> 72              1 #> 73              1 #> 74              0 #> 75              0 #> 76              0 #> 77              1 #> 78              2 #> 79              4 #> 80              6 #> 81              9 #> 82             11 #> 83             11 #> 84             10 #> 85              9 #> 86             14 #> 87             14 #> 88             13 #> 89             13 #> 90             14 #> 91             16 #> 92             15 #> 93             17 #> 94             16 #> 95             18 #> 96              0 #> 97              0 #> 98              0 #> 99              0 #> 100             0 #> 101             0 #> 102             0 #> 103             0 #> 104             0 #> 105             0 #> 106             0 #> 107             0 #> 108             0 #> 109             0 #> 110             0 #> 111             0 #> 112             0 #> 113             0 #> 114             0 #> 115             0 #> 116             2 #> 117             3 #> 118             3 #> 119             6 #> 120            10 #> 121            13 #> 122            16 #> 123            20 #> 124            23 #> 125            24 #> 126            28 #> 127            37 #> 128            45 #> 129            47 #> 130            55 #> 131            56 #> 132            60 #> 133            66 #> 134             1 #> 135             1 #> 136             1 #> 137             1 #> 138             3 #> 139             3 #> 140             4 #> 141             3 #> 142             4 #> 143             8 #> 144             7 #> 145             8 #> 146            10 #> 147            10 #> 148            10 #> 149            11 #> 150            14 #> 151            17 #> 152            19 #> 153             0 #> 154             0 #> 155             0 #> 156             0 #> 157             0 #> 158             0 #> 159             0 #> 160             1 #> 161             0 #> 162             0 #> 163             0 #> 164             0 #> 165             1 #> 166             0 #> 167             0 #> 168             3 #> 169             3 #> 170             2 #> 171             2 #> 172             0 #> 173             0 #> 174             0 #> 175             0 #> 176             0 #> 177             0 #> 178             0 #> 179             0 #> 180             0 #> 181             0 #> 182             0 #> 183             0 #> 184             0 #> 185             0 #> 186             0 #> 187             0 #> 188             1 #> 189             0 #> 190             0 #> 191             0 #> 192             0 #> 193             0 #> 194             0 #> 195             0 #> 196             0 #> 197             0 #> 198             0 #> 199             0 #> 200             0 #> 201             0 #> 202             0 #> 203             0 #> 204             0 #> 205             0 #> 206             0 #> 207             0 #> 208             0 #> 209             0 #> 210             0 #> 211             0 #> 212             0 #> 213             0 #> 214             0 #> 215             0 #> 216             0 #> 217             0 #> 218             0 #> 219             0 #> 220             0 #> 221             0 #> 222             0 #> 223             0 #> 224             0 #> 225             0 #> 226             0 #> 227             0 #> 228             0 #> 229             1 #> 230             2 #> 231             3 #> 232             2 #> 233             2 #> 234             6 #> 235             5 #> 236             6 #> 237             7 #> 238             6 #> 239             8 #> 240             8 #> 241            10 #> 242            10 #> 243            12 #> 244            13 #> 245            13 #> 246            13 #> 247            15 #> 248             0 #> 249             0 #> 250             1 #> 251             0 #> 252             0 #> 253             0 #> 254             0 #> 255             0 #> 256             0 #> 257             0 #> 258             0 #> 259             0 #> 260             0 #> 261             0 #> 262             0 #> 263             1 #> 264             0 #> 265             0 #> 266             0 #> 267             0 #> 268             0 #> 269             0 #> 270             0 #> 271             0 #> 272             0 #> 273             0 #> 274             0 #> 275             0 #> 276             0 #> 277             0 #> 278             1 #> 279             0 #> 280             1 #> 281             4 #> 282             5 #> 283             6 #> 284             6 #> 285             5 #> 286             0 #> 287             1 #> 288             0 #> 289             0 #> 290             0 #> 291             0 #> 292             0 #> 293             0 #> 294             0 #> 295             0 #> 296             0 #> 297             0 #> 298             0 #> 299             0 #> 300             0 #> 301             0 #> 302             0 #> 303             0 #> 304             2 #> 305             1 #> 306             1 #> 307             2 #> 308             3 #> 309             2 #> 310             2 #> 311             5 #> 312             4 #> 313             7 #> 314             7 #> 315             8 #> 316            11 #> 317            11 #> 318            11 #> 319            10 #> 320             9 #> 321            11 #> 322            11 #> 323            16 #> 324             0 #> 325             0 #> 326             0 #> 327             0 #> 328             0 #> 329             0 #> 330             0 #> 331             0 #> 332             0 #> 333             0 #> 334             0 #> 335             0 #> 336             0 #> 337             0 #> 338             0 #> 339             0 #> 340             0 #> 341             0 #> 342             0 #> 343             1 #> 344             1 #> 345             2 #> 346             1 #> 347             1 #> 348             1 #> 349             2 #> 350             2 #> 351             1 #> 352             1 #> 353             2 #> 354             1 #> 355             1 #> 356             4 #> 357             4 #> 358             4 #> 359             3 #> 360             5 #> 361             6 #> 362             0 #> 363             0 #> 364             0 #> 365             0 #> 366             0 #> 367             0 #> 368             0 #> 369             0 #> 370             0 #> 371             0 #> 372             0 #> 373             0 #> 374             0 #> 375             0 #> 376             0 #> 377             0 #> 378             0 #> 379             2 #> 380             3 #> 381             1 #> 382             3 #> 383             3 #> 384             3 #> 385             3 #> 386             3 #> 387             2 #> 388             3 #> 389             3 #> 390             4 #> 391             8 #> 392             8 #> 393             9 #> 394             8 #> 395             8 #> 396             9 #> 397             9 #> 398            10 #> 399            11 #> 400             0 #> 401             0 #> 402             0 #> 403             0 #> 404             1 #> 405             0 #> 406             1 #> 407             2 #> 408             1 #> 409             2 #> 410             5 #> 411             4 #> 412             3 #> 413             2 #> 414             1 #> 415             0 #> 416             0 #> 417             0 #> 418             1 #> 419             1 #> 420             0 #> 421             1 #> 422             0 #> 423             1 #> 424             0 #> 425             0 #> 426             0 #> 427             0 #> 428             0 #> 429             0 #> 430             2 #> 431             4 #> 432             6 #> 433             8 #> 434             8 #> 435             8 #> 436             9 #> 437             9 #> 438             3 #> 439             5 #> 440             4 #> 441             6 #> 442             9 #> 443            10 #> 444             9 #> 445            11 #> 446            10 #> 447            12 #> 448            15 #> 449            15 #> 450            18 #> 451            24 #> 452            25 #> 453            27 #> 454            33 #> 455            36 #> 456            38 #> 457             0 #> 458             0 #> 459             0 #> 460             0 #> 461             0 #> 462             2 #> 463             1 #> 464             4 #> 465             4 #> 466             3 #> 467             4 #> 468             4 #> 469             5 #> 470             9 #> 471            10 #> 472             9 #> 473             8 #> 474             8 #> 475             9 #> 476             3 #> 477             8 #> 478            11 #> 479            13 #> 480            13 #> 481            13 #> 482            15 #> 483            17 #> 484            18 #> 485            19 #> 486            21 #> 487            26 #> 488            28 #> 489            33 #> 490            41 #> 491            50 #> 492            57 #> 493            61 #> 494            63 #> 495             0 #> 496             0 #> 497             0 #> 498             1 #> 499             1 #> 500             1 #> 501             1 #> 502             0 #> 503             0 #> 504             0 #> 505             0 #> 506             1 #> 507             0 #> 508             0 #> 509             0 #> 510             0 #> 511             0 #> 512             0 #> 513             1 #> 514             0 #> 515             0 #> 516             0 #> 517             0 #> 518             0 #> 519             0 #> 520             0 #> 521             1 #> 522             0 #> 523             0 #> 524             0 #> 525             0 #> 526             0 #> 527             2 #> 528             2 #> 529             2 #> 530             4 #> 531             3 #> 532             3 #> 533             0 #> 534             0 #> 535             0 #> 536             0 #> 537             0 #> 538             1 #> 539             0 #> 540             0 #> 541             0 #> 542             0 #> 543             0 #> 544             0 #> 545             0 #> 546             0 #> 547             1 #> 548             0 #> 549             0 #> 550             2 #> 551             2 #> 552             0 #> 553             0 #> 554             0 #> 555             0 #> 556             0 #> 557             0 #> 558             0 #> 559             0 #> 560             0 #> 561             0 #> 562             0 #> 563             0 #> 564             0 #> 565             0 #> 566             0 #> 567             0 #> 568             0 #> 569             0 #> 570             0 #> 571             0 #> 572             0 #> 573             1 #> 574             0 #> 575             0 #> 576             0 #> 577             0 #> 578             0 #> 579             0 #> 580             0 #> 581             0 #> 582             0 #> 583             0 #> 584             0 #> 585             0 #> 586             0 #> 587             0 #> 588             0 #> 589             0 #> 590             3 #> 591             7 #> 592             8 #> 593             8 #> 594            11 #> 595            12 #> 596            12 #> 597            13 #> 598            13 #> 599            15 #> 600            17 #> 601            17 #> 602            22 #> 603            23 #> 604            29 #> 605            31 #> 606            35 #> 607            36 #> 608            39 parallel_cusum_gaussian2(NM_data, count, baseline_est) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1     0.000000000 #> 2     0.000000000 #> 3     0.000000000 #> 4     0.000000000 #> 5     0.000000000 #> 6     0.000000000 #> 7     0.000000000 #> 8     2.399579534 #> 9     3.401429517 #> 10    4.020639090 #> 11    9.272297393 #> 12    5.171493565 #> 13   11.733316747 #> 14   16.972856078 #> 15   11.905246563 #> 16   15.545531478 #> 17   26.908799961 #> 18   33.010141155 #> 19   36.025579737 #> 20    0.000000000 #> 21    0.000000000 #> 22    0.000000000 #> 23    0.000000000 #> 24    0.000000000 #> 25    0.000000000 #> 26    0.000000000 #> 27    0.000000000 #> 28    0.000000000 #> 29    0.000000000 #> 30    0.000000000 #> 31    0.000000000 #> 32    0.377865107 #> 33    0.756418169 #> 34    0.135980230 #> 35    0.000000000 #> 36    0.000000000 #> 37    0.000000000 #> 38    0.000000000 #> 39    0.000000000 #> 40    0.407883860 #> 41    0.761969661 #> 42    0.000000000 #> 43    0.000000000 #> 44    0.000000000 #> 45    2.161091573 #> 46    1.279484090 #> 47    1.357424870 #> 48    1.397161231 #> 49    2.400894630 #> 50    3.370872384 #> 51    4.309341812 #> 52    3.218504370 #> 53    3.100607375 #> 54    5.957898147 #> 55   12.792578142 #> 56   10.606848813 #> 57   13.414698573 #> 58    0.000000000 #> 59    0.000000000 #> 60    0.000000000 #> 61    0.000000000 #> 62    0.000000000 #> 63    0.000000000 #> 64    0.000000000 #> 65    0.000000000 #> 66    0.000000000 #> 67    0.000000000 #> 68    0.000000000 #> 69    0.000000000 #> 70    0.858321709 #> 71    0.723064329 #> 72    0.596199996 #> 73    0.479746711 #> 74    0.000000000 #> 75    0.000000000 #> 76    0.000000000 #> 77    0.000000000 #> 78    0.000000000 #> 79    0.557032441 #> 80    1.123237611 #> 81    2.696459920 #> 82    3.274406184 #> 83    1.854920812 #> 84    0.000000000 #> 85    0.000000000 #> 86    3.574781672 #> 87    2.143234162 #> 88    0.000000000 #> 89    0.000000000 #> 90    0.000000000 #> 91    0.520846023 #> 92    0.000000000 #> 93    0.483742332 #> 94    0.000000000 #> 95    0.453885098 #> 96    0.384928109 #> 97    0.000000000 #> 98    0.000000000 #> 99    0.000000000 #> 100   0.000000000 #> 101   0.000000000 #> 102   0.000000000 #> 103   0.387725791 #> 104   0.000000000 #> 105   0.000000000 #> 106   0.000000000 #> 107   0.000000000 #> 108   0.000000000 #> 109   0.000000000 #> 110   0.000000000 #> 111   0.000000000 #> 112   0.000000000 #> 113   0.000000000 #> 114   0.000000000 #> 115   0.000000000 #> 116   0.000000000 #> 117   0.000000000 #> 118   0.000000000 #> 119   0.000000000 #> 120   0.400340285 #> 121   0.000000000 #> 122   0.000000000 #> 123   0.000000000 #> 124   0.000000000 #> 125   0.000000000 #> 126   0.000000000 #> 127   4.197566131 #> 128   7.195075033 #> 129   3.985463702 #> 130   6.561669139 #> 131   1.916628340 #> 132   0.043278304 #> 133   0.090446567 #> 134   0.000000000 #> 135   0.000000000 #> 136   0.000000000 #> 137   0.000000000 #> 138   0.340326707 #> 139   0.000000000 #> 140   0.000000000 #> 141   0.000000000 #> 142   0.000000000 #> 143   2.104312377 #> 144   0.000000000 #> 145   0.000000000 #> 146   0.069731187 #> 147   0.000000000 #> 148   0.000000000 #> 149   0.000000000 #> 150   1.148524933 #> 151   2.339060968 #> 152   2.545970324 #> 153   0.000000000 #> 154   0.000000000 #> 155   0.000000000 #> 156   0.000000000 #> 157   0.000000000 #> 158   0.000000000 #> 159   0.000000000 #> 160   0.247463789 #> 161   0.000000000 #> 162   0.000000000 #> 163   0.000000000 #> 164   0.000000000 #> 165   0.193757458 #> 166   0.000000000 #> 167   0.000000000 #> 168   2.196325822 #> 169   1.399301873 #> 170   0.000000000 #> 171   0.000000000 #> 172   0.000000000 #> 173   0.000000000 #> 174   0.000000000 #> 175   0.000000000 #> 176   0.000000000 #> 177   0.000000000 #> 178   0.000000000 #> 179   0.000000000 #> 180   0.000000000 #> 181   0.000000000 #> 182   0.000000000 #> 183   0.000000000 #> 184   0.000000000 #> 185   0.309803454 #> 186   0.620524181 #> 187   0.000000000 #> 188   1.311775591 #> 189   0.623688773 #> 190   0.000000000 #> 191   0.000000000 #> 192   0.000000000 #> 193   0.000000000 #> 194   0.000000000 #> 195   0.000000000 #> 196   0.000000000 #> 197   0.000000000 #> 198   0.000000000 #> 199   0.000000000 #> 200   0.000000000 #> 201   0.000000000 #> 202   0.000000000 #> 203   0.000000000 #> 204   0.000000000 #> 205   0.000000000 #> 206   0.000000000 #> 207   0.000000000 #> 208   0.000000000 #> 209   0.000000000 #> 210   0.265728489 #> 211   0.000000000 #> 212   0.251648349 #> 213   0.000000000 #> 214   0.234220163 #> 215   0.461377325 #> 216   0.000000000 #> 217   0.000000000 #> 218   0.000000000 #> 219   0.000000000 #> 220   0.000000000 #> 221   0.000000000 #> 222   0.000000000 #> 223   0.000000000 #> 224   0.000000000 #> 225   0.000000000 #> 226   0.000000000 #> 227   0.225506070 #> 228   0.000000000 #> 229   0.000000000 #> 230   0.000000000 #> 231   0.000000000 #> 232   0.000000000 #> 233   0.000000000 #> 234   1.753868247 #> 235   0.000000000 #> 236   0.000000000 #> 237   0.000000000 #> 238   0.000000000 #> 239   0.000000000 #> 240   0.000000000 #> 241   0.000000000 #> 242   0.000000000 #> 243   0.000000000 #> 244   0.000000000 #> 245   0.000000000 #> 246   0.000000000 #> 247   0.000000000 #> 248   0.000000000 #> 249   0.000000000 #> 250   1.084291900 #> 251   0.147348931 #> 252   0.000000000 #> 253   0.000000000 #> 254   0.000000000 #> 255   0.000000000 #> 256   0.000000000 #> 257   0.000000000 #> 258   0.000000000 #> 259   0.000000000 #> 260   0.000000000 #> 261   0.000000000 #> 262   0.000000000 #> 263   0.916935450 #> 264   0.000000000 #> 265   0.000000000 #> 266   0.000000000 #> 267   0.000000000 #> 268   0.000000000 #> 269   0.000000000 #> 270   0.000000000 #> 271   0.000000000 #> 272   0.000000000 #> 273   0.000000000 #> 274   0.000000000 #> 275   0.000000000 #> 276   0.000000000 #> 277   0.000000000 #> 278   0.672665664 #> 279   0.000000000 #> 280   0.667804118 #> 281   3.335470644 #> 282   4.004604808 #> 283   4.676765972 #> 284   4.353513501 #> 285   3.032187303 #> 286   0.000000000 #> 287   0.876208532 #> 288   0.000000000 #> 289   0.000000000 #> 290   0.000000000 #> 291   0.000000000 #> 292   0.000000000 #> 293   0.000000000 #> 294   0.000000000 #> 295   0.000000000 #> 296   0.000000000 #> 297   0.000000000 #> 298   0.000000000 #> 299   0.000000000 #> 300   0.000000000 #> 301   0.000000000 #> 302   0.000000000 #> 303   0.000000000 #> 304   1.629324517 #> 305   0.000000000 #> 306   0.000000000 #> 307   0.000000000 #> 308   0.000000000 #> 309   0.000000000 #> 310   0.000000000 #> 311   1.034874815 #> 312   0.000000000 #> 313   0.936267973 #> 314   0.000000000 #> 315   0.000000000 #> 316   0.809133942 #> 317   0.000000000 #> 318   0.000000000 #> 319   0.000000000 #> 320   0.000000000 #> 321   0.000000000 #> 322   0.000000000 #> 323   2.622239579 #> 324   0.000000000 #> 325   0.000000000 #> 326   0.000000000 #> 327   0.000000000 #> 328   0.000000000 #> 329   0.297236815 #> 330   0.000000000 #> 331   0.000000000 #> 332   0.000000000 #> 333   0.000000000 #> 334   0.306180226 #> 335   0.000000000 #> 336   0.000000000 #> 337   0.000000000 #> 338   0.000000000 #> 339   0.000000000 #> 340   0.000000000 #> 341   0.000000000 #> 342   0.000000000 #> 343   0.000000000 #> 344   0.000000000 #> 345   0.000000000 #> 346   0.000000000 #> 347   0.000000000 #> 348   0.000000000 #> 349   0.000000000 #> 350   0.000000000 #> 351   0.000000000 #> 352   0.000000000 #> 353   0.000000000 #> 354   0.000000000 #> 355   0.000000000 #> 356   1.265844143 #> 357   0.000000000 #> 358   0.000000000 #> 359   0.000000000 #> 360   0.117245926 #> 361   0.000000000 #> 362   0.000000000 #> 363   0.000000000 #> 364   0.000000000 #> 365   0.001966653 #> 366   0.005997170 #> 367   0.011953960 #> 368   0.000000000 #> 369   0.009258973 #> 370   0.000000000 #> 371   0.000000000 #> 372   0.012928064 #> 373   0.000000000 #> 374   0.000000000 #> 375   0.000000000 #> 376   0.015450565 #> 377   0.031130448 #> 378   0.000000000 #> 379   2.015588156 #> 380   3.031084585 #> 381   0.246133743 #> 382   1.488506668 #> 383   0.719138498 #> 384   0.000000000 #> 385   0.000000000 #> 386   0.000000000 #> 387   0.000000000 #> 388   0.157020676 #> 389   0.000000000 #> 390   0.120559077 #> 391   3.221396785 #> 392   2.301504125 #> 393   2.359917959 #> 394   0.395629288 #> 395   0.000000000 #> 396   0.000000000 #> 397   0.000000000 #> 398   0.000000000 #> 399   0.000000000 #> 400   0.000000000 #> 401   0.000000000 #> 402   0.000000000 #> 403   0.000000000 #> 404   0.760815595 #> 405   0.000000000 #> 406   0.765035050 #> 407   1.530574600 #> 408   0.295563787 #> 409   1.058947746 #> 410   3.819671613 #> 411   2.576634661 #> 412   1.328782027 #> 413   0.075058845 #> 414   0.000000000 #> 415   0.000000000 #> 416   0.000000000 #> 417   0.000000000 #> 418   0.708485173 #> 419   0.405785100 #> 420   0.000000000 #> 421   0.352170496 #> 422   0.000000000 #> 423   0.239208333 #> 424   0.000000000 #> 425   0.000000000 #> 426   0.000000000 #> 427   0.000000000 #> 428   0.000000000 #> 429   0.000000000 #> 430   0.532495390 #> 431   0.924464563 #> 432   1.166046837 #> 433   1.247381527 #> 434   0.000000000 #> 435   0.000000000 #> 436   0.000000000 #> 437   0.000000000 #> 438   0.806978351 #> 439   0.535071229 #> 440   0.000000000 #> 441   0.000000000 #> 442   0.116638730 #> 443   0.000000000 #> 444   0.000000000 #> 445   0.000000000 #> 446   0.000000000 #> 447   0.000000000 #> 448   0.000000000 #> 449   0.000000000 #> 450   0.000000000 #> 451   2.169095775 #> 452   0.000000000 #> 453   0.000000000 #> 454   2.148778179 #> 455   1.323652773 #> 456   0.000000000 #> 457   0.000000000 #> 458   0.000000000 #> 459   0.000000000 #> 460   0.000000000 #> 461   0.000000000 #> 462   1.448759338 #> 463   0.000000000 #> 464   2.446833064 #> 465   1.889584264 #> 466   0.326143872 #> 467   0.754448022 #> 468   0.172432853 #> 469   0.578034498 #> 470   3.969143231 #> 471   4.343695187 #> 472   2.699580638 #> 473   1.034781585 #> 474   0.347188299 #> 475   0.651339556 #> 476   0.690851596 #> 477   3.348727229 #> 478   3.908729839 #> 479   3.369116606 #> 480   0.728098850 #> 481   0.000000000 #> 482   0.000000000 #> 483   0.000000000 #> 484   0.000000000 #> 485   0.000000000 #> 486   0.000000000 #> 487   1.599617833 #> 488   0.083705138 #> 489   1.450427369 #> 490   5.698041708 #> 491  10.824759472 #> 492  13.828837844 #> 493  13.708488139 #> 494  11.545301788 #> 495   0.000000000 #> 496   0.000000000 #> 497   0.127633047 #> 498   1.250221092 #> 499   1.367672409 #> 500   1.479803543 #> 501   1.586568630 #> 502   0.687784216 #> 503   0.783358573 #> 504   0.873154110 #> 505   0.957033237 #> 506   2.034904226 #> 507   1.106629487 #> 508   1.172117291 #> 509   1.231230049 #> 510   0.283830168 #> 511   0.329780059 #> 512   0.368987993 #> 513   1.405856881 #> 514   0.000000000 #> 515   0.011506291 #> 516   0.000000000 #> 517   0.000000000 #> 518   0.000000000 #> 519   0.000000000 #> 520   0.000000000 #> 521   0.906019902 #> 522   0.000000000 #> 523   0.000000000 #> 524   0.000000000 #> 525   0.000000000 #> 526   0.000000000 #> 527   1.843874660 #> 528   1.681603591 #> 529   1.514425112 #> 530   3.343531678 #> 531   2.170115743 #> 532   1.996103581 #> 533   0.000000000 #> 534   0.000000000 #> 535   0.000000000 #> 536   0.000000000 #> 537   0.000000000 #> 538   0.612309104 #> 539   0.000000000 #> 540   0.000000000 #> 541   0.000000000 #> 542   0.000000000 #> 543   0.000000000 #> 544   0.000000000 #> 545   0.000000000 #> 546   0.000000000 #> 547   0.471874616 #> 548   0.000000000 #> 549   0.000000000 #> 550   1.420048694 #> 551   0.834043387 #> 552   0.237201300 #> 553   0.470916963 #> 554   0.000000000 #> 555   0.000000000 #> 556   0.000000000 #> 557   0.000000000 #> 558   0.000000000 #> 559   0.164782601 #> 560   0.000000000 #> 561   0.000000000 #> 562   0.000000000 #> 563   0.110571770 #> 564   0.206558900 #> 565   0.287594481 #> 566   0.000000000 #> 567   0.049802437 #> 568   0.000000000 #> 569   0.000000000 #> 570   0.000000000 #> 571   0.000000000 #> 572   0.000000000 #> 573   1.262884943 #> 574   0.522972203 #> 575   0.781087327 #> 576   0.038055859 #> 577   0.000000000 #> 578   0.257106123 #> 579   0.000000000 #> 580   0.000000000 #> 581   0.000000000 #> 582   0.000000000 #> 583   0.271874218 #> 584   0.000000000 #> 585   0.283523584 #> 586   0.000000000 #> 587   0.000000000 #> 588   0.000000000 #> 589   0.000000000 #> 590   1.519057341 #> 591   3.998350899 #> 592   3.364544703 #> 593   1.622821345 #> 594   2.778409280 #> 595   1.836536964 #> 596   0.000000000 #> 597   0.000000000 #> 598   0.000000000 #> 599   0.000000000 #> 600   0.000000000 #> 601   0.000000000 #> 602   2.521385419 #> 603   0.986908915 #> 604   4.401798944 #> 605   3.771238099 #> 606   5.100408971 #> 607   3.394540017 #> 608   3.677893105 parallel_cusum_gaussian2(NM_data, count,                          population * mean(count) / mean(population),                          sigma = 2) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1     0.000000000 #> 2     0.000000000 #> 3     0.000000000 #> 4     0.000000000 #> 5     0.000000000 #> 6     0.000000000 #> 7     0.000000000 #> 8     0.949789767 #> 9     1.200714759 #> 10    1.260319545 #> 11    3.636148696 #> 12    1.335746783 #> 13    4.366658373 #> 14    6.736428039 #> 15    3.952623282 #> 16    5.522765739 #> 17   10.954399981 #> 18   13.755070578 #> 19   15.012789868 #> 20    0.000000000 #> 21    0.000000000 #> 22    0.000000000 #> 23    0.000000000 #> 24    0.000000000 #> 25    0.000000000 #> 26    0.000000000 #> 27    0.000000000 #> 28    0.000000000 #> 29    0.000000000 #> 30    0.000000000 #> 31    0.000000000 #> 32    0.000000000 #> 33    0.000000000 #> 34    0.000000000 #> 35    0.000000000 #> 36    0.000000000 #> 37    0.000000000 #> 38    0.000000000 #> 39    0.000000000 #> 40    0.000000000 #> 41    0.000000000 #> 42    0.000000000 #> 43    0.000000000 #> 44    0.000000000 #> 45    0.830545786 #> 46    0.139742045 #> 47    0.000000000 #> 48    0.000000000 #> 49    0.251866699 #> 50    0.486855576 #> 51    0.706090290 #> 52    0.000000000 #> 53    0.000000000 #> 54    1.178645386 #> 55    4.345985383 #> 56    3.003120719 #> 57    4.157045599 #> 58    0.000000000 #> 59    0.000000000 #> 60    0.000000000 #> 61    0.000000000 #> 62    0.000000000 #> 63    0.000000000 #> 64    0.000000000 #> 65    0.000000000 #> 66    0.000000000 #> 67    0.000000000 #> 68    0.000000000 #> 69    0.000000000 #> 70    0.179160855 #> 71    0.000000000 #> 72    0.000000000 #> 73    0.000000000 #> 74    0.000000000 #> 75    0.000000000 #> 76    0.000000000 #> 77    0.000000000 #> 78    0.000000000 #> 79    0.028516220 #> 80    0.061618806 #> 81    0.598229960 #> 82    0.637203092 #> 83    0.000000000 #> 84    0.000000000 #> 85    0.000000000 #> 86    1.537390836 #> 87    0.571617081 #> 88    0.000000000 #> 89    0.000000000 #> 90    0.000000000 #> 91    0.010423012 #> 92    0.000000000 #> 93    0.000000000 #> 94    0.000000000 #> 95    0.000000000 #> 96    0.000000000 #> 97    0.000000000 #> 98    0.000000000 #> 99    0.000000000 #> 100   0.000000000 #> 101   0.000000000 #> 102   0.000000000 #> 103   0.000000000 #> 104   0.000000000 #> 105   0.000000000 #> 106   0.000000000 #> 107   0.000000000 #> 108   0.000000000 #> 109   0.000000000 #> 110   0.000000000 #> 111   0.000000000 #> 112   0.000000000 #> 113   0.000000000 #> 114   0.000000000 #> 115   0.000000000 #> 116   0.000000000 #> 117   0.000000000 #> 118   0.000000000 #> 119   0.000000000 #> 120   0.000000000 #> 121   0.000000000 #> 122   0.000000000 #> 123   0.000000000 #> 124   0.000000000 #> 125   0.000000000 #> 126   0.000000000 #> 127   1.848783066 #> 128   3.097537516 #> 129   1.242731851 #> 130   2.280834569 #> 131   0.000000000 #> 132   0.000000000 #> 133   0.000000000 #> 134   0.000000000 #> 135   0.000000000 #> 136   0.000000000 #> 137   0.000000000 #> 138   0.000000000 #> 139   0.000000000 #> 140   0.000000000 #> 141   0.000000000 #> 142   0.000000000 #> 143   0.802156189 #> 144   0.000000000 #> 145   0.000000000 #> 146   0.000000000 #> 147   0.000000000 #> 148   0.000000000 #> 149   0.000000000 #> 150   0.324262467 #> 151   0.669530484 #> 152   0.522985162 #> 153   0.000000000 #> 154   0.000000000 #> 155   0.000000000 #> 156   0.000000000 #> 157   0.000000000 #> 158   0.000000000 #> 159   0.000000000 #> 160   0.000000000 #> 161   0.000000000 #> 162   0.000000000 #> 163   0.000000000 #> 164   0.000000000 #> 165   0.000000000 #> 166   0.000000000 #> 167   0.000000000 #> 168   0.848162911 #> 169   0.199650937 #> 170   0.000000000 #> 171   0.000000000 #> 172   0.000000000 #> 173   0.000000000 #> 174   0.000000000 #> 175   0.000000000 #> 176   0.000000000 #> 177   0.000000000 #> 178   0.000000000 #> 179   0.000000000 #> 180   0.000000000 #> 181   0.000000000 #> 182   0.000000000 #> 183   0.000000000 #> 184   0.000000000 #> 185   0.000000000 #> 186   0.000000000 #> 187   0.000000000 #> 188   0.405887796 #> 189   0.000000000 #> 190   0.000000000 #> 191   0.000000000 #> 192   0.000000000 #> 193   0.000000000 #> 194   0.000000000 #> 195   0.000000000 #> 196   0.000000000 #> 197   0.000000000 #> 198   0.000000000 #> 199   0.000000000 #> 200   0.000000000 #> 201   0.000000000 #> 202   0.000000000 #> 203   0.000000000 #> 204   0.000000000 #> 205   0.000000000 #> 206   0.000000000 #> 207   0.000000000 #> 208   0.000000000 #> 209   0.000000000 #> 210   0.000000000 #> 211   0.000000000 #> 212   0.000000000 #> 213   0.000000000 #> 214   0.000000000 #> 215   0.000000000 #> 216   0.000000000 #> 217   0.000000000 #> 218   0.000000000 #> 219   0.000000000 #> 220   0.000000000 #> 221   0.000000000 #> 222   0.000000000 #> 223   0.000000000 #> 224   0.000000000 #> 225   0.000000000 #> 226   0.000000000 #> 227   0.000000000 #> 228   0.000000000 #> 229   0.000000000 #> 230   0.000000000 #> 231   0.000000000 #> 232   0.000000000 #> 233   0.000000000 #> 234   0.626934124 #> 235   0.000000000 #> 236   0.000000000 #> 237   0.000000000 #> 238   0.000000000 #> 239   0.000000000 #> 240   0.000000000 #> 241   0.000000000 #> 242   0.000000000 #> 243   0.000000000 #> 244   0.000000000 #> 245   0.000000000 #> 246   0.000000000 #> 247   0.000000000 #> 248   0.000000000 #> 249   0.000000000 #> 250   0.292145950 #> 251   0.000000000 #> 252   0.000000000 #> 253   0.000000000 #> 254   0.000000000 #> 255   0.000000000 #> 256   0.000000000 #> 257   0.000000000 #> 258   0.000000000 #> 259   0.000000000 #> 260   0.000000000 #> 261   0.000000000 #> 262   0.000000000 #> 263   0.208467725 #> 264   0.000000000 #> 265   0.000000000 #> 266   0.000000000 #> 267   0.000000000 #> 268   0.000000000 #> 269   0.000000000 #> 270   0.000000000 #> 271   0.000000000 #> 272   0.000000000 #> 273   0.000000000 #> 274   0.000000000 #> 275   0.000000000 #> 276   0.000000000 #> 277   0.000000000 #> 278   0.086332832 #> 279   0.000000000 #> 280   0.083902059 #> 281   1.167735322 #> 282   1.252302404 #> 283   1.338382986 #> 284   0.926756750 #> 285   0.016093651 #> 286   0.000000000 #> 287   0.188104266 #> 288   0.000000000 #> 289   0.000000000 #> 290   0.000000000 #> 291   0.000000000 #> 292   0.000000000 #> 293   0.000000000 #> 294   0.000000000 #> 295   0.000000000 #> 296   0.000000000 #> 297   0.000000000 #> 298   0.000000000 #> 299   0.000000000 #> 300   0.000000000 #> 301   0.000000000 #> 302   0.000000000 #> 303   0.000000000 #> 304   0.564662259 #> 305   0.000000000 #> 306   0.000000000 #> 307   0.000000000 #> 308   0.000000000 #> 309   0.000000000 #> 310   0.000000000 #> 311   0.267437408 #> 312   0.000000000 #> 313   0.218133987 #> 314   0.000000000 #> 315   0.000000000 #> 316   0.154566971 #> 317   0.000000000 #> 318   0.000000000 #> 319   0.000000000 #> 320   0.000000000 #> 321   0.000000000 #> 322   0.000000000 #> 323   1.061119790 #> 324   0.000000000 #> 325   0.000000000 #> 326   0.000000000 #> 327   0.000000000 #> 328   0.000000000 #> 329   0.000000000 #> 330   0.000000000 #> 331   0.000000000 #> 332   0.000000000 #> 333   0.000000000 #> 334   0.000000000 #> 335   0.000000000 #> 336   0.000000000 #> 337   0.000000000 #> 338   0.000000000 #> 339   0.000000000 #> 340   0.000000000 #> 341   0.000000000 #> 342   0.000000000 #> 343   0.000000000 #> 344   0.000000000 #> 345   0.000000000 #> 346   0.000000000 #> 347   0.000000000 #> 348   0.000000000 #> 349   0.000000000 #> 350   0.000000000 #> 351   0.000000000 #> 352   0.000000000 #> 353   0.000000000 #> 354   0.000000000 #> 355   0.000000000 #> 356   0.382922072 #> 357   0.000000000 #> 358   0.000000000 #> 359   0.000000000 #> 360   0.000000000 #> 361   0.000000000 #> 362   0.000000000 #> 363   0.000000000 #> 364   0.000000000 #> 365   0.000000000 #> 366   0.000000000 #> 367   0.000000000 #> 368   0.000000000 #> 369   0.000000000 #> 370   0.000000000 #> 371   0.000000000 #> 372   0.000000000 #> 373   0.000000000 #> 374   0.000000000 #> 375   0.000000000 #> 376   0.000000000 #> 377   0.000000000 #> 378   0.000000000 #> 379   0.757794078 #> 380   1.015542292 #> 381   0.000000000 #> 382   0.371186462 #> 383   0.000000000 #> 384   0.000000000 #> 385   0.000000000 #> 386   0.000000000 #> 387   0.000000000 #> 388   0.000000000 #> 389   0.000000000 #> 390   0.000000000 #> 391   1.300418854 #> 392   0.590472524 #> 393   0.369679441 #> 394   0.000000000 #> 395   0.000000000 #> 396   0.000000000 #> 397   0.000000000 #> 398   0.000000000 #> 399   0.000000000 #> 400   0.000000000 #> 401   0.000000000 #> 402   0.000000000 #> 403   0.000000000 #> 404   0.130407797 #> 405   0.000000000 #> 406   0.132517525 #> 407   0.265287300 #> 408   0.000000000 #> 409   0.131691979 #> 410   1.262053913 #> 411   0.390535437 #> 412   0.000000000 #> 413   0.000000000 #> 414   0.000000000 #> 415   0.000000000 #> 416   0.000000000 #> 417   0.000000000 #> 418   0.104242586 #> 419   0.000000000 #> 420   0.000000000 #> 421   0.000000000 #> 422   0.000000000 #> 423   0.000000000 #> 424   0.000000000 #> 425   0.000000000 #> 426   0.000000000 #> 427   0.000000000 #> 428   0.000000000 #> 429   0.000000000 #> 430   0.016247695 #> 431   0.000000000 #> 432   0.000000000 #> 433   0.000000000 #> 434   0.000000000 #> 435   0.000000000 #> 436   0.000000000 #> 437   0.000000000 #> 438   0.153489176 #> 439   0.000000000 #> 440   0.000000000 #> 441   0.000000000 #> 442   0.000000000 #> 443   0.000000000 #> 444   0.000000000 #> 445   0.000000000 #> 446   0.000000000 #> 447   0.000000000 #> 448   0.000000000 #> 449   0.000000000 #> 450   0.000000000 #> 451   0.834547887 #> 452   0.000000000 #> 453   0.000000000 #> 454   0.824389089 #> 455   0.161826386 #> 456   0.000000000 #> 457   0.000000000 #> 458   0.000000000 #> 459   0.000000000 #> 460   0.000000000 #> 461   0.000000000 #> 462   0.474379669 #> 463   0.000000000 #> 464   0.973416532 #> 465   0.444792132 #> 466   0.000000000 #> 467   0.000000000 #> 468   0.000000000 #> 469   0.000000000 #> 470   1.445554366 #> 471   1.382830344 #> 472   0.310773070 #> 473   0.000000000 #> 474   0.000000000 #> 475   0.000000000 #> 476   0.095425798 #> 477   1.174363615 #> 478   1.204364919 #> 479   0.684558303 #> 480   0.000000000 #> 481   0.000000000 #> 482   0.000000000 #> 483   0.000000000 #> 484   0.000000000 #> 485   0.000000000 #> 486   0.000000000 #> 487   0.549808916 #> 488   0.000000000 #> 489   0.433361116 #> 490   2.307168285 #> 491   4.620527167 #> 492   5.872566353 #> 493   5.562391501 #> 494   4.230798325 #> 495   0.000000000 #> 496   0.000000000 #> 497   0.000000000 #> 498   0.311294023 #> 499   0.120019681 #> 500   0.000000000 #> 501   0.000000000 #> 502   0.000000000 #> 503   0.000000000 #> 504   0.000000000 #> 505   0.000000000 #> 506   0.288935495 #> 507   0.000000000 #> 508   0.000000000 #> 509   0.000000000 #> 510   0.000000000 #> 511   0.000000000 #> 512   0.000000000 #> 513   0.268434444 #> 514   0.000000000 #> 515   0.000000000 #> 516   0.000000000 #> 517   0.000000000 #> 518   0.000000000 #> 519   0.000000000 #> 520   0.000000000 #> 521   0.203009951 #> 522   0.000000000 #> 523   0.000000000 #> 524   0.000000000 #> 525   0.000000000 #> 526   0.000000000 #> 527   0.671937330 #> 528   0.340801796 #> 529   0.007212556 #> 530   0.671765839 #> 531   0.000000000 #> 532   0.000000000 #> 533   0.000000000 #> 534   0.000000000 #> 535   0.000000000 #> 536   0.000000000 #> 537   0.000000000 #> 538   0.056154552 #> 539   0.000000000 #> 540   0.000000000 #> 541   0.000000000 #> 542   0.000000000 #> 543   0.000000000 #> 544   0.000000000 #> 545   0.000000000 #> 546   0.000000000 #> 547   0.000000000 #> 548   0.000000000 #> 549   0.000000000 #> 550   0.460024347 #> 551   0.000000000 #> 552   0.000000000 #> 553   0.000000000 #> 554   0.000000000 #> 555   0.000000000 #> 556   0.000000000 #> 557   0.000000000 #> 558   0.000000000 #> 559   0.000000000 #> 560   0.000000000 #> 561   0.000000000 #> 562   0.000000000 #> 563   0.000000000 #> 564   0.000000000 #> 565   0.000000000 #> 566   0.000000000 #> 567   0.000000000 #> 568   0.000000000 #> 569   0.000000000 #> 570   0.000000000 #> 571   0.000000000 #> 572   0.000000000 #> 573   0.381442471 #> 574   0.000000000 #> 575   0.000000000 #> 576   0.000000000 #> 577   0.000000000 #> 578   0.000000000 #> 579   0.000000000 #> 580   0.000000000 #> 581   0.000000000 #> 582   0.000000000 #> 583   0.000000000 #> 584   0.000000000 #> 585   0.000000000 #> 586   0.000000000 #> 587   0.000000000 #> 588   0.000000000 #> 589   0.000000000 #> 590   0.509528670 #> 591   1.499175450 #> 592   0.932272352 #> 593   0.000000000 #> 594   0.327793968 #> 595   0.000000000 #> 596   0.000000000 #> 597   0.000000000 #> 598   0.000000000 #> 599   0.000000000 #> 600   0.000000000 #> 601   0.000000000 #> 602   1.010692709 #> 603   0.000000000 #> 604   1.457445015 #> 605   0.892164592 #> 606   1.306750028 #> 607   0.203815551 #> 608   0.095492095"},{"path":"/reference/parallel_cusum_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"parallel_cusum_poisson calculates Poisson CUSUM statistic independently spatial region, time points. Unlike scan_cusum_poisson, information multiple spatial regions never aggregated.","code":""},{"path":"/reference/parallel_cusum_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"","code":"parallel_cusum_poisson(wide_cases, wide_baseline, scaling = 1.5)"},{"path":"/reference/parallel_cusum_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. scaling expected proportional increase number cases  wide_baseline event outbreak. wide_baseline number expected cases normal conditions, scaling * wide_baseline number expected cases event outbreak. scaling can scalar, vector separate value spatial region, matrix dimensions wide_cases","code":""},{"path":"/reference/parallel_cusum_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"matrix dimensions wide_cases, rows indicate time (oldest newest) columns indicate locations. Element (, j)  indicates value CUSUM statistic time region j. value CUSUM statistic row incorporates information time points 1 thought .","code":""},{"path":"/reference/parallel_cusum_poisson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"CUSUM statistic widely used surveillance technique purely temporal processes. calculated taking cumulative sum standard residuals downward drift floor 0. Poisson process \\(x(t)\\) expected value \\(\\lambda\\) expected value ourbreak \\(\\delta\\lambda\\) optimal downward drift \\(k =   \\lambda(\\delta - 1) / (log(\\delta)\\).","code":""},{"path":[]},{"path":"/reference/parallel_cusum_poisson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson","text":"","code":"outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,                                   scaling = 1.5)  v_scaling <- c(rep(1.5, 8), 3) # Special scaling for region 9 scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,                                   scaling = v_scaling)   m_scaling <- matrix(1.5, nrow = 4, ncol = 9) m_scaling[4, 1] <- 3 scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,                                   scaling = m_scaling)"},{"path":"/reference/parallel_cusum_poisson2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"parallel_cusum_poisson calculates Poisson CUSUM statistic independently spatial region, time points. spatial region considered independently.","code":""},{"path":"/reference/parallel_cusum_poisson2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"","code":"parallel_cusum_poisson2(   spacetime_data,   outcome_col,   baseline_col,   scaling = 1.5 )"},{"path":"/reference/parallel_cusum_poisson2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts baseline_col column data containing baseline estimates outcome interest. scaling expected proportional increase number cases baseline event outbreak. baseline number expected cases normal conditions, scaling * baseline number expected cases event outbreak. scaling can either scalar value column spacetime_data.","code":""},{"path":"/reference/parallel_cusum_poisson2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"spacetime_data added column .action_level containing value CUSUM statistic point time.","code":""},{"path":"/reference/parallel_cusum_poisson2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"CUSUM statistic widely used surveillance technique purely temporal processes. calculated taking cumulative sum standard residuals downward drift floor 0. Poisson process \\(x(t)\\) expected value \\(\\lambda\\) expected value ourbreak \\(\\delta\\lambda\\) optimal downward drift \\(k =   \\lambda(\\delta - 1) / (log(\\delta)\\).","code":""},{"path":[]},{"path":"/reference/parallel_cusum_poisson2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Poisson CUSUM statistic over multiple spatial regions — parallel_cusum_poisson2","text":"","code":"data(NM_data)  parallel_cusum_poisson2(NM_data, count, baseline_est) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1    0.000000e+00 #> 2    0.000000e+00 #> 3    0.000000e+00 #> 4    0.000000e+00 #> 5    0.000000e+00 #> 6    0.000000e+00 #> 7    0.000000e+00 #> 8    0.000000e+00 #> 9    0.000000e+00 #> 10   0.000000e+00 #> 11   1.030722e+00 #> 12   0.000000e+00 #> 13   2.180051e+00 #> 14   2.962677e+00 #> 15   0.000000e+00 #> 16   0.000000e+00 #> 17   6.702051e+00 #> 18   8.081106e+00 #> 19   6.354230e+00 #> 20   0.000000e+00 #> 21   0.000000e+00 #> 22   0.000000e+00 #> 23   0.000000e+00 #> 24   0.000000e+00 #> 25   0.000000e+00 #> 26   0.000000e+00 #> 27   0.000000e+00 #> 28   0.000000e+00 #> 29   0.000000e+00 #> 30   0.000000e+00 #> 31   0.000000e+00 #> 32   8.493891e-01 #> 33   1.699627e+00 #> 34   1.551108e+00 #> 35   1.404174e+00 #> 36   1.259162e+00 #> 37   1.116469e+00 #> 38   9.746811e-01 #> 39   0.000000e+00 #> 40   4.201034e-01 #> 41   7.738656e-01 #> 42   0.000000e+00 #> 43   0.000000e+00 #> 44   0.000000e+00 #> 45   2.115771e+00 #> 46   1.178888e+00 #> 47   1.192121e+00 #> 48   1.158243e+00 #> 49   2.079967e+00 #> 50   2.960066e+00 #> 51   3.801310e+00 #> 52   2.606414e+00 #> 53   2.378150e+00 #> 54   5.119289e+00 #> 55   1.183254e+01 #> 56   9.520633e+00 #> 57   1.220080e+01 #> 58   0.000000e+00 #> 59   2.817282e-01 #> 60   5.446795e-01 #> 61   7.912293e-01 #> 62   2.386617e-02 #> 63   0.000000e+00 #> 64   2.120502e-01 #> 65   0.000000e+00 #> 66   0.000000e+00 #> 67   1.994380e-01 #> 68   0.000000e+00 #> 69   0.000000e+00 #> 70   1.208713e+00 #> 71   1.425345e+00 #> 72   1.652326e+00 #> 73   1.892145e+00 #> 74   1.147179e+00 #> 75   4.199143e-01 #> 76   6.992105e-01 #> 77   0.000000e+00 #> 78   0.000000e+00 #> 79   6.040262e-01 #> 80   1.219364e+00 #> 81   2.843355e+00 #> 82   3.473171e+00 #> 83   2.106154e+00 #> 84   0.000000e+00 #> 85   0.000000e+00 #> 86   3.625914e+00 #> 87   2.244023e+00 #> 88   0.000000e+00 #> 89   0.000000e+00 #> 90   0.000000e+00 #> 91   5.594028e-01 #> 92   0.000000e+00 #> 93   5.136484e-01 #> 94   0.000000e+00 #> 95   4.768299e-01 #> 96   8.580989e-01 #> 97   7.163675e-01 #> 98   5.750885e-01 #> 99   4.343185e-01 #> 100  2.941141e-01 #> 101  1.544753e-01 #> 102  1.540204e-02 #> 103  8.769509e-01 #> 104  7.391219e-01 #> 105  6.019716e-01 #> 106  4.654999e-01 #> 107  3.297635e-01 #> 108  1.947623e-01 #> 109  6.049642e-02 #> 110  0.000000e+00 #> 111  0.000000e+00 #> 112  0.000000e+00 #> 113  0.000000e+00 #> 114  0.000000e+00 #> 115  0.000000e+00 #> 116  0.000000e+00 #> 117  0.000000e+00 #> 118  0.000000e+00 #> 119  0.000000e+00 #> 120  0.000000e+00 #> 121  0.000000e+00 #> 122  0.000000e+00 #> 123  0.000000e+00 #> 124  0.000000e+00 #> 125  0.000000e+00 #> 126  0.000000e+00 #> 127  3.461294e+00 #> 128  5.675888e+00 #> 129  1.635071e+00 #> 130  3.330133e+00 #> 131  0.000000e+00 #> 132  0.000000e+00 #> 133  0.000000e+00 #> 134  0.000000e+00 #> 135  0.000000e+00 #> 136  0.000000e+00 #> 137  0.000000e+00 #> 138  3.367951e-01 #> 139  0.000000e+00 #> 140  0.000000e+00 #> 141  0.000000e+00 #> 142  0.000000e+00 #> 143  2.045754e+00 #> 144  0.000000e+00 #> 145  0.000000e+00 #> 146  3.109806e-03 #> 147  0.000000e+00 #> 148  0.000000e+00 #> 149  0.000000e+00 #> 150  1.100274e+00 #> 151  2.252355e+00 #> 152  2.424626e+00 #> 153  0.000000e+00 #> 154  0.000000e+00 #> 155  0.000000e+00 #> 156  0.000000e+00 #> 157  0.000000e+00 #> 158  0.000000e+00 #> 159  0.000000e+00 #> 160  4.554328e-01 #> 161  0.000000e+00 #> 162  0.000000e+00 #> 163  0.000000e+00 #> 164  0.000000e+00 #> 165  3.892047e-01 #> 166  0.000000e+00 #> 167  0.000000e+00 #> 168  2.392372e+00 #> 169  1.792945e+00 #> 170  2.052811e-01 #> 171  0.000000e+00 #> 172  0.000000e+00 #> 173  0.000000e+00 #> 174  0.000000e+00 #> 175  0.000000e+00 #> 176  0.000000e+00 #> 177  0.000000e+00 #> 178  0.000000e+00 #> 179  0.000000e+00 #> 180  0.000000e+00 #> 181  0.000000e+00 #> 182  0.000000e+00 #> 183  0.000000e+00 #> 184  0.000000e+00 #> 185  7.654588e-01 #> 186  1.532049e+00 #> 187  1.299487e+00 #> 188  3.067378e+00 #> 189  2.835438e+00 #> 190  2.603442e+00 #> 191  0.000000e+00 #> 192  0.000000e+00 #> 193  0.000000e+00 #> 194  0.000000e+00 #> 195  0.000000e+00 #> 196  0.000000e+00 #> 197  0.000000e+00 #> 198  0.000000e+00 #> 199  0.000000e+00 #> 200  0.000000e+00 #> 201  0.000000e+00 #> 202  0.000000e+00 #> 203  0.000000e+00 #> 204  0.000000e+00 #> 205  0.000000e+00 #> 206  0.000000e+00 #> 207  0.000000e+00 #> 208  0.000000e+00 #> 209  0.000000e+00 #> 210  7.111077e-01 #> 211  4.175777e-01 #> 212  1.111322e+00 #> 213  7.936992e-01 #> 214  1.465952e+00 #> 215  2.129496e+00 #> 216  1.785574e+00 #> 217  1.435543e+00 #> 218  1.080706e+00 #> 219  7.224182e-01 #> 220  3.619815e-01 #> 221  6.964412e-04 #> 222  0.000000e+00 #> 223  0.000000e+00 #> 224  0.000000e+00 #> 225  0.000000e+00 #> 226  0.000000e+00 #> 227  6.615073e-01 #> 228  3.257294e-01 #> 229  0.000000e+00 #> 230  0.000000e+00 #> 231  0.000000e+00 #> 232  0.000000e+00 #> 233  0.000000e+00 #> 234  1.613603e+00 #> 235  0.000000e+00 #> 236  0.000000e+00 #> 237  0.000000e+00 #> 238  0.000000e+00 #> 239  0.000000e+00 #> 240  0.000000e+00 #> 241  0.000000e+00 #> 242  0.000000e+00 #> 243  0.000000e+00 #> 244  0.000000e+00 #> 245  0.000000e+00 #> 246  0.000000e+00 #> 247  0.000000e+00 #> 248  0.000000e+00 #> 249  0.000000e+00 #> 250  1.487369e+00 #> 251  9.485519e-01 #> 252  3.852458e-01 #> 253  0.000000e+00 #> 254  0.000000e+00 #> 255  0.000000e+00 #> 256  0.000000e+00 #> 257  0.000000e+00 #> 258  0.000000e+00 #> 259  0.000000e+00 #> 260  3.028239e-01 #> 261  0.000000e+00 #> 262  2.865921e-01 #> 263  1.567585e+00 #> 264  8.447321e-01 #> 265  1.197866e-01 #> 266  3.945017e-01 #> 267  0.000000e+00 #> 268  1.254616e-01 #> 269  0.000000e+00 #> 270  0.000000e+00 #> 271  0.000000e+00 #> 272  4.407635e-02 #> 273  0.000000e+00 #> 274  1.494958e-02 #> 275  1.819190e-02 #> 276  1.170645e-02 #> 277  0.000000e+00 #> 278  9.797712e-01 #> 279  0.000000e+00 #> 280  9.737762e-01 #> 281  3.947383e+00 #> 282  4.922799e+00 #> 283  5.901948e+00 #> 284  5.886753e+00 #> 285  4.873933e+00 #> 286  0.000000e+00 #> 287  1.230770e+00 #> 288  4.434993e-01 #> 289  6.381865e-01 #> 290  0.000000e+00 #> 291  1.582646e-01 #> 292  0.000000e+00 #> 293  0.000000e+00 #> 294  0.000000e+00 #> 295  8.445794e-02 #> 296  0.000000e+00 #> 297  0.000000e+00 #> 298  2.824044e-02 #> 299  3.759090e-02 #> 300  2.793826e-02 #> 301  0.000000e+00 #> 302  0.000000e+00 #> 303  0.000000e+00 #> 304  1.926325e+00 #> 305  0.000000e+00 #> 306  0.000000e+00 #> 307  0.000000e+00 #> 308  0.000000e+00 #> 309  0.000000e+00 #> 310  0.000000e+00 #> 311  9.601266e-01 #> 312  0.000000e+00 #> 313  8.385294e-01 #> 314  0.000000e+00 #> 315  0.000000e+00 #> 316  6.817539e-01 #> 317  0.000000e+00 #> 318  0.000000e+00 #> 319  0.000000e+00 #> 320  0.000000e+00 #> 321  0.000000e+00 #> 322  0.000000e+00 #> 323  2.451285e+00 #> 324  0.000000e+00 #> 325  0.000000e+00 #> 326  0.000000e+00 #> 327  0.000000e+00 #> 328  0.000000e+00 #> 329  7.499622e-01 #> 330  5.028089e-01 #> 331  2.582005e-01 #> 332  1.579794e-02 #> 333  0.000000e+00 #> 334  7.609908e-01 #> 335  5.232259e-01 #> 336  2.863093e-01 #> 337  4.990171e-02 #> 338  0.000000e+00 #> 339  0.000000e+00 #> 340  0.000000e+00 #> 341  0.000000e+00 #> 342  0.000000e+00 #> 343  0.000000e+00 #> 344  0.000000e+00 #> 345  0.000000e+00 #> 346  0.000000e+00 #> 347  0.000000e+00 #> 348  0.000000e+00 #> 349  0.000000e+00 #> 350  0.000000e+00 #> 351  0.000000e+00 #> 352  0.000000e+00 #> 353  0.000000e+00 #> 354  0.000000e+00 #> 355  0.000000e+00 #> 356  1.244947e+00 #> 357  0.000000e+00 #> 358  0.000000e+00 #> 359  0.000000e+00 #> 360  6.170269e-02 #> 361  0.000000e+00 #> 362  0.000000e+00 #> 363  3.800805e-01 #> 364  0.000000e+00 #> 365  3.858493e-01 #> 366  7.742437e-01 #> 367  1.165013e+00 #> 368  5.579324e-01 #> 369  9.527742e-01 #> 370  3.493128e-01 #> 371  0.000000e+00 #> 372  3.993664e-01 #> 373  0.000000e+00 #> 374  0.000000e+00 #> 375  0.000000e+00 #> 376  4.024770e-01 #> 377  8.052368e-01 #> 378  2.080532e-01 #> 379  2.610700e+00 #> 380  4.013233e+00 #> 381  4.537927e-01 #> 382  1.902948e+00 #> 383  1.337624e+00 #> 384  7.565777e-01 #> 385  1.586209e-01 #> 386  0.000000e+00 #> 387  0.000000e+00 #> 388  3.439027e-01 #> 389  0.000000e+00 #> 390  2.989400e-01 #> 391  3.573561e+00 #> 392  2.822618e+00 #> 393  3.044923e+00 #> 394  1.239233e+00 #> 395  4.042464e-01 #> 396  5.388323e-01 #> 397  0.000000e+00 #> 398  6.994141e-02 #> 399  1.283452e-01 #> 400  0.000000e+00 #> 401  7.088429e-02 #> 402  0.000000e+00 #> 403  8.394892e-02 #> 404  1.172422e+00 #> 405  2.641762e-01 #> 406  1.357853e+00 #> 407  2.452152e+00 #> 408  1.545772e+00 #> 409  2.637412e+00 #> 410  5.725773e+00 #> 411  4.809496e+00 #> 412  3.887280e+00 #> 413  2.957825e+00 #> 414  2.019830e+00 #> 415  1.071994e+00 #> 416  1.129593e-01 #> 417  0.000000e+00 #> 418  1.023942e+00 #> 419  6.506670e-01 #> 420  0.000000e+00 #> 421  5.845521e-01 #> 422  0.000000e+00 #> 423  4.452526e-01 #> 424  0.000000e+00 #> 425  0.000000e+00 #> 426  0.000000e+00 #> 427  0.000000e+00 #> 428  0.000000e+00 #> 429  0.000000e+00 #> 430  5.737683e-01 #> 431  9.742464e-01 #> 432  1.189275e+00 #> 433  1.206693e+00 #> 434  0.000000e+00 #> 435  0.000000e+00 #> 436  0.000000e+00 #> 437  0.000000e+00 #> 438  6.790957e-01 #> 439  2.609136e-01 #> 440  0.000000e+00 #> 441  0.000000e+00 #> 442  0.000000e+00 #> 443  0.000000e+00 #> 444  0.000000e+00 #> 445  0.000000e+00 #> 446  0.000000e+00 #> 447  0.000000e+00 #> 448  0.000000e+00 #> 449  0.000000e+00 #> 450  0.000000e+00 #> 451  1.659338e+00 #> 452  0.000000e+00 #> 453  0.000000e+00 #> 454  1.634283e+00 #> 455  3.007474e-01 #> 456  0.000000e+00 #> 457  0.000000e+00 #> 458  0.000000e+00 #> 459  0.000000e+00 #> 460  0.000000e+00 #> 461  0.000000e+00 #> 462  1.703661e+00 #> 463  4.074346e-01 #> 464  3.108720e+00 #> 465  2.804972e+00 #> 466  1.493588e+00 #> 467  2.172025e+00 #> 468  1.837736e+00 #> 469  2.488177e+00 #> 470  6.120746e+00 #> 471  6.732897e+00 #> 472  5.322031e+00 #> 473  3.885657e+00 #> 474  3.421174e+00 #> 475  3.946511e+00 #> 476  5.358938e-01 #> 477  3.031123e+00 #> 478  3.405660e+00 #> 479  2.657356e+00 #> 480  0.000000e+00 #> 481  0.000000e+00 #> 482  0.000000e+00 #> 483  0.000000e+00 #> 484  0.000000e+00 #> 485  0.000000e+00 #> 486  0.000000e+00 #> 487  1.190237e+00 #> 488  0.000000e+00 #> 489  9.030414e-01 #> 490  4.659205e+00 #> 491  9.266284e+00 #> 492  1.172213e+01 #> 493  1.102454e+01 #> 494  8.274122e+00 #> 495  0.000000e+00 #> 496  0.000000e+00 #> 497  5.408150e-01 #> 498  2.075409e+00 #> 499  2.603668e+00 #> 500  3.125367e+00 #> 501  3.640449e+00 #> 502  3.148687e+00 #> 503  3.649969e+00 #> 504  4.144125e+00 #> 505  4.630984e+00 #> 506  6.110435e+00 #> 507  5.582308e+00 #> 508  6.046488e+00 #> 509  6.502807e+00 #> 510  5.951095e+00 #> 511  6.391183e+00 #> 512  6.822956e+00 #> 513  8.251845e+00 #> 514  0.000000e+00 #> 515  3.976131e-01 #> 516  0.000000e+00 #> 517  0.000000e+00 #> 518  0.000000e+00 #> 519  3.049165e-01 #> 520  0.000000e+00 #> 521  1.267532e+00 #> 522  5.185502e-01 #> 523  7.545805e-01 #> 524  0.000000e+00 #> 525  2.105231e-01 #> 526  0.000000e+00 #> 527  2.190898e+00 #> 528  2.374217e+00 #> 529  2.551485e+00 #> 530  4.724171e+00 #> 531  3.893747e+00 #> 532  4.062588e+00 #> 533  0.000000e+00 #> 534  0.000000e+00 #> 535  0.000000e+00 #> 536  0.000000e+00 #> 537  0.000000e+00 #> 538  9.053424e-01 #> 539  0.000000e+00 #> 540  0.000000e+00 #> 541  0.000000e+00 #> 542  0.000000e+00 #> 543  0.000000e+00 #> 544  0.000000e+00 #> 545  0.000000e+00 #> 546  0.000000e+00 #> 547  7.321654e-01 #> 548  0.000000e+00 #> 549  0.000000e+00 #> 550  1.668256e+00 #> 551  1.329047e+00 #> 552  6.759293e-01 #> 553  1.347560e+00 #> 554  1.006296e+00 #> 555  6.516285e-01 #> 556  2.830476e-01 #> 557  0.000000e+00 #> 558  0.000000e+00 #> 559  5.866261e-01 #> 560  1.573031e-01 #> 561  0.000000e+00 #> 562  0.000000e+00 #> 563  5.197759e-01 #> 564  1.021567e+00 #> 565  1.504920e+00 #> 566  9.692702e-01 #> 567  1.414108e+00 #> 568  8.389253e-01 #> 569  2.432687e-01 #> 570  0.000000e+00 #> 571  0.000000e+00 #> 572  0.000000e+00 #> 573  1.707601e+00 #> 574  1.411752e+00 #> 575  2.113472e+00 #> 576  1.813777e+00 #> 577  1.513630e+00 #> 578  2.214105e+00 #> 579  1.916220e+00 #> 580  1.620937e+00 #> 581  1.329273e+00 #> 582  1.042304e+00 #> 583  1.760990e+00 #> 584  1.486350e+00 #> 585  2.219402e+00 #> 586  1.961163e+00 #> 587  1.712596e+00 #> 588  1.474774e+00 #> 589  1.240855e+00 #> 590  1.557197e+00 #> 591  4.065359e+00 #> 592  3.434053e+00 #> 593  1.669668e+00 #> 594  2.778652e+00 #> 595  1.767453e+00 #> 596  0.000000e+00 #> 597  0.000000e+00 #> 598  0.000000e+00 #> 599  0.000000e+00 #> 600  0.000000e+00 #> 601  0.000000e+00 #> 602  2.326916e+00 #> 603  5.849463e-01 #> 604  3.780538e+00 #> 605  2.920081e+00 #> 606  4.009968e+00 #> 607  2.056645e+00 #> 608  2.090031e+00 parallel_cusum_poisson2(NM_data, count,                         population * mean(count) / mean(population), scaling = 2) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1     0.000000000 #> 2     0.000000000 #> 3     0.000000000 #> 4     0.000000000 #> 5     0.000000000 #> 6     0.000000000 #> 7     0.000000000 #> 8     0.000000000 #> 9     0.000000000 #> 10    0.000000000 #> 11    0.000000000 #> 12    0.000000000 #> 13    0.000000000 #> 14    0.000000000 #> 15    0.000000000 #> 16    0.000000000 #> 17    2.063447220 #> 18    0.000000000 #> 19    0.000000000 #> 20    0.000000000 #> 21    0.000000000 #> 22    0.000000000 #> 23    0.000000000 #> 24    0.000000000 #> 25    0.000000000 #> 26    0.000000000 #> 27    0.000000000 #> 28    0.000000000 #> 29    0.000000000 #> 30    0.000000000 #> 31    0.000000000 #> 32    0.823796595 #> 33    1.648585700 #> 34    1.474830484 #> 35    1.302927951 #> 36    1.133275105 #> 37    0.966335116 #> 38    0.800453804 #> 39    0.000000000 #> 40    0.000000000 #> 41    0.000000000 #> 42    0.000000000 #> 43    0.000000000 #> 44    0.000000000 #> 45    1.625668411 #> 46    0.189735106 #> 47    0.000000000 #> 48    0.000000000 #> 49    0.398648553 #> 50    0.748598006 #> 51    1.053090553 #> 52    0.000000000 #> 53    0.000000000 #> 54    2.187376503 #> 55    8.342132548 #> 56    5.467444164 #> 57    7.583492364 #> 58    0.000000000 #> 59    0.159675840 #> 60    0.297384151 #> 61    0.415903957 #> 62    0.000000000 #> 63    0.000000000 #> 64    0.078157780 #> 65    0.000000000 #> 66    0.000000000 #> 67    0.063402482 #> 68    0.000000000 #> 69    0.000000000 #> 70    1.074253912 #> 71    1.157771239 #> 72    1.253397175 #> 73    1.364043078 #> 74    0.492487973 #> 75    0.000000000 #> 76    0.156830648 #> 77    0.000000000 #> 78    0.000000000 #> 79    0.196890338 #> 80    0.407014127 #> 81    1.627261507 #> 82    1.854324114 #> 83    0.085092087 #> 84    0.000000000 #> 85    0.000000000 #> 86    3.222497066 #> 87    1.435863051 #> 88    0.000000000 #> 89    0.000000000 #> 90    0.000000000 #> 91    0.144684372 #> 92    0.000000000 #> 93    0.091155062 #> 94    0.000000000 #> 95    0.048080178 #> 96    0.833986353 #> 97    0.668171208 #> 98    0.502885401 #> 99    0.338195099 #> 100   0.174166469 #> 101   0.010799513 #> 102   0.000000000 #> 103   0.838022556 #> 104   0.676772951 #> 105   0.516317354 #> 106   0.356655763 #> 107   0.197854347 #> 108   0.039913106 #> 109   0.000000000 #> 110   0.000000000 #> 111   0.000000000 #> 112   0.000000000 #> 113   0.000000000 #> 114   0.000000000 #> 115   0.000000000 #> 116   0.000000000 #> 117   0.000000000 #> 118   0.000000000 #> 119   0.000000000 #> 120   0.000000000 #> 121   0.000000000 #> 122   0.000000000 #> 123   0.000000000 #> 124   0.000000000 #> 125   0.000000000 #> 126   0.000000000 #> 127   2.350204953 #> 128   3.411788333 #> 129   0.000000000 #> 130   0.453770960 #> 131   0.000000000 #> 132   0.000000000 #> 133   0.000000000 #> 134   0.000000000 #> 135   0.000000000 #> 136   0.000000000 #> 137   0.000000000 #> 138   0.000000000 #> 139   0.000000000 #> 140   0.000000000 #> 141   0.000000000 #> 142   0.000000000 #> 143   1.543753347 #> 144   0.000000000 #> 145   0.000000000 #> 146   0.000000000 #> 147   0.000000000 #> 148   0.000000000 #> 149   0.000000000 #> 150   0.607538583 #> 151   1.275686372 #> 152   0.967455873 #> 153   0.000000000 #> 154   0.000000000 #> 155   0.000000000 #> 156   0.000000000 #> 157   0.000000000 #> 158   0.000000000 #> 159   0.000000000 #> 160   0.192972220 #> 161   0.000000000 #> 162   0.000000000 #> 163   0.000000000 #> 164   0.000000000 #> 165   0.115490362 #> 166   0.000000000 #> 167   0.000000000 #> 168   2.119195729 #> 169   1.247985710 #> 170   0.000000000 #> 171   0.000000000 #> 172   0.000000000 #> 173   0.000000000 #> 174   0.000000000 #> 175   0.000000000 #> 176   0.000000000 #> 177   0.000000000 #> 178   0.000000000 #> 179   0.000000000 #> 180   0.000000000 #> 181   0.000000000 #> 182   0.000000000 #> 183   0.000000000 #> 184   0.000000000 #> 185   0.725604387 #> 186   1.452532118 #> 187   1.180452359 #> 188   2.908901937 #> 189   2.637550018 #> 190   2.366131931 #> 191   0.000000000 #> 192   0.000000000 #> 193   0.000000000 #> 194   0.000000000 #> 195   0.000000000 #> 196   0.000000000 #> 197   0.000000000 #> 198   0.000000000 #> 199   0.000000000 #> 200   0.000000000 #> 201   0.000000000 #> 202   0.000000000 #> 203   0.000000000 #> 204   0.000000000 #> 205   0.000000000 #> 206   0.000000000 #> 207   0.000000000 #> 208   0.000000000 #> 209   0.000000000 #> 210   0.662017653 #> 211   0.318609591 #> 212   0.960313896 #> 213   0.588718582 #> 214   1.205279330 #> 215   1.811650320 #> 216   1.409287232 #> 217   0.999778080 #> 218   0.584644712 #> 219   0.165475141 #> 220   0.000000000 #> 221   0.000000000 #> 222   0.000000000 #> 223   0.000000000 #> 224   0.000000000 #> 225   0.000000000 #> 226   0.000000000 #> 227   0.603988969 #> 228   0.211153966 #> 229   0.000000000 #> 230   0.000000000 #> 231   0.000000000 #> 232   0.000000000 #> 233   0.000000000 #> 234   1.038169339 #> 235   0.000000000 #> 236   0.000000000 #> 237   0.000000000 #> 238   0.000000000 #> 239   0.000000000 #> 240   0.000000000 #> 241   0.000000000 #> 242   0.000000000 #> 243   0.000000000 #> 244   0.000000000 #> 245   0.000000000 #> 246   0.000000000 #> 247   0.000000000 #> 248   0.000000000 #> 249   0.000000000 #> 250   1.400259985 #> 251   0.769884531 #> 252   0.110858654 #> 253   0.000000000 #> 254   0.000000000 #> 255   0.000000000 #> 256   0.000000000 #> 257   0.000000000 #> 258   0.000000000 #> 259   0.000000000 #> 260   0.184356227 #> 261   0.000000000 #> 262   0.165366224 #> 263   1.324181890 #> 264   0.478498182 #> 265   0.000000000 #> 266   0.151471100 #> 267   0.000000000 #> 268   0.000000000 #> 269   0.000000000 #> 270   0.000000000 #> 271   0.000000000 #> 272   0.000000000 #> 273   0.000000000 #> 274   0.000000000 #> 275   0.000000000 #> 276   0.000000000 #> 277   0.000000000 #> 278   0.806408857 #> 279   0.000000000 #> 280   0.799395127 #> 281   3.598591753 #> 282   4.399905731 #> 283   5.205586748 #> 284   5.017884491 #> 285   3.832961258 #> 286   0.000000000 #> 287   1.100059142 #> 288   0.179010929 #> 289   0.236855361 #> 290   0.000000000 #> 291   0.015232719 #> 292   0.000000000 #> 293   0.000000000 #> 294   0.000000000 #> 295   0.000000000 #> 296   0.000000000 #> 297   0.000000000 #> 298   0.000000000 #> 299   0.000000000 #> 300   0.000000000 #> 301   0.000000000 #> 302   0.000000000 #> 303   0.000000000 #> 304   1.743880799 #> 305   0.000000000 #> 306   0.000000000 #> 307   0.000000000 #> 308   0.000000000 #> 309   0.000000000 #> 310   0.000000000 #> 311   0.443576121 #> 312   0.000000000 #> 313   0.301316519 #> 314   0.000000000 #> 315   0.000000000 #> 316   0.117900883 #> 317   0.000000000 #> 318   0.000000000 #> 319   0.000000000 #> 320   0.000000000 #> 321   0.000000000 #> 322   0.000000000 #> 323   1.848269312 #> 324   0.000000000 #> 325   0.000000000 #> 326   0.000000000 #> 327   0.000000000 #> 328   0.000000000 #> 329   0.707474558 #> 330   0.418323646 #> 331   0.132150261 #> 332   0.000000000 #> 333   0.000000000 #> 334   0.720377173 #> 335   0.442210026 #> 336   0.165035388 #> 337   0.000000000 #> 338   0.000000000 #> 339   0.000000000 #> 340   0.000000000 #> 341   0.000000000 #> 342   0.000000000 #> 343   0.000000000 #> 344   0.000000000 #> 345   0.000000000 #> 346   0.000000000 #> 347   0.000000000 #> 348   0.000000000 #> 349   0.000000000 #> 350   0.000000000 #> 351   0.000000000 #> 352   0.000000000 #> 353   0.000000000 #> 354   0.000000000 #> 355   0.000000000 #> 356   0.776794425 #> 357   0.000000000 #> 358   0.000000000 #> 359   0.000000000 #> 360   0.000000000 #> 361   0.000000000 #> 362   0.000000000 #> 363   0.274740699 #> 364   0.000000000 #> 365   0.281489760 #> 366   0.565957046 #> 367   0.853203357 #> 368   0.142964024 #> 369   0.434974377 #> 370   0.000000000 #> 371   0.000000000 #> 372   0.297303734 #> 373   0.000000000 #> 374   0.000000000 #> 375   0.000000000 #> 376   0.300942933 #> 377   0.602216703 #> 378   0.000000000 #> 379   2.301141435 #> 380   3.602150535 #> 381   0.191053370 #> 382   1.376681024 #> 383   0.545369861 #> 384   0.000000000 #> 385   0.000000000 #> 386   0.000000000 #> 387   0.000000000 #> 388   0.062490390 #> 389   0.000000000 #> 390   0.009887421 #> 391   2.991322921 #> 392   1.942850821 #> 393   1.863081609 #> 394   0.000000000 #> 395   0.000000000 #> 396   0.000000000 #> 397   0.000000000 #> 398   0.000000000 #> 399   0.000000000 #> 400   0.000000000 #> 401   0.000000000 #> 402   0.000000000 #> 403   0.000000000 #> 404   0.933582324 #> 405   0.000000000 #> 406   0.939669712 #> 407   1.880067263 #> 408   0.819670808 #> 409   1.756958498 #> 410   4.690408487 #> 411   3.618432762 #> 412   2.539509474 #> 413   1.452116778 #> 414   0.354732826 #> 415   0.000000000 #> 416   0.000000000 #> 417   0.000000000 #> 418   0.858085484 #> 419   0.421381590 #> 420   0.000000000 #> 421   0.344032067 #> 422   0.000000000 #> 423   0.181062114 #> 424   0.000000000 #> 425   0.000000000 #> 426   0.000000000 #> 427   0.000000000 #> 428   0.000000000 #> 429   0.000000000 #> 430   0.161490856 #> 431   0.120245237 #> 432   0.000000000 #> 433   0.000000000 #> 434   0.000000000 #> 435   0.000000000 #> 436   0.000000000 #> 437   0.000000000 #> 438   0.114791022 #> 439   0.000000000 #> 440   0.000000000 #> 441   0.000000000 #> 442   0.000000000 #> 443   0.000000000 #> 444   0.000000000 #> 445   0.000000000 #> 446   0.000000000 #> 447   0.000000000 #> 448   0.000000000 #> 449   0.000000000 #> 450   0.000000000 #> 451   0.751825951 #> 452   0.000000000 #> 453   0.000000000 #> 454   0.722513857 #> 455   0.000000000 #> 456   0.000000000 #> 457   0.000000000 #> 458   0.000000000 #> 459   0.000000000 #> 460   0.000000000 #> 461   0.000000000 #> 462   1.483380310 #> 463   0.000000000 #> 464   2.480601285 #> 465   1.955313684 #> 466   0.421093503 #> 467   0.874963216 #> 468   0.313945296 #> 469   0.735062217 #> 470   4.135270285 #> 471   4.511591974 #> 472   2.860983588 #> 473   1.180533770 #> 474   0.467198826 #> 475   0.741953775 #> 476   0.000000000 #> 477   1.899681271 #> 478   1.658161615 #> 479   0.272926679 #> 480   0.000000000 #> 481   0.000000000 #> 482   0.000000000 #> 483   0.000000000 #> 484   0.000000000 #> 485   0.000000000 #> 486   0.000000000 #> 487   0.372937990 #> 488   0.000000000 #> 489   0.036940660 #> 490   2.902044955 #> 491   6.592732362 #> 492   8.106488523 #> 493   6.440732918 #> 494   2.713177095 #> 495   0.000000000 #> 496   0.000000000 #> 497   0.462788043 #> 498   1.918297688 #> 499   2.366396600 #> 500   2.806820110 #> 501   3.239502051 #> 502   2.664177754 #> 503   3.080714885 #> 504   3.488914941 #> 505   3.888579421 #> 506   5.279575991 #> 507   4.661706148 #> 508   5.034837558 #> 509   5.398771720 #> 510   4.753310131 #> 511   5.098254289 #> 512   5.433471862 #> 513   6.765314904 #> 514   0.000000000 #> 515   0.295252549 #> 516   0.000000000 #> 517   0.000000000 #> 518   0.000000000 #> 519   0.186804415 #> 520   0.000000000 #> 521   1.143067859 #> 522   0.266814878 #> 523   0.373027575 #> 524   0.000000000 #> 525   0.076371264 #> 526   0.000000000 #> 527   2.053411226 #> 528   2.097956039 #> 529   2.135420956 #> 530   4.167526326 #> 531   3.195992496 #> 532   3.223598492 #> 533   0.000000000 #> 534   0.000000000 #> 535   0.000000000 #> 536   0.000000000 #> 537   0.000000000 #> 538   0.719332747 #> 539   0.000000000 #> 540   0.000000000 #> 541   0.000000000 #> 542   0.000000000 #> 543   0.000000000 #> 544   0.000000000 #> 545   0.000000000 #> 546   0.000000000 #> 547   0.516728607 #> 548   0.000000000 #> 549   0.000000000 #> 550   1.441959607 #> 551   0.875185136 #> 552   0.620861619 #> 553   1.236694527 #> 554   0.837441300 #> 555   0.422506433 #> 556   0.000000000 #> 557   0.000000000 #> 558   0.000000000 #> 559   0.516383521 #> 560   0.014107875 #> 561   0.000000000 #> 562   0.000000000 #> 563   0.438173824 #> 564   0.855306459 #> 565   1.250868570 #> 566   0.624198482 #> 567   0.974700690 #> 568   0.301779689 #> 569   0.000000000 #> 570   0.000000000 #> 571   0.000000000 #> 572   0.000000000 #> 573   1.657915283 #> 574   1.311794363 #> 575   1.962828251 #> 576   1.612207958 #> 577   1.261058327 #> 578   1.910636536 #> 579   1.562133595 #> 580   1.216674348 #> 581   0.875449805 #> 582   0.539717145 #> 583   1.210601210 #> 584   0.889293011 #> 585   1.576983560 #> 586   1.274863866 #> 587   0.984058773 #> 588   0.705825458 #> 589   0.432157685 #> 590   1.142103849 #> 591   3.226840687 #> 592   2.148409070 #> 593   0.000000000 #> 594   0.617728340 #> 595   0.000000000 #> 596   0.000000000 #> 597   0.000000000 #> 598   0.000000000 #> 599   0.000000000 #> 600   0.000000000 #> 601   0.000000000 #> 602   1.702767515 #> 603   0.000000000 #> 604   2.549127145 #> 605   1.032682538 #> 606   1.458143080 #> 607   0.000000000 #> 608   0.000000000"},{"path":"/reference/parallel_shewhart_gaussian.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"parallel_cusum_gaussian calculates value Shewhart alarm statistic assuming Gaussian distribution independently spatial region, time points. Shewhart alarm statistic considers spatial region time point independently, information multiple observations never aggregated.","code":""},{"path":"/reference/parallel_shewhart_gaussian.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"","code":"parallel_shewhart_gaussian(   wide_cases,   wide_baseline = NULL,   mean = 0,   sigma = 1 )"},{"path":"/reference/parallel_shewhart_gaussian.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. mean estimated mean residuals (wide_cases - wide_baseline) sigma estimated standard deviation residuals.","code":""},{"path":"/reference/parallel_shewhart_gaussian.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"matrix dimensions wide_cases, rows indicate time (oldest newst) columns indicate locations. Element (, j)  indicates value Shewhart alarm statistic time region j. value Shewhart statistic row incorporates information time point .","code":""},{"path":"/reference/parallel_shewhart_gaussian.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"Shewhart alarm statistic equal number standard deviations given observation mean, also known z-score. can directly calculated (wide_cases - wide_baseline - mean) / sd.","code":""},{"path":"/reference/parallel_shewhart_gaussian.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian","text":"","code":"outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- parallel_shewhart_gaussian(wide_cases, wide_baseline,                                       mean = 1,                                       sigma = 0.6)  v_mean <- c(rep(0.0, 8), 2) m_sigma <- matrix(1.5, nrow = 4, ncol = 9) m_sigma[c(3, 4), c(4, 5)] <- 0.25 scanres <- parallel_shewhart_gaussian(wide_cases, wide_baseline,                                       mean = v_mean,                                       sigma = m_sigma)"},{"path":"/reference/parallel_shewhart_gaussian2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"parallel_shewhart_gaussian calculates value Shewhart alarm statistic assuming Gaussian distribution independently spatial region, time points. spatial region time point considered independently.","code":""},{"path":"/reference/parallel_shewhart_gaussian2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"","code":"parallel_shewhart_gaussian2(   spacetime_data,   outcome_col,   baseline_col = NULL,   mean = 0,   sigma = 1 )"},{"path":"/reference/parallel_shewhart_gaussian2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts baseline_col Optional. column data containing baseline estimates outcome interest. present, assumed 0 . mean estimated mean residuals (spacetime_data$outcome_col - spacetime_data$baseline_col). Can either scalar value column spacetime_data sigma estimated standard deviation residuals. Can either scalar value column spacetime_data","code":""},{"path":"/reference/parallel_shewhart_gaussian2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"spacetime_data added column .action_level containing value Shewhart statistic point time.","code":""},{"path":"/reference/parallel_shewhart_gaussian2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"Shewhart alarm statistic equal number standard deviations given observation mean, also known z-score. can directly calculated (cases - baseline - mean) / sigma.","code":""},{"path":[]},{"path":"/reference/parallel_shewhart_gaussian2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Gaussian Shewhart alarm statistic over multiple spatial regions — parallel_shewhart_gaussian2","text":"","code":"data(NM_data)  parallel_shewhart_gaussian2(NM_data, count) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1              16 #> 2              16 #> 3              16 #> 4              16 #> 5              15 #> 6              18 #> 7              19 #> 8              22 #> 9              21 #> 10             21 #> 11             26 #> 12             17 #> 13             28 #> 14             27 #> 15             17 #> 16             26 #> 17             34 #> 18             29 #> 19             26 #> 20              0 #> 21              0 #> 22              0 #> 23              0 #> 24              0 #> 25              0 #> 26              0 #> 27              0 #> 28              0 #> 29              0 #> 30              0 #> 31              0 #> 32              1 #> 33              1 #> 34              0 #> 35              0 #> 36              0 #> 37              0 #> 38              0 #> 39              2 #> 40              3 #> 41              3 #> 42              1 #> 43              1 #> 44              1 #> 45              5 #> 46              2 #> 47              3 #> 48              3 #> 49              4 #> 50              4 #> 51              4 #> 52              2 #> 53              3 #> 54              6 #> 55             10 #> 56              1 #> 57              6 #> 58              0 #> 59              1 #> 60              1 #> 61              1 #> 62              0 #> 63              0 #> 64              1 #> 65              0 #> 66              0 #> 67              1 #> 68              0 #> 69              0 #> 70              2 #> 71              1 #> 72              1 #> 73              1 #> 74              0 #> 75              0 #> 76              1 #> 77              2 #> 78              2 #> 79              3 #> 80              3 #> 81              4 #> 82              3 #> 83              1 #> 84              0 #> 85              0 #> 86              6 #> 87              1 #> 88              0 #> 89              1 #> 90              2 #> 91              3 #> 92              0 #> 93              3 #> 94              0 #> 95              3 #> 96              1 #> 97              0 #> 98              0 #> 99              0 #> 100             0 #> 101             0 #> 102             0 #> 103             1 #> 104             0 #> 105             0 #> 106             0 #> 107             0 #> 108             0 #> 109             0 #> 110             0 #> 111             0 #> 112             0 #> 113             0 #> 114             0 #> 115             0 #> 116             3 #> 117             2 #> 118             1 #> 119             4 #> 120             5 #> 121             4 #> 122             4 #> 123             5 #> 124             4 #> 125             2 #> 126             5 #> 127            10 #> 128             9 #> 129             3 #> 130             9 #> 131             2 #> 132             5 #> 133             7 #> 134             2 #> 135             1 #> 136             1 #> 137             1 #> 138             3 #> 139             1 #> 140             2 #> 141             0 #> 142             2 #> 143             5 #> 144             0 #> 145             2 #> 146             3 #> 147             1 #> 148             1 #> 149             2 #> 150             4 #> 151             4 #> 152             3 #> 153             1 #> 154             0 #> 155             0 #> 156             1 #> 157             1 #> 158             0 #> 159             1 #> 160             2 #> 161             0 #> 162             1 #> 163             0 #> 164             1 #> 165             2 #> 166             0 #> 167             1 #> 168             4 #> 169             1 #> 170             0 #> 171             1 #> 172             0 #> 173             0 #> 174             0 #> 175             0 #> 176             0 #> 177             0 #> 178             0 #> 179             0 #> 180             0 #> 181             0 #> 182             0 #> 183             0 #> 184             0 #> 185             1 #> 186             1 #> 187             0 #> 188             2 #> 189             0 #> 190             0 #> 191             0 #> 192             0 #> 193             0 #> 194             0 #> 195             0 #> 196             0 #> 197             0 #> 198             0 #> 199             0 #> 200             0 #> 201             0 #> 202             0 #> 203             0 #> 204             0 #> 205             0 #> 206             0 #> 207             0 #> 208             0 #> 209             0 #> 210             1 #> 211             0 #> 212             1 #> 213             0 #> 214             1 #> 215             1 #> 216             0 #> 217             0 #> 218             0 #> 219             0 #> 220             0 #> 221             0 #> 222             0 #> 223             0 #> 224             0 #> 225             0 #> 226             0 #> 227             1 #> 228             0 #> 229             2 #> 230             2 #> 231             2 #> 232             0 #> 233             1 #> 234             5 #> 235             0 #> 236             2 #> 237             2 #> 238             0 #> 239             3 #> 240             1 #> 241             3 #> 242             1 #> 243             3 #> 244             2 #> 245             1 #> 246             1 #> 247             3 #> 248             0 #> 249             0 #> 250             2 #> 251             0 #> 252             0 #> 253             0 #> 254             0 #> 255             0 #> 256             0 #> 257             0 #> 258             0 #> 259             0 #> 260             1 #> 261             0 #> 262             1 #> 263             2 #> 264             0 #> 265             0 #> 266             1 #> 267             0 #> 268             1 #> 269             0 #> 270             0 #> 271             0 #> 272             1 #> 273             0 #> 274             1 #> 275             1 #> 276             1 #> 277             1 #> 278             2 #> 279             0 #> 280             2 #> 281             4 #> 282             2 #> 283             2 #> 284             1 #> 285             0 #> 286             0 #> 287             2 #> 288             0 #> 289             1 #> 290             0 #> 291             1 #> 292             0 #> 293             0 #> 294             0 #> 295             1 #> 296             0 #> 297             0 #> 298             1 #> 299             1 #> 300             1 #> 301             0 #> 302             0 #> 303             0 #> 304             3 #> 305             2 #> 306             1 #> 307             2 #> 308             2 #> 309             0 #> 310             1 #> 311             4 #> 312             0 #> 313             4 #> 314             1 #> 315             2 #> 316             4 #> 317             1 #> 318             1 #> 319             0 #> 320             0 #> 321             3 #> 322             1 #> 323             6 #> 324             0 #> 325             0 #> 326             0 #> 327             0 #> 328             0 #> 329             1 #> 330             0 #> 331             0 #> 332             0 #> 333             0 #> 334             1 #> 335             0 #> 336             0 #> 337             0 #> 338             0 #> 339             0 #> 340             0 #> 341             0 #> 342             0 #> 343             2 #> 344             1 #> 345             2 #> 346             0 #> 347             1 #> 348             1 #> 349             2 #> 350             1 #> 351             0 #> 352             1 #> 353             2 #> 354             0 #> 355             1 #> 356             4 #> 357             1 #> 358             1 #> 359             0 #> 360             3 #> 361             2 #> 362             0 #> 363             1 #> 364             0 #> 365             1 #> 366             1 #> 367             1 #> 368             0 #> 369             1 #> 370             0 #> 371             0 #> 372             1 #> 373             0 #> 374             0 #> 375             0 #> 376             1 #> 377             1 #> 378             0 #> 379             3 #> 380             2 #> 381             2 #> 382             3 #> 383             1 #> 384             1 #> 385             1 #> 386             1 #> 387             0 #> 388             2 #> 389             1 #> 390             2 #> 391             5 #> 392             1 #> 393             2 #> 394             0 #> 395             1 #> 396             2 #> 397             1 #> 398             2 #> 399             2 #> 400             0 #> 401             1 #> 402             0 #> 403             1 #> 404             2 #> 405             0 #> 406             2 #> 407             2 #> 408             0 #> 409             2 #> 410             4 #> 411             0 #> 412             0 #> 413             0 #> 414             0 #> 415             0 #> 416             0 #> 417             0 #> 418             2 #> 419             2 #> 420             0 #> 421             2 #> 422             0 #> 423             2 #> 424             0 #> 425             1 #> 426             1 #> 427             0 #> 428             1 #> 429             1 #> 430             3 #> 431             3 #> 432             3 #> 433             3 #> 434             1 #> 435             1 #> 436             2 #> 437             1 #> 438             4 #> 439             3 #> 440             0 #> 441             3 #> 442             4 #> 443             2 #> 444             0 #> 445             3 #> 446             0 #> 447             3 #> 448             4 #> 449             1 #> 450             4 #> 451             7 #> 452             2 #> 453             3 #> 454             7 #> 455             4 #> 456             3 #> 457             0 #> 458             1 #> 459             0 #> 460             0 #> 461             0 #> 462             3 #> 463             0 #> 464             4 #> 465             1 #> 466             0 #> 467             2 #> 468             1 #> 469             2 #> 470             5 #> 471             2 #> 472             0 #> 473             0 #> 474             1 #> 475             2 #> 476             4 #> 477             6 #> 478             4 #> 479             3 #> 480             1 #> 481             1 #> 482             3 #> 483             3 #> 484             2 #> 485             2 #> 486             3 #> 487             6 #> 488             3 #> 489             6 #> 490             9 #> 491            10 #> 492             8 #> 493             5 #> 494             3 #> 495             0 #> 496             0 #> 497             1 #> 498             2 #> 499             1 #> 500             1 #> 501             1 #> 502             0 #> 503             1 #> 504             1 #> 505             1 #> 506             2 #> 507             0 #> 508             1 #> 509             1 #> 510             0 #> 511             1 #> 512             1 #> 513             2 #> 514             0 #> 515             1 #> 516             0 #> 517             0 #> 518             0 #> 519             1 #> 520             0 #> 521             2 #> 522             0 #> 523             1 #> 524             0 #> 525             1 #> 526             0 #> 527             3 #> 528             1 #> 529             1 #> 530             3 #> 531             0 #> 532             1 #> 533             1 #> 534             0 #> 535             1 #> 536             0 #> 537             1 #> 538             2 #> 539             0 #> 540             1 #> 541             0 #> 542             1 #> 543             0 #> 544             1 #> 545             1 #> 546             0 #> 547             2 #> 548             0 #> 549             1 #> 550             3 #> 551             1 #> 552             1 #> 553             1 #> 554             0 #> 555             0 #> 556             0 #> 557             0 #> 558             0 #> 559             1 #> 560             0 #> 561             0 #> 562             0 #> 563             1 #> 564             1 #> 565             1 #> 566             0 #> 567             1 #> 568             0 #> 569             0 #> 570             0 #> 571             0 #> 572             0 #> 573             2 #> 574             0 #> 575             1 #> 576             0 #> 577             0 #> 578             1 #> 579             0 #> 580             0 #> 581             0 #> 582             0 #> 583             1 #> 584             0 #> 585             1 #> 586             0 #> 587             0 #> 588             0 #> 589             0 #> 590             4 #> 591             5 #> 592             2 #> 593             1 #> 594             4 #> 595             2 #> 596             1 #> 597             2 #> 598             1 #> 599             3 #> 600             3 #> 601             1 #> 602             6 #> 603             2 #> 604             7 #> 605             3 #> 606             5 #> 607             2 #> 608             4 parallel_shewhart_gaussian2(NM_data, count, baseline_est) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1    -0.227154683 #> 2    -0.397171224 #> 3    -0.885435614 #> 4    -1.358610865 #> 5    -2.816696975 #> 6    -0.259693945 #> 7     0.312398224 #> 8     2.899579534 #> 9     1.501849983 #> 10    1.119209573 #> 11    5.751658303 #> 12   -3.600803828 #> 13    7.061823182 #> 14    5.739539331 #> 15   -4.567609515 #> 16    4.140284914 #> 17   11.863268484 #> 18    6.601341194 #> 19    3.515438582 #> 20   -0.108788572 #> 21   -0.109751708 #> 22   -0.112365936 #> 23   -0.114704982 #> 24   -0.116722983 #> 25   -0.118465801 #> 26   -0.119887574 #> 27   -0.121034166 #> 28   -0.121859711 #> 29   -0.122364211 #> 30   -0.122593530 #> 31   -0.122501802 #> 32    0.877865107 #> 33    0.878553062 #> 34   -0.120437938 #> 35   -0.119153756 #> 36   -0.117594392 #> 37   -0.115713982 #> 38   -0.114980164 #> 39   -0.073220318 #> 40    0.907883860 #> 41    0.854085801 #> 42   -1.197510802 #> 43   -1.246860087 #> 44   -1.294007916 #> 45    2.661091573 #> 46   -0.381607483 #> 47    0.577940780 #> 48    0.539736362 #> 49    1.503733398 #> 50    1.469977754 #> 51    1.438469428 #> 52   -0.590837442 #> 53    0.382103006 #> 54    3.357290772 #> 55    7.334679994 #> 56   -1.685729329 #> 57    3.307849760 #> 58   -0.576827094 #> 59    0.417531678 #> 60    0.402304947 #> 61    0.389004489 #> 62   -0.622277968 #> 63   -0.631588289 #> 64    0.361027664 #> 65   -0.644338383 #> 66   -0.647778156 #> 67    0.350800071 #> 68   -0.648649565 #> 69   -0.646172928 #> 70    1.358321709 #> 71    0.364742620 #> 72    0.373135667 #> 73    0.383546715 #> 74   -0.604115964 #> 75   -0.589760642 #> 76    0.415559541 #> 77    0.041209483 #> 78    0.045612393 #> 79    1.057032441 #> 80    1.066205170 #> 81    2.073222308 #> 82    1.077946264 #> 83   -0.919485372 #> 84   -1.919210190 #> 85   -1.921090599 #> 86    4.074781672 #> 87   -0.931547511 #> 88   -1.940124013 #> 89   -0.950901970 #> 90    0.036072754 #> 91    1.020846023 #> 92   -1.996582163 #> 93    0.983742332 #> 94   -2.038134627 #> 95    0.953885098 #> 96    0.884928109 #> 97   -0.114934300 #> 98   -0.114567391 #> 99   -0.114154618 #> 100  -0.113695982 #> 101  -0.113237345 #> 102  -0.112778709 #> 103   0.887725791 #> 104  -0.111769709 #> 105  -0.111219345 #> 106  -0.110668981 #> 107  -0.110072754 #> 108  -0.109476526 #> 109  -0.108880299 #> 110  -0.108238208 #> 111  -0.107550253 #> 112  -0.106908162 #> 113  -0.106174344 #> 114  -0.105945026 #> 115  -3.527602441 #> 116  -0.567733132 #> 117  -1.690143207 #> 118  -2.819570420 #> 119   0.043893501 #> 120   0.900340285 #> 121  -0.250321797 #> 122  -0.408001017 #> 123   0.427210898 #> 124  -0.744594325 #> 125  -2.923462550 #> 126  -0.109393777 #> 127   4.697566131 #> 128   3.497508901 #> 129  -2.709611330 #> 130   3.076205436 #> 131  -4.145040799 #> 132  -1.373350036 #> 133   0.547168263 #> 134   0.122342275 #> 135  -0.911000597 #> 136  -1.002819619 #> 137  -1.085695230 #> 138   0.840326707 #> 139  -1.224707945 #> 140  -0.280845050 #> 141  -2.328038743 #> 142  -0.366334888 #> 143   2.604312377 #> 144  -2.416142809 #> 145  -0.427654585 #> 146   0.569731187 #> 147  -1.423939630 #> 148  -1.408712899 #> 149  -0.384542756 #> 150   1.648524933 #> 151   1.690536034 #> 152   0.706909357 #> 153  -0.080043033 #> 154  -1.092288627 #> 155  -1.126227726 #> 156  -0.157323279 #> 157  -0.185437695 #> 158  -1.210708564 #> 159  -0.233044161 #> 160   0.747463789 #> 161  -1.269047124 #> 162  -0.282714491 #> 163  -1.293446584 #> 164  -0.301289268 #> 165   0.693757458 #> 166  -1.308306406 #> 167  -0.307434997 #> 168   2.696325822 #> 169  -0.297023949 #> 170  -1.287484310 #> 171  -0.283540037 #> 172  -0.224227372 #> 173  -0.222713872 #> 174  -0.218494416 #> 175  -0.214550143 #> 176  -0.210881051 #> 177  -0.207487141 #> 178  -0.204368413 #> 179  -0.201524867 #> 180  -0.198956502 #> 181  -0.196663320 #> 182  -0.194645320 #> 183  -0.192902501 #> 184  -0.191389001 #> 185   0.809803454 #> 186   0.810720727 #> 187  -0.188591318 #> 188   1.811775591 #> 189  -0.188086818 #> 190  -0.188132682 #> 191  -0.056595741 #> 192  -0.055999513 #> 193  -0.054394286 #> 194  -0.052926649 #> 195  -0.051596603 #> 196  -0.050358285 #> 197  -0.049257557 #> 198  -0.048248557 #> 199  -0.047377148 #> 200  -0.046643329 #> 201  -0.046047102 #> 202  -0.045542602 #> 203  -0.045175693 #> 204  -0.044900511 #> 205  -0.044808784 #> 206  -0.044808784 #> 207  -0.044900511 #> 208  -0.045175693 #> 209  -0.045267420 #> 210   0.765728489 #> 211  -0.238032330 #> 212   0.751648349 #> 213  -0.257570244 #> 214   0.734220163 #> 215   0.727157162 #> 216  -0.278896840 #> 217  -0.283850114 #> 218  -0.287748524 #> 219  -0.290546206 #> 220  -0.292289025 #> 221  -0.292976980 #> 222  -0.292564207 #> 223  -0.291096570 #> 224  -0.288574070 #> 225  -0.284950841 #> 226  -0.280272749 #> 227   0.725506070 #> 228  -0.272292475 #> 229  -0.243053404 #> 230  -0.293365825 #> 231  -0.430268813 #> 232  -2.551348842 #> 233  -1.656651777 #> 234   2.253868247 #> 235  -2.819788770 #> 236  -0.877668693 #> 237  -0.919725658 #> 238  -2.946005528 #> 239   0.043537560 #> 240  -1.951096393 #> 241   0.070046749 #> 242  -1.892987152 #> 243   0.159801907 #> 244  -0.771631941 #> 245  -1.687242829 #> 246  -1.587076623 #> 247   0.450715022 #> 248  -0.385025320 #> 249  -0.393051458 #> 250   1.584291900 #> 251  -0.436942969 #> 252  -0.456801928 #> 253  -0.475239115 #> 254  -0.492300391 #> 255  -0.507939895 #> 256  -0.522203489 #> 257  -0.535091174 #> 258  -0.546557086 #> 259  -0.556647089 #> 260   0.434638818 #> 261  -0.572653502 #> 262   0.421475952 #> 263   1.416935450 #> 264  -0.586183278 #> 265  -0.587880233 #> 266   0.411844586 #> 267  -0.702401760 #> 268   0.290810420 #> 269  -0.728039539 #> 270  -0.745284270 #> 271  -0.761015502 #> 272   0.224812631 #> 273  -0.787754008 #> 274   0.201192853 #> 275   0.191699078 #> 276   0.183810531 #> 277   0.177481347 #> 278   1.172665664 #> 279  -0.830544791 #> 280   1.167804118 #> 281   3.167666527 #> 282   1.169134163 #> 283   1.172161164 #> 284   0.176747529 #> 285  -0.821326198 #> 286  -0.618838195 #> 287   1.376208532 #> 288  -0.638421972 #> 289   0.346947524 #> 290  -0.667774706 #> 291   0.317411336 #> 292  -0.697448486 #> 293  -0.712400035 #> 294  -0.727397448 #> 295   0.257559276 #> 296  -0.757575728 #> 297  -0.772756595 #> 298   0.211970810 #> 299   0.196652352 #> 300   0.181242166 #> 301  -0.834213883 #> 302  -0.849761659 #> 303  -0.865355299 #> 304   2.129324517 #> 305  -0.147611154 #> 306  -1.170267796 #> 307  -0.234752084 #> 308  -0.296484553 #> 309  -2.355465204 #> 310  -1.411694036 #> 311   1.534874815 #> 312  -2.515804515 #> 313   1.436267973 #> 314  -1.608861856 #> 315  -0.651239866 #> 316   1.309133942 #> 317  -1.727740430 #> 318  -1.761817120 #> 319  -2.793141991 #> 320  -2.821715044 #> 321   0.152509587 #> 322  -1.870513964 #> 323   3.122239579 #> 324  -0.216109507 #> 325  -0.214871188 #> 326  -0.211431415 #> 327  -0.208266823 #> 328  -0.205377413 #> 329   0.797236815 #> 330  -0.200424139 #> 331  -0.198360275 #> 332  -0.196571593 #> 333  -0.195058092 #> 334   0.806180226 #> 335  -0.192810774 #> 336  -0.192122819 #> 337  -0.191710046 #> 338  -0.191526592 #> 339  -0.191664183 #> 340  -0.192031092 #> 341  -0.192719046 #> 342  -0.192994228 #> 343   0.059830123 #> 344  -0.944939696 #> 345   0.039925300 #> 346  -1.976860795 #> 347  -0.995252117 #> 348  -1.015248667 #> 349  -0.036896309 #> 350  -1.060195042 #> 351  -2.085099002 #> 352  -1.111654054 #> 353  -0.139814334 #> 354  -2.169625705 #> 355  -1.201088167 #> 356   1.765844143 #> 357  -1.268874638 #> 358  -1.305198646 #> 359  -2.343173746 #> 360   0.617245926 #> 361  -0.396650759 #> 362  -0.503582849 #> 363   0.497288561 #> 364  -0.500280666 #> 365   0.501966653 #> 366   0.504030517 #> 367   0.505956790 #> 368  -0.492300391 #> 369   0.509258973 #> 370  -0.489365118 #> 371  -0.488126799 #> 372   0.512928064 #> 373  -0.486200526 #> 374  -0.485466708 #> 375  -0.484916344 #> 376   0.515450565 #> 377   0.515679883 #> 378  -0.484274253 #> 379   2.515588156 #> 380   1.515496429 #> 381   0.746133743 #> 382   1.742372924 #> 383  -0.269368170 #> 384  -0.282118263 #> 385  -0.295831494 #> 386  -0.310553725 #> 387  -1.326284956 #> 388   0.657020676 #> 389  -0.360728555 #> 390   0.620559077 #> 391   3.600837708 #> 392  -0.419892660 #> 393   0.558413834 #> 394  -1.464288671 #> 395  -0.488046040 #> 396   0.487279317 #> 397  -0.538450189 #> 398   0.434857168 #> 399   0.425500984 #> 400  -0.755695318 #> 401   0.246552000 #> 402  -0.747623317 #> 403   0.257146503 #> 404   1.260815595 #> 405  -0.736524314 #> 406   1.265035050 #> 407   1.265539550 #> 408  -0.735010813 #> 409   1.263383959 #> 410   3.260723867 #> 411  -0.743036952 #> 412  -0.747852635 #> 413  -0.753723182 #> 414  -0.760648592 #> 415  -0.768628867 #> 416  -0.777709869 #> 417  -0.787799872 #> 418   1.208485173 #> 419   0.905785100 #> 420  -1.106185312 #> 421   0.852170496 #> 422  -1.199380244 #> 423   0.739208333 #> 424  -1.332109639 #> 425  -0.413288295 #> 426  -0.504373499 #> 427  -1.605319387 #> 428  -0.716171823 #> 429  -0.836884943 #> 430   1.032495390 #> 431   0.891969174 #> 432   0.741582274 #> 433   0.581334690 #> 434  -1.588819442 #> 435  -1.768880122 #> 436  -0.958801486 #> 437  -2.025854138 #> 438   1.306978351 #> 439   0.228092878 #> 440  -2.992144357 #> 441  -0.195962406 #> 442   0.616638730 #> 443  -1.554295084 #> 444  -3.708855576 #> 445  -0.846996882 #> 446  -3.968673138 #> 447  -1.073976073 #> 448  -0.162859821 #> 449  -3.235278521 #> 450  -0.291323898 #> 451   2.669095775 #> 452  -2.354111231 #> 453  -1.360853187 #> 454   2.648778179 #> 455  -0.325125406 #> 456  -1.312467039 #> 457  -1.075594259 #> 458  -0.072246213 #> 459  -1.063899029 #> 460  -1.057569846 #> 461  -1.053350390 #> 462   1.948759338 #> 463  -1.051148935 #> 464   2.946833064 #> 465  -0.057248800 #> 466  -1.063440393 #> 467   0.928304151 #> 468  -0.082015170 #> 469   0.905601645 #> 470   3.891108733 #> 471   0.874551956 #> 472  -1.144114548 #> 473  -1.164799053 #> 474  -0.187593286 #> 475   0.804151257 #> 476   1.190851596 #> 477   3.157875633 #> 478   1.060002610 #> 479  -0.039613232 #> 480  -2.141017757 #> 481  -2.244165100 #> 482  -0.349101125 #> 483  -0.455825833 #> 484  -1.564293359 #> 485  -1.674549567 #> 486  -0.786594458 #> 487   2.099617833 #> 488  -1.015912695 #> 489   1.866722231 #> 490   4.747614339 #> 491   5.626717764 #> 492   3.504078371 #> 493   0.379650296 #> 494  -1.663186351 #> 495  -0.365808452 #> 496  -0.367459543 #> 497   0.627633047 #> 498   1.622588045 #> 499   0.617451317 #> 500   0.612131134 #> 501   0.606765087 #> 502  -0.398784414 #> 503   0.595574357 #> 504   0.589795538 #> 505   0.583879127 #> 506   1.577870989 #> 507  -0.428274740 #> 508   0.565487804 #> 509   0.559112757 #> 510  -0.447399881 #> 511   0.545949891 #> 512   0.539207934 #> 513   1.536868888 #> 514  -0.481201389 #> 515   0.511506291 #> 516  -0.509086486 #> 517  -0.528486809 #> 518  -0.546694677 #> 519   0.436335773 #> 520  -0.579441321 #> 521   1.406019902 #> 522  -0.607372283 #> 523   0.380473851 #> 524  -0.630487561 #> 525   0.359789346 #> 526  -0.648787156 #> 527   2.343874660 #> 528   0.337728931 #> 529   0.332821521 #> 530   2.329106566 #> 531  -0.673415935 #> 532   0.325987838 #> 533   0.172023573 #> 534  -0.832471064 #> 535   0.154136751 #> 536  -0.859530616 #> 537   0.126526835 #> 538   1.112309104 #> 539  -0.902183808 #> 540   0.083048097 #> 541  -0.931995179 #> 542   0.052686363 #> 543  -0.962907277 #> 544   0.021178037 #> 545   0.005034033 #> 546  -1.011385153 #> 547   0.971874616 #> 548  -1.045140797 #> 549  -0.062385529 #> 550   1.920048694 #> 551  -0.086005307 #> 552   0.737201300 #> 553   0.733715663 #> 554  -0.276741249 #> 555  -0.287610933 #> 556  -0.298893390 #> 557  -0.310588620 #> 558  -0.322696623 #> 559   0.664782601 #> 560  -0.348150948 #> 561  -0.361497269 #> 562  -0.375256363 #> 563   0.610571770 #> 564   0.595987130 #> 565   0.581035581 #> 566  -0.434374605 #> 567   0.549802437 #> 568  -0.466433294 #> 569  -0.483035935 #> 570  -0.488814754 #> 571  -0.232070056 #> 572  -0.233491829 #> 573   1.762884943 #> 574  -0.239912740 #> 575   0.758115124 #> 576  -0.243031468 #> 577  -0.243398377 #> 578   0.757106123 #> 579  -0.241563831 #> 580  -0.239454103 #> 581  -0.236518830 #> 582  -0.232712147 #> 583   0.771874218 #> 584  -0.222713872 #> 585   0.783523584 #> 586  -0.209413414 #> 587  -0.201570730 #> 588  -0.192856637 #> 589  -0.189692046 #> 590   2.019057341 #> 591   2.979293559 #> 592  -0.133806196 #> 593  -1.241723358 #> 594   1.655587935 #> 595  -0.441872316 #> 596  -1.534149974 #> 597  -0.621245041 #> 598  -1.703111651 #> 599   0.220204330 #> 600   0.148748767 #> 601  -1.917524203 #> 602   3.021385419 #> 603  -1.034476504 #> 604   3.914890029 #> 605  -0.130560845 #> 606   1.829170872 #> 607  -1.205868954 #> 608   0.783353089 parallel_shewhart_gaussian2(NM_data, count,                             population * mean(count) / mean(population),                             sigma = 2) #>     id_time id_space year     county population count baseline_est #> 1         1        1 1973 bernalillo     353813    16  16.22715468 #> 2         2        1 1974 bernalillo     357520    16  16.39717122 #> 3         3        1 1975 bernalillo     368166    16  16.88543561 #> 4         4        1 1976 bernalillo     378483    16  17.35861086 #> 5         5        1 1977 bernalillo     388471    15  17.81669698 #> 6         6        1 1978 bernalillo     398130    18  18.25969395 #> 7         7        1 1979 bernalillo     407460    19  18.68760178 #> 8         8        1 1980 bernalillo     416461    22  19.10042047 #> 9         9        1 1981 bernalillo     425133    21  19.49815002 #> 10       10        1 1982 bernalillo     433476    21  19.88079043 #> 11       11        1 1983 bernalillo     441490    26  20.24834170 #> 12       12        1 1984 bernalillo     449175    17  20.60080383 #> 13       13        1 1985 bernalillo     456531    28  20.93817682 #> 14       14        1 1986 bernalillo     463558    27  21.26046067 #> 15       15        1 1987 bernalillo     470255    17  21.56760952 #> 16       16        1 1988 bernalillo     476624    26  21.85971509 #> 17       17        1 1989 bernalillo     482664    34  22.13673152 #> 18       18        1 1990 bernalillo     488375    29  22.39865881 #> 19       19        1 1991 bernalillo     490248    26  22.48456142 #> 20        1        2 1973     catron       2372     0   0.10878857 #> 21        2        2 1974     catron       2393     0   0.10975171 #> 22        3        2 1975     catron       2450     0   0.11236594 #> 23        4        2 1976     catron       2501     0   0.11470498 #> 24        5        2 1977     catron       2545     0   0.11672298 #> 25        6        2 1978     catron       2583     0   0.11846580 #> 26        7        2 1979     catron       2614     0   0.11988757 #> 27        8        2 1980     catron       2639     0   0.12103417 #> 28        9        2 1981     catron       2657     0   0.12185971 #> 29       10        2 1982     catron       2668     0   0.12236421 #> 30       11        2 1983     catron       2673     0   0.12259353 #> 31       12        2 1984     catron       2671     0   0.12250180 #> 32       13        2 1985     catron       2663     1   0.12213489 #> 33       14        2 1986     catron       2648     1   0.12144694 #> 34       15        2 1987     catron       2626     0   0.12043794 #> 35       16        2 1988     catron       2598     0   0.11915376 #> 36       17        2 1989     catron       2564     0   0.11759439 #> 37       18        2 1990     catron       2523     0   0.11571398 #> 38       19        2 1991     catron       2507     0   0.11498016 #> 39        1        3 1973     chaves      45204     2   2.07322032 #> 40        2        3 1974     chaves      45616     3   2.09211614 #> 41        3        3 1975     chaves      46789     3   2.14591420 #> 42        4        3 1976     chaves      47914     1   2.19751080 #> 43        5        3 1977     chaves      48990     1   2.24686009 #> 44        6        3 1978     chaves      50018     1   2.29400792 #> 45        7        3 1979     chaves      50997     5   2.33890843 #> 46        8        3 1980     chaves      51928     2   2.38160748 #> 47        9        3 1981     chaves      52810     3   2.42205922 #> 48       10        3 1982     chaves      53643     3   2.46026364 #> 49       11        3 1983     chaves      54428     4   2.49626660 #> 50       12        3 1984     chaves      55164     4   2.53002225 #> 51       13        3 1985     chaves      55851     4   2.56153057 #> 52       14        3 1986     chaves      56490     2   2.59083744 #> 53       15        3 1987     chaves      57080     3   2.61789699 #> 54       16        3 1988     chaves      57621     6   2.64270923 #> 55       17        3 1989     chaves      58114    10   2.66532001 #> 56       18        3 1990     chaves      58559     1   2.68572933 #> 57       19        3 1991     chaves      58699     6   2.69215024 #> 58        1        4 1973     colfax      12577     0   0.57682709 #> 59        2        4 1974     colfax      12700     1   0.58246832 #> 60        3        4 1975     colfax      13032     1   0.59769505 #> 61        4        4 1976     colfax      13322     1   0.61099551 #> 62        5        4 1977     colfax      13568     0   0.62227797 #> 63        6        4 1978     colfax      13771     0   0.63158829 #> 64        7        4 1979     colfax      13932     1   0.63897234 #> 65        8        4 1980     colfax      14049     0   0.64433838 #> 66        9        4 1981     colfax      14124     0   0.64777816 #> 67       10        4 1982     colfax      14155     1   0.64919993 #> 68       11        4 1983     colfax      14143     0   0.64864957 #> 69       12        4 1984     colfax      14089     0   0.64617293 #> 70       13        4 1985     colfax      13991     2   0.64167829 #> 71       14        4 1986     colfax      13851     1   0.63525738 #> 72       15        4 1987     colfax      13668     1   0.62686433 #> 73       16        4 1988     colfax      13441     1   0.61645328 #> 74       17        4 1989     colfax      13172     0   0.60411596 #> 75       18        4 1990     colfax      12859     0   0.58976064 #> 76       19        4 1991     colfax      12743     1   0.58444046 #> 77        1        5 1973      curry      42709     2   1.95879052 #> 78        2        5 1974      curry      42613     2   1.95438761 #> 79        3        5 1975      curry      42364     3   1.94296756 #> 80        4        5 1976      curry      42164     3   1.93379483 #> 81        5        5 1977      curry      42011     4   1.92677769 #> 82        6        5 1978      curry      41908     3   1.92205374 #> 83        7        5 1979      curry      41852     1   1.91948537 #> 84        8        5 1980      curry      41846     0   1.91921019 #> 85        9        5 1981      curry      41887     0   1.92109060 #> 86       10        5 1982      curry      41977     6   1.92521833 #> 87       11        5 1983      curry      42115     1   1.93154751 #> 88       12        5 1984      curry      42302     0   1.94012401 #> 89       13        5 1985      curry      42537     1   1.95090197 #> 90       14        5 1986      curry      42821     2   1.96392725 #> 91       15        5 1987      curry      43153     3   1.97915398 #> 92       16        5 1988      curry      43533     0   1.99658216 #> 93       17        5 1989      curry      43962     3   2.01625767 #> 94       18        5 1990      curry      44439     0   2.03813463 #> 95       19        5 1991      curry      44613     3   2.04611490 #> 96        1        6 1973     debaca       2509     1   0.11507189 #> 97        2        6 1974     debaca       2506     0   0.11493430 #> 98        3        6 1975     debaca       2498     0   0.11456739 #> 99        4        6 1976     debaca       2489     0   0.11415462 #> 100       5        6 1977     debaca       2479     0   0.11369598 #> 101       6        6 1978     debaca       2469     0   0.11323735 #> 102       7        6 1979     debaca       2459     0   0.11277871 #> 103       8        6 1980     debaca       2448     1   0.11227421 #> 104       9        6 1981     debaca       2437     0   0.11176971 #> 105      10        6 1982     debaca       2425     0   0.11121934 #> 106      11        6 1983     debaca       2413     0   0.11066898 #> 107      12        6 1984     debaca       2400     0   0.11007275 #> 108      13        6 1985     debaca       2387     0   0.10947653 #> 109      14        6 1986     debaca       2374     0   0.10888030 #> 110      15        6 1987     debaca       2360     0   0.10823821 #> 111      16        6 1988     debaca       2345     0   0.10755025 #> 112      17        6 1989     debaca       2331     0   0.10690816 #> 113      18        6 1990     debaca       2315     0   0.10617434 #> 114      19        6 1991     debaca       2310     0   0.10594503 #> 115       1        7 1973    donaana      76915     0   3.52760244 #> 116       2        7 1974    donaana      77790     3   3.56773313 #> 117       3        7 1975    donaana      80459     2   3.69014321 #> 118       4        7 1976    donaana      83281     1   3.81957042 #> 119       5        7 1977    donaana      86258     4   3.95610650 #> 120       6        7 1978    donaana      89388     5   4.09965972 #> 121       7        7 1979    donaana      92673     4   4.25032180 #> 122       8        7 1980    donaana      96111     4   4.40800102 #> 123       9        7 1981    donaana      99704     5   4.57278910 #> 124      10        7 1982    donaana     103450     4   4.74459433 #> 125      11        7 1983    donaana     107350     2   4.92346255 #> 126      12        7 1984    donaana     111404     5   5.10939378 #> 127      13        7 1985    donaana     115613    10   5.30243387 #> 128      14        7 1986    donaana     119975     9   5.50249110 #> 129      15        7 1987    donaana     124491     3   5.70961133 #> 130      16        7 1988    donaana     129161     9   5.92379456 #> 131      17        7 1989    donaana     133985     2   6.14504080 #> 132      18        7 1990    donaana     138963     5   6.37335004 #> 133      19        7 1991    donaana     140696     7   6.45283174 #> 134       1        8 1973       eddy      40940     2   1.87765773 #> 135       2        8 1974       eddy      41667     1   1.91100060 #> 136       3        8 1975       eddy      43669     1   2.00281962 #> 137       4        8 1976       eddy      45476     1   2.08569523 #> 138       5        8 1977       eddy      47089     3   2.15967329 #> 139       6        8 1978       eddy      48507     1   2.22470795 #> 140       7        8 1979       eddy      49731     2   2.28084505 #> 141       8        8 1980       eddy      50760     0   2.32803874 #> 142       9        8 1981       eddy      51595     2   2.36633489 #> 143      10        8 1982       eddy      52235     5   2.39568762 #> 144      11        8 1983       eddy      52681     0   2.41614281 #> 145      12        8 1984       eddy      52932     2   2.42765458 #> 146      13        8 1985       eddy      52989     3   2.43026881 #> 147      14        8 1986       eddy      52851     1   2.42393963 #> 148      15        8 1987       eddy      52519     1   2.40871290 #> 149      16        8 1988       eddy      51992     2   2.38454276 #> 150      17        8 1989       eddy      51271     4   2.35147507 #> 151      18        8 1990       eddy      50355     4   2.30946397 #> 152      19        8 1991       eddy      49998     3   2.29309064 #> 153       1        9 1973      grant      23549     1   1.08004303 #> 154       2        9 1974      grant      23816     0   1.09228863 #> 155       3        9 1975      grant      24556     0   1.12622773 #> 156       4        9 1976      grant      25234     1   1.15732328 #> 157       5        9 1977      grant      25847     1   1.18543769 #> 158       6        9 1978      grant      26398     0   1.21070856 #> 159       7        9 1979      grant      26885     1   1.23304416 #> 160       8        9 1980      grant      27310     2   1.25253621 #> 161       9        9 1981      grant      27670     0   1.26904712 #> 162      10        9 1982      grant      27968     1   1.28271449 #> 163      11        9 1983      grant      28202     0   1.29344658 #> 164      12        9 1984      grant      28373     1   1.30128927 #> 165      13        9 1985      grant      28481     2   1.30624254 #> 166      14        9 1986      grant      28526     0   1.30830641 #> 167      15        9 1987      grant      28507     1   1.30743500 #> 168      16        9 1988      grant      28425     4   1.30367418 #> 169      17        9 1989      grant      28280     1   1.29702395 #> 170      18        9 1990      grant      28072     0   1.28748431 #> 171      19        9 1991      grant      27986     1   1.28354004 #> 172       1       10 1973  guadalupe       4889     0   0.22422737 #> 173       2       10 1974  guadalupe       4856     0   0.22271387 #> 174       3       10 1975  guadalupe       4764     0   0.21849442 #> 175       4       10 1976  guadalupe       4678     0   0.21455014 #> 176       5       10 1977  guadalupe       4598     0   0.21088105 #> 177       6       10 1978  guadalupe       4524     0   0.20748714 #> 178       7       10 1979  guadalupe       4456     0   0.20436841 #> 179       8       10 1980  guadalupe       4394     0   0.20152487 #> 180       9       10 1981  guadalupe       4338     0   0.19895650 #> 181      10       10 1982  guadalupe       4288     0   0.19666332 #> 182      11       10 1983  guadalupe       4244     0   0.19464532 #> 183      12       10 1984  guadalupe       4206     0   0.19290250 #> 184      13       10 1985  guadalupe       4173     0   0.19138900 #> 185      14       10 1986  guadalupe       4147     1   0.19019655 #> 186      15       10 1987  guadalupe       4127     1   0.18927927 #> 187      16       10 1988  guadalupe       4112     0   0.18859132 #> 188      17       10 1989  guadalupe       4104     2   0.18822441 #> 189      18       10 1990  guadalupe       4101     0   0.18808682 #> 190      19       10 1991  guadalupe       4102     0   0.18813268 #> 191       1       11 1973    harding       1234     0   0.05659574 #> 192       2       11 1974    harding       1221     0   0.05599951 #> 193       3       11 1975    harding       1186     0   0.05439429 #> 194       4       11 1976    harding       1154     0   0.05292665 #> 195       5       11 1977    harding       1125     0   0.05159660 #> 196       6       11 1978    harding       1098     0   0.05035828 #> 197       7       11 1979    harding       1074     0   0.04925756 #> 198       8       11 1980    harding       1052     0   0.04824856 #> 199       9       11 1981    harding       1033     0   0.04737715 #> 200      10       11 1982    harding       1017     0   0.04664333 #> 201      11       11 1983    harding       1004     0   0.04604710 #> 202      12       11 1984    harding        993     0   0.04554260 #> 203      13       11 1985    harding        985     0   0.04517569 #> 204      14       11 1986    harding        979     0   0.04490051 #> 205      15       11 1987    harding        977     0   0.04480878 #> 206      16       11 1988    harding        977     0   0.04480878 #> 207      17       11 1989    harding        979     0   0.04490051 #> 208      18       11 1990    harding        985     0   0.04517569 #> 209      19       11 1991    harding        987     0   0.04526742 #> 210       1       12 1973    hidalgo       5108     1   0.23427151 #> 211       2       12 1974    hidalgo       5190     0   0.23803233 #> 212       3       12 1975    hidalgo       5415     1   0.24835165 #> 213       4       12 1976    hidalgo       5616     0   0.25757024 #> 214       5       12 1977    hidalgo       5795     1   0.26577984 #> 215       6       12 1978    hidalgo       5949     1   0.27284284 #> 216       7       12 1979    hidalgo       6081     0   0.27889684 #> 217       8       12 1980    hidalgo       6189     0   0.28385011 #> 218       9       12 1981    hidalgo       6274     0   0.28774852 #> 219      10       12 1982    hidalgo       6335     0   0.29054621 #> 220      11       12 1983    hidalgo       6373     0   0.29228902 #> 221      12       12 1984    hidalgo       6388     0   0.29297698 #> 222      13       12 1985    hidalgo       6379     0   0.29256421 #> 223      14       12 1986    hidalgo       6347     0   0.29109657 #> 224      15       12 1987    hidalgo       6292     0   0.28857407 #> 225      16       12 1988    hidalgo       6213     0   0.28495084 #> 226      17       12 1989    hidalgo       6111     0   0.28027275 #> 227      18       12 1990    hidalgo       5985     1   0.27449393 #> 228      19       12 1991    hidalgo       5937     0   0.27229247 #> 229       1       13 1973        lea      48907     2   2.24305340 #> 230       2       13 1974        lea      50004     2   2.29336583 #> 231       3       13 1975        lea      52989     2   2.43026881 #> 232       4       13 1976        lea      55629     0   2.55134884 #> 233       5       13 1977        lea      57925     1   2.65665178 #> 234       6       13 1978        lea      59876     5   2.74613175 #> 235       7       13 1979        lea      61482     0   2.81978877 #> 236       8       13 1980        lea      62744     2   2.87766869 #> 237       9       13 1981        lea      63661     2   2.91972566 #> 238      10       13 1982        lea      64234     0   2.94600553 #> 239      11       13 1983        lea      64462     3   2.95646244 #> 240      12       13 1984        lea      64345     1   2.95109639 #> 241      13       13 1985        lea      63884     3   2.92995325 #> 242      14       13 1986        lea      63078     1   2.89298715 #> 243      15       13 1987        lea      61927     3   2.84019809 #> 244      16       13 1988        lea      60432     2   2.77163194 #> 245      17       13 1989        lea      58592     1   2.68724283 #> 246      18       13 1990        lea      56408     1   2.58707662 #> 247      19       13 1991        lea      55584     3   2.54928498 #> 248       1       14 1973    lincoln       8395     0   0.38502532 #> 249       2       14 1974    lincoln       8570     0   0.39305146 #> 250       3       14 1975    lincoln       9064     2   0.41570810 #> 251       4       14 1976    lincoln       9527     0   0.43694297 #> 252       5       14 1977    lincoln       9960     0   0.45680193 #> 253       6       14 1978    lincoln      10362     0   0.47523911 #> 254       7       14 1979    lincoln      10734     0   0.49230039 #> 255       8       14 1980    lincoln      11075     0   0.50793990 #> 256       9       14 1981    lincoln      11386     0   0.52220349 #> 257      10       14 1982    lincoln      11667     0   0.53509117 #> 258      11       14 1983    lincoln      11917     0   0.54655709 #> 259      12       14 1984    lincoln      12137     0   0.55664709 #> 260      13       14 1985    lincoln      12327     1   0.56536118 #> 261      14       14 1986    lincoln      12486     0   0.57265350 #> 262      15       14 1987    lincoln      12614     1   0.57852405 #> 263      16       14 1988    lincoln      12713     2   0.58306455 #> 264      17       14 1989    lincoln      12781     0   0.58618328 #> 265      18       14 1990    lincoln      12818     0   0.58788023 #> 266      19       14 1991    lincoln      12824     1   0.58815541 #> 267       1       15 1973  losalamos      15315     0   0.70240176 #> 268       2       15 1974  losalamos      15463     1   0.70918958 #> 269       3       15 1975  losalamos      15874     0   0.72803954 #> 270       4       15 1976  losalamos      16250     0   0.74528427 #> 271       5       15 1977  losalamos      16593     0   0.76101550 #> 272       6       15 1978  losalamos      16902     1   0.77518737 #> 273       7       15 1979  losalamos      17176     0   0.78775401 #> 274       8       15 1980  losalamos      17417     1   0.79880715 #> 275       9       15 1981  losalamos      17624     1   0.80830092 #> 276      10       15 1982  losalamos      17796     1   0.81618947 #> 277      11       15 1983  losalamos      17934     1   0.82251865 #> 278      12       15 1984  losalamos      18039     2   0.82733434 #> 279      13       15 1985  losalamos      18109     0   0.83054479 #> 280      14       15 1986  losalamos      18145     2   0.83219588 #> 281      15       15 1987  losalamos      18148     4   0.83233347 #> 282      16       15 1988  losalamos      18116     2   0.83086584 #> 283      17       15 1989  losalamos      18050     2   0.82783884 #> 284      18       15 1990  losalamos      17950     1   0.82325247 #> 285      19       15 1991  losalamos      17908     0   0.82132620 #> 286       1       16 1973       luna      13493     0   0.61883819 #> 287       2       16 1974       luna      13601     2   0.62379147 #> 288       3       16 1975       luna      13920     0   0.63842197 #> 289       4       16 1976       luna      14239     1   0.65305248 #> 290       5       16 1977       luna      14560     0   0.66777471 #> 291       6       16 1978       luna      14883     1   0.68258866 #> 292       7       16 1979       luna      15207     0   0.69744849 #> 293       8       16 1980       luna      15533     0   0.71240004 #> 294       9       16 1981       luna      15860     0   0.72739745 #> 295      10       16 1982       luna      16188     1   0.74244072 #> 296      11       16 1983       luna      16518     0   0.75757573 #> 297      12       16 1984       luna      16849     0   0.77275660 #> 298      13       16 1985       luna      17182     1   0.78802919 #> 299      14       16 1986       luna      17516     1   0.80334765 #> 300      15       16 1987       luna      17852     1   0.81875783 #> 301      16       16 1988       luna      18189     0   0.83421388 #> 302      17       16 1989       luna      18528     0   0.84976166 #> 303      18       16 1990       luna      18868     0   0.86535530 #> 304      19       16 1991       luna      18984     3   0.87067548 #> 305       1       17 1973   mckinley      46826     2   2.14761115 #> 306       2       17 1974   mckinley      47320     1   2.17026780 #> 307       3       17 1975   mckinley      48726     2   2.23475208 #> 308       4       17 1976   mckinley      50072     2   2.29648455 #> 309       5       17 1977   mckinley      51358     0   2.35546520 #> 310       6       17 1978   mckinley      52584     1   2.41169404 #> 311       7       17 1979   mckinley      53749     4   2.46512518 #> 312       8       17 1980   mckinley      54854     0   2.51580452 #> 313       9       17 1981   mckinley      55899     4   2.56373203 #> 314      10       17 1982   mckinley      56883     1   2.60886186 #> 315      11       17 1983   mckinley      57807     2   2.65123987 #> 316      12       17 1984   mckinley      58671     4   2.69086606 #> 317      13       17 1985   mckinley      59475     1   2.72774043 #> 318      14       17 1986   mckinley      60218     1   2.76181712 #> 319      15       17 1987   mckinley      60901     0   2.79314199 #> 320      16       17 1988   mckinley      61524     0   2.82171504 #> 321      17       17 1989   mckinley      62086     3   2.84749041 #> 322      18       17 1990   mckinley      62588     1   2.87051396 #> 323      19       17 1991   mckinley      62746     6   2.87776042 #> 324       1       18 1973       mora       4712     0   0.21610951 #> 325       2       18 1974       mora       4685     0   0.21487119 #> 326       3       18 1975       mora       4610     0   0.21143141 #> 327       4       18 1976       mora       4541     0   0.20826682 #> 328       5       18 1977       mora       4478     0   0.20537741 #> 329       6       18 1978       mora       4421     1   0.20276319 #> 330       7       18 1979       mora       4370     0   0.20042414 #> 331       8       18 1980       mora       4325     0   0.19836028 #> 332       9       18 1981       mora       4286     0   0.19657159 #> 333      10       18 1982       mora       4253     0   0.19505809 #> 334      11       18 1983       mora       4226     1   0.19381977 #> 335      12       18 1984       mora       4204     0   0.19281077 #> 336      13       18 1985       mora       4189     0   0.19212282 #> 337      14       18 1986       mora       4180     0   0.19171005 #> 338      15       18 1987       mora       4176     0   0.19152659 #> 339      16       18 1988       mora       4179     0   0.19166418 #> 340      17       18 1989       mora       4187     0   0.19203109 #> 341      18       18 1990       mora       4202     0   0.19271905 #> 342      19       18 1991       mora       4208     0   0.19299423 #> 343       1       19 1973      otero      42303     2   1.94016988 #> 344       2       19 1974      otero      42407     1   1.94493970 #> 345       3       19 1975      otero      42737     2   1.96007470 #> 346       4       19 1976      otero      43103     0   1.97686079 #> 347       5       19 1977      otero      43504     1   1.99525212 #> 348       6       19 1978      otero      43940     1   2.01524867 #> 349       7       19 1979      otero      44412     2   2.03689631 #> 350       8       19 1980      otero      44920     1   2.06019504 #> 351       9       19 1981      otero      45463     0   2.08509900 #> 352      10       19 1982      otero      46042     1   2.11165405 #> 353      11       19 1983      otero      46656     2   2.13981433 #> 354      12       19 1984      otero      47306     0   2.16962570 #> 355      13       19 1985      otero      47992     1   2.20108817 #> 356      14       19 1986      otero      48713     4   2.23415586 #> 357      15       19 1987      otero      49470     1   2.26887464 #> 358      16       19 1988      otero      50262     1   2.30519865 #> 359      17       19 1989      otero      51090     0   2.34317375 #> 360      18       19 1990      otero      51953     3   2.38275407 #> 361      19       19 1991      otero      52256     2   2.39665076 #> 362       1       20 1973       quay      10980     0   0.50358285 #> 363       2       20 1974       quay      10961     1   0.50271144 #> 364       3       20 1975       quay      10908     0   0.50028067 #> 365       4       20 1976       quay      10859     1   0.49803335 #> 366       5       20 1977       quay      10814     1   0.49596948 #> 367       6       20 1978       quay      10772     1   0.49404321 #> 368       7       20 1979       quay      10734     0   0.49230039 #> 369       8       20 1980       quay      10700     1   0.49074103 #> 370       9       20 1981       quay      10670     0   0.48936512 #> 371      10       20 1982       quay      10643     0   0.48812680 #> 372      11       20 1983       quay      10620     1   0.48707194 #> 373      12       20 1984       quay      10601     0   0.48620053 #> 374      13       20 1985       quay      10585     0   0.48546671 #> 375      14       20 1986       quay      10573     0   0.48491634 #> 376      15       20 1987       quay      10565     1   0.48454943 #> 377      16       20 1988       quay      10560     1   0.48432012 #> 378      17       20 1989       quay      10559     0   0.48427425 #> 379      18       20 1990       quay      10562     3   0.48441184 #> 380      19       20 1991       quay      10564     2   0.48450357 #> 381       1       21 1973  rioarriba      27339     2   1.25386626 #> 382       2       21 1974  rioarriba      27421     3   1.25762708 #> 383       3       21 1975  rioarriba      27677     1   1.26936817 #> 384       4       21 1976  rioarriba      27955     1   1.28211826 #> 385       5       21 1977  rioarriba      28254     1   1.29583149 #> 386       6       21 1978  rioarriba      28575     1   1.31055372 #> 387       7       21 1979  rioarriba      28918     0   1.32628496 #> 388       8       21 1980  rioarriba      29282     2   1.34297932 #> 389       9       21 1981  rioarriba      29669     1   1.36072856 #> 390      10       21 1982  rioarriba      30077     2   1.37944092 #> 391      11       21 1983  rioarriba      30507     5   1.39916229 #> 392      12       21 1984  rioarriba      30959     1   1.41989266 #> 393      13       21 1985  rioarriba      31432     2   1.44158617 #> 394      14       21 1986  rioarriba      31927     0   1.46428867 #> 395      15       21 1987  rioarriba      32445     1   1.48804604 #> 396      16       21 1988  rioarriba      32983     2   1.51272068 #> 397      17       21 1989  rioarriba      33544     1   1.53845019 #> 398      18       21 1990  rioarriba      34126     2   1.56514283 #> 399      19       21 1991  rioarriba      34330     2   1.57449902 #> 400       1       22 1973  roosevelt      16477     0   0.75569532 #> 401       2       22 1974  roosevelt      16428     1   0.75344800 #> 402       3       22 1975  roosevelt      16301     0   0.74762332 #> 403       4       22 1976  roosevelt      16197     1   0.74285350 #> 404       5       22 1977  roosevelt      16117     2   0.73918441 #> 405       6       22 1978  roosevelt      16059     0   0.73652431 #> 406       7       22 1979  roosevelt      16025     2   0.73496495 #> 407       8       22 1980  roosevelt      16014     2   0.73446045 #> 408       9       22 1981  roosevelt      16026     0   0.73501081 #> 409      10       22 1982  roosevelt      16061     2   0.73661604 #> 410      11       22 1983  roosevelt      16119     4   0.73927613 #> 411      12       22 1984  roosevelt      16201     0   0.74303695 #> 412      13       22 1985  roosevelt      16306     0   0.74785263 #> 413      14       22 1986  roosevelt      16434     0   0.75372318 #> 414      15       22 1987  roosevelt      16585     0   0.76064859 #> 415      16       22 1988  roosevelt      16759     0   0.76862887 #> 416      17       22 1989  roosevelt      16957     0   0.77770987 #> 417      18       22 1990  roosevelt      17177     0   0.78779987 #> 418      19       22 1991  roosevelt      17258     2   0.79151483 #> 419       1       23 1973   sandoval      23858     2   1.09421490 #> 420       2       23 1974   sandoval      24119     0   1.10618531 #> 421       3       23 1975   sandoval      25027     2   1.14782950 #> 422       4       23 1976   sandoval      26151     0   1.19938024 #> 423       5       23 1977   sandoval      27490     2   1.26079167 #> 424       6       23 1978   sandoval      29045     0   1.33210964 #> 425       7       23 1979   sandoval      30815     1   1.41328830 #> 426       8       23 1980   sandoval      32801     1   1.50437350 #> 427       9       23 1981   sandoval      35002     0   1.60531939 #> 428      10       23 1982   sandoval      37419     1   1.71617182 #> 429      11       23 1983   sandoval      40051     1   1.83688494 #> 430      12       23 1984   sandoval      42899     3   1.96750461 #> 431      13       23 1985   sandoval      45963     3   2.10803083 #> 432      14       23 1986   sandoval      49242     3   2.25841773 #> 433      15       23 1987   sandoval      52736     3   2.41866531 #> 434      16       23 1988   sandoval      56446     1   2.58881944 #> 435      17       23 1989   sandoval      60372     1   2.76888012 #> 436      18       23 1990   sandoval      64513     2   2.95880149 #> 437      19       23 1991   sandoval      65975     1   3.02585414 #> 438       1       24 1973    sanjuan      58718     4   2.69302165 #> 439       2       24 1974    sanjuan      60438     3   2.77190712 #> 440       3       24 1975    sanjuan      65240     0   2.99214436 #> 441       4       24 1976    sanjuan      69684     3   3.19596241 #> 442       5       24 1977    sanjuan      73770     4   3.38336127 #> 443       6       24 1978    sanjuan      77497     2   3.55429508 #> 444       7       24 1979    sanjuan      80867     0   3.70885558 #> 445       8       24 1980    sanjuan      83879     3   3.84699688 #> 446       9       24 1981    sanjuan      86532     0   3.96867314 #> 447      10       24 1982    sanjuan      88828     3   4.07397607 #> 448      11       24 1983    sanjuan      90766     4   4.16285982 #> 449      12       24 1984    sanjuan      92345     1   4.23527852 #> 450      13       24 1985    sanjuan      93567     4   4.29132390 #> 451      14       24 1986    sanjuan      94430     7   4.33090423 #> 452      15       24 1987    sanjuan      94936     2   4.35411123 #> 453      16       24 1988    sanjuan      95083     3   4.36085319 #> 454      17       24 1989    sanjuan      94873     7   4.35122182 #> 455      18       24 1990    sanjuan      94304     4   4.32512541 #> 456      19       24 1991    sanjuan      94028     3   4.31246704 #> 457       1       25 1973  sanmiguel      23452     0   1.07559426 #> 458       2       25 1974  sanmiguel      23379     1   1.07224621 #> 459       3       25 1975  sanmiguel      23197     0   1.06389903 #> 460       4       25 1976  sanmiguel      23059     0   1.05756985 #> 461       5       25 1977  sanmiguel      22967     0   1.05335039 #> 462       6       25 1978  sanmiguel      22921     3   1.05124066 #> 463       7       25 1979  sanmiguel      22919     0   1.05114894 #> 464       8       25 1980  sanmiguel      22963     4   1.05316694 #> 465       9       25 1981  sanmiguel      23052     1   1.05724880 #> 466      10       25 1982  sanmiguel      23187     0   1.06344039 #> 467      11       25 1983  sanmiguel      23367     2   1.07169585 #> 468      12       25 1984  sanmiguel      23592     1   1.08201517 #> 469      13       25 1985  sanmiguel      23862     2   1.09439835 #> 470      14       25 1986  sanmiguel      24178     5   1.10889127 #> 471      15       25 1987  sanmiguel      24539     2   1.12544804 #> 472      16       25 1988  sanmiguel      24946     0   1.14411455 #> 473      17       25 1989  sanmiguel      25397     0   1.16479905 #> 474      18       25 1990  sanmiguel      25894     1   1.18759329 #> 475      19       25 1991  sanmiguel      26074     2   1.19584874 #> 476       1       26 1973    santafe      61250     4   2.80914840 #> 477       2       26 1974    santafe      61969     6   2.84212437 #> 478       3       26 1975    santafe      64103     4   2.93999739 #> 479       4       26 1976    santafe      66275     3   3.03961323 #> 480       5       26 1977    santafe      68486     1   3.14101776 #> 481       6       26 1978    santafe      70735     1   3.24416510 #> 482       7       26 1979    santafe      73023     3   3.34910113 #> 483       8       26 1980    santafe      75350     3   3.45582583 #> 484       9       26 1981    santafe      77715     2   3.56429336 #> 485      10       26 1982    santafe      80119     2   3.67454957 #> 486      11       26 1983    santafe      82562     3   3.78659446 #> 487      12       26 1984    santafe      85043     6   3.90038217 #> 488      13       26 1985    santafe      87562     3   4.01591269 #> 489      14       26 1986    santafe      90121     6   4.13327777 #> 490      15       26 1987    santafe      92718     9   4.25238566 #> 491      16       26 1988    santafe      95354    10   4.37328224 #> 492      17       26 1989    santafe      98028     8   4.49592163 #> 493      18       26 1990    santafe     100741     5   4.62034970 #> 494      19       26 1991    santafe     101675     3   4.66318635 #> 495       1       27 1973     sierra       7976     0   0.36580845 #> 496       2       27 1974     sierra       8012     0   0.36745954 #> 497       3       27 1975     sierra       8119     1   0.37236695 #> 498       4       27 1976     sierra       8229     2   0.37741195 #> 499       5       27 1977     sierra       8341     1   0.38254868 #> 500       6       27 1978     sierra       8457     1   0.38786887 #> 501       7       27 1979     sierra       8574     1   0.39323491 #> 502       8       27 1980     sierra       8695     0   0.39878441 #> 503       9       27 1981     sierra       8818     1   0.40442564 #> 504      10       27 1982     sierra       8944     1   0.41020446 #> 505      11       27 1983     sierra       9073     1   0.41612087 #> 506      12       27 1984     sierra       9204     2   0.42212901 #> 507      13       27 1985     sierra       9338     0   0.42827474 #> 508      14       27 1986     sierra       9474     1   0.43451220 #> 509      15       27 1987     sierra       9613     1   0.44088724 #> 510      16       27 1988     sierra       9755     0   0.44739988 #> 511      17       27 1989     sierra       9900     1   0.45405011 #> 512      18       27 1990     sierra      10047     1   0.46079207 #> 513      19       27 1991     sierra      10098     2   0.46313111 #> 514       1       28 1973    socorro      10492     0   0.48120139 #> 515       2       28 1974    socorro      10651     1   0.48849371 #> 516       3       28 1975    socorro      11100     0   0.50908649 #> 517       4       28 1976    socorro      11523     0   0.52848681 #> 518       5       28 1977    socorro      11920     0   0.54669468 #> 519       6       28 1978    socorro      12290     1   0.56366423 #> 520       7       28 1979    socorro      12634     0   0.57944132 #> 521       8       28 1980    socorro      12951     2   0.59398010 #> 522       9       28 1981    socorro      13243     0   0.60737228 #> 523      10       28 1982    socorro      13508     1   0.61952615 #> 524      11       28 1983    socorro      13747     0   0.63048756 #> 525      12       28 1984    socorro      13959     1   0.64021065 #> 526      13       28 1985    socorro      14146     0   0.64878716 #> 527      14       28 1986    socorro      14306     3   0.65612534 #> 528      15       28 1987    socorro      14440     1   0.66227107 #> 529      16       28 1988    socorro      14547     1   0.66717848 #> 530      17       28 1989    socorro      14628     3   0.67089343 #> 531      18       28 1990    socorro      14683     0   0.67341593 #> 532      19       28 1991    socorro      14696     1   0.67401216 #> 533       1       29 1973       taos      18053     1   0.82797643 #> 534       2       29 1974       taos      18151     0   0.83247106 #> 535       3       29 1975       taos      18443     1   0.84586325 #> 536       4       29 1976       taos      18741     0   0.85953062 #> 537       5       29 1977       taos      19045     1   0.87347317 #> 538       6       29 1978       taos      19355     2   0.88769090 #> 539       7       29 1979       taos      19671     0   0.90218381 #> 540       8       29 1980       taos      19993     1   0.91695190 #> 541       9       29 1981       taos      20321     0   0.93199518 #> 542      10       29 1982       taos      20655     1   0.94731364 #> 543      11       29 1983       taos      20995     0   0.96290728 #> 544      12       29 1984       taos      21342     1   0.97882196 #> 545      13       29 1985       taos      21694     1   0.99496597 #> 546      14       29 1986       taos      22052     0   1.01138515 #> 547      15       29 1987       taos      22417     2   1.02812538 #> 548      16       29 1988       taos      22788     0   1.04514080 #> 549      17       29 1989       taos      23164     1   1.06238553 #> 550      18       29 1990       taos      23547     3   1.07995131 #> 551      19       29 1991       taos      23679     1   1.08600531 #> 552       1       30 1973   torrance       5730     1   0.26279870 #> 553       2       30 1974   torrance       5806     1   0.26628434 #> 554       3       30 1975   torrance       6034     0   0.27674125 #> 555       4       30 1976   torrance       6271     0   0.28761093 #> 556       5       30 1977   torrance       6517     0   0.29889339 #> 557       6       30 1978   torrance       6772     0   0.31058862 #> 558       7       30 1979   torrance       7036     0   0.32269662 #> 559       8       30 1980   torrance       7309     1   0.33521740 #> 560       9       30 1981   torrance       7591     0   0.34815095 #> 561      10       30 1982   torrance       7882     0   0.36149727 #> 562      11       30 1983   torrance       8182     0   0.37525636 #> 563      12       30 1984   torrance       8491     1   0.38942823 #> 564      13       30 1985   torrance       8809     1   0.40401287 #> 565      14       30 1986   torrance       9135     1   0.41896442 #> 566      15       30 1987   torrance       9471     0   0.43437460 #> 567      16       30 1988   torrance       9816     1   0.45019756 #> 568      17       30 1989   torrance      10170     0   0.46643329 #> 569      18       30 1990   torrance      10532     0   0.48303593 #> 570      19       30 1991   torrance      10658     0   0.48881475 #> 571       1       31 1973      union       5060     0   0.23207006 #> 572       2       31 1974      union       5091     0   0.23349183 #> 573       3       31 1975      union       5170     2   0.23711506 #> 574       4       31 1976      union       5231     0   0.23991274 #> 575       5       31 1977      union       5274     1   0.24188488 #> 576       6       31 1978      union       5299     0   0.24303147 #> 577       7       31 1979      union       5307     0   0.24339838 #> 578       8       31 1980      union       5296     1   0.24289388 #> 579       9       31 1981      union       5267     0   0.24156383 #> 580      10       31 1982      union       5221     0   0.23945410 #> 581      11       31 1983      union       5157     0   0.23651883 #> 582      12       31 1984      union       5074     0   0.23271215 #> 583      13       31 1985      union       4974     1   0.22812578 #> 584      14       31 1986      union       4856     0   0.22271387 #> 585      15       31 1987      union       4720     1   0.21647642 #> 586      16       31 1988      union       4566     0   0.20941341 #> 587      17       31 1989      union       4395     0   0.20157073 #> 588      18       31 1990      union       4205     0   0.19285664 #> 589      19       31 1991      union       4136     0   0.18969205 #> 590       1       32 1973   valencia      43192     4   1.98094266 #> 591       2       32 1974   valencia      44059     5   2.02070644 #> 592       3       32 1975   valencia      46525     2   2.13380620 #> 593       4       32 1976   valencia      48878     1   2.24172336 #> 594       5       32 1977   valencia      51117     4   2.34441206 #> 595       6       32 1978   valencia      53242     2   2.44187232 #> 596       7       32 1979   valencia      55254     1   2.53414997 #> 597       8       32 1980   valencia      57153     2   2.62124504 #> 598       9       32 1981   valencia      58938     1   2.70311165 #> 599      10       32 1982   valencia      60610     3   2.77979567 #> 600      11       32 1983   valencia      62168     3   2.85125123 #> 601      12       32 1984   valencia      63613     1   2.91752420 #> 602      13       32 1985   valencia      64945     6   2.97861458 #> 603      14       32 1986   valencia      66163     2   3.03447650 #> 604      15       32 1987   valencia      67267     7   3.08510997 #> 605      16       32 1988   valencia      68258     3   3.13056085 #> 606      17       32 1989   valencia      69136     5   3.17082913 #> 607      18       32 1990   valencia      69900     2   3.20586895 #> 608      19       32 1991   valencia      70135     4   3.21664691 #>     .action_level #> 1    -0.113577341 #> 2    -0.198585612 #> 3    -0.442717807 #> 4    -0.679305432 #> 5    -1.408348488 #> 6    -0.129846973 #> 7     0.156199112 #> 8     1.449789767 #> 9     0.750924992 #> 10    0.559604787 #> 11    2.875829151 #> 12   -1.800401914 #> 13    3.530911591 #> 14    2.869769666 #> 15   -2.283804758 #> 16    2.070142457 #> 17    5.931634242 #> 18    3.300670597 #> 19    1.757719291 #> 20   -0.054394286 #> 21   -0.054875854 #> 22   -0.056182968 #> 23   -0.057352491 #> 24   -0.058361491 #> 25   -0.059232901 #> 26   -0.059943787 #> 27   -0.060517083 #> 28   -0.060929856 #> 29   -0.061182106 #> 30   -0.061296765 #> 31   -0.061250901 #> 32    0.438932553 #> 33    0.439276531 #> 34   -0.060218969 #> 35   -0.059576878 #> 36   -0.058797196 #> 37   -0.057856991 #> 38   -0.057490082 #> 39   -0.036610159 #> 40    0.453941930 #> 41    0.427042901 #> 42   -0.598755401 #> 43   -0.623430043 #> 44   -0.647003958 #> 45    1.330545786 #> 46   -0.190803741 #> 47    0.288970390 #> 48    0.269868181 #> 49    0.751866699 #> 50    0.734988877 #> 51    0.719234714 #> 52   -0.295418721 #> 53    0.191051503 #> 54    1.678645386 #> 55    3.667339997 #> 56   -0.842864664 #> 57    1.653924880 #> 58   -0.288413547 #> 59    0.208765839 #> 60    0.201152473 #> 61    0.194502245 #> 62   -0.311138984 #> 63   -0.315794144 #> 64    0.180513832 #> 65   -0.322169191 #> 66   -0.323889078 #> 67    0.175400035 #> 68   -0.324324783 #> 69   -0.323086464 #> 70    0.679160855 #> 71    0.182371310 #> 72    0.186567834 #> 73    0.191773358 #> 74   -0.302057982 #> 75   -0.294880321 #> 76    0.207779770 #> 77    0.020604741 #> 78    0.022806196 #> 79    0.528516220 #> 80    0.533102585 #> 81    1.036611154 #> 82    0.538973132 #> 83   -0.459742686 #> 84   -0.959605095 #> 85   -0.960545300 #> 86    2.037390836 #> 87   -0.465773755 #> 88   -0.970062006 #> 89   -0.475450985 #> 90    0.018036377 #> 91    0.510423012 #> 92   -0.998291081 #> 93    0.491871166 #> 94   -1.019067314 #> 95    0.476942549 #> 96    0.442464054 #> 97   -0.057467150 #> 98   -0.057283696 #> 99   -0.057077309 #> 100  -0.056847991 #> 101  -0.056618673 #> 102  -0.056389354 #> 103   0.443862896 #> 104  -0.055884854 #> 105  -0.055609672 #> 106  -0.055334491 #> 107  -0.055036377 #> 108  -0.054738263 #> 109  -0.054440149 #> 110  -0.054119104 #> 111  -0.053775127 #> 112  -0.053454081 #> 113  -0.053087172 #> 114  -0.052972513 #> 115  -1.763801220 #> 116  -0.283866566 #> 117  -0.845071604 #> 118  -1.409785210 #> 119   0.021946751 #> 120   0.450170142 #> 121  -0.125160898 #> 122  -0.204000508 #> 123   0.213605449 #> 124  -0.372297163 #> 125  -1.461731275 #> 126  -0.054696888 #> 127   2.348783066 #> 128   1.748754451 #> 129  -1.354805665 #> 130   1.538102718 #> 131  -2.072520399 #> 132  -0.686675018 #> 133   0.273584132 #> 134   0.061171137 #> 135  -0.455500298 #> 136  -0.501409809 #> 137  -0.542847615 #> 138   0.420163353 #> 139  -0.612353973 #> 140  -0.140422525 #> 141  -1.164019371 #> 142  -0.183167444 #> 143   1.302156189 #> 144  -1.208071405 #> 145  -0.213827292 #> 146   0.284865594 #> 147  -0.711969815 #> 148  -0.704356449 #> 149  -0.192271378 #> 150   0.824262467 #> 151   0.845268017 #> 152   0.353454678 #> 153  -0.040021516 #> 154  -0.546144313 #> 155  -0.563113863 #> 156  -0.078661639 #> 157  -0.092718847 #> 158  -0.605354282 #> 159  -0.116522080 #> 160   0.373731895 #> 161  -0.634523562 #> 162  -0.141357245 #> 163  -0.646723292 #> 164  -0.150644634 #> 165   0.346878729 #> 166  -0.654153203 #> 167  -0.153717498 #> 168   1.348162911 #> 169  -0.148511974 #> 170  -0.643742155 #> 171  -0.141770018 #> 172  -0.112113686 #> 173  -0.111356936 #> 174  -0.109247208 #> 175  -0.107275071 #> 176  -0.105440525 #> 177  -0.103743570 #> 178  -0.102184206 #> 179  -0.100762433 #> 180  -0.099478251 #> 181  -0.098331660 #> 182  -0.097322660 #> 183  -0.096451251 #> 184  -0.095694500 #> 185   0.404901727 #> 186   0.405360364 #> 187  -0.094295659 #> 188   0.905887796 #> 189  -0.094043409 #> 190  -0.094066341 #> 191  -0.028297870 #> 192  -0.027999757 #> 193  -0.027197143 #> 194  -0.026463325 #> 195  -0.025798302 #> 196  -0.025179142 #> 197  -0.024628779 #> 198  -0.024124279 #> 199  -0.023688574 #> 200  -0.023321665 #> 201  -0.023023551 #> 202  -0.022771301 #> 203  -0.022587846 #> 204  -0.022450255 #> 205  -0.022404392 #> 206  -0.022404392 #> 207  -0.022450255 #> 208  -0.022587846 #> 209  -0.022633710 #> 210   0.382864245 #> 211  -0.119016165 #> 212   0.375824175 #> 213  -0.128785122 #> 214   0.367110082 #> 215   0.363578581 #> 216  -0.139448420 #> 217  -0.141925057 #> 218  -0.143874262 #> 219  -0.145273103 #> 220  -0.146144512 #> 221  -0.146488490 #> 222  -0.146282103 #> 223  -0.145548285 #> 224  -0.144287035 #> 225  -0.142475421 #> 226  -0.140136375 #> 227   0.362753035 #> 228  -0.136146237 #> 229  -0.121526702 #> 230  -0.146682913 #> 231  -0.215134406 #> 232  -1.275674421 #> 233  -0.828325888 #> 234   1.126934124 #> 235  -1.409894385 #> 236  -0.438834347 #> 237  -0.459862829 #> 238  -1.473002764 #> 239   0.021768780 #> 240  -0.975548196 #> 241   0.035023374 #> 242  -0.946493576 #> 243   0.079900953 #> 244  -0.385815970 #> 245  -0.843621415 #> 246  -0.793538312 #> 247   0.225357511 #> 248  -0.192512660 #> 249  -0.196525729 #> 250   0.792145950 #> 251  -0.218471484 #> 252  -0.228400964 #> 253  -0.237619557 #> 254  -0.246150196 #> 255  -0.253969948 #> 256  -0.261101745 #> 257  -0.267545587 #> 258  -0.273278543 #> 259  -0.278323544 #> 260   0.217319409 #> 261  -0.286326751 #> 262   0.210737976 #> 263   0.708467725 #> 264  -0.293091639 #> 265  -0.293940116 #> 266   0.205922293 #> 267  -0.351200880 #> 268   0.145405210 #> 269  -0.364019770 #> 270  -0.372642135 #> 271  -0.380507751 #> 272   0.112406316 #> 273  -0.393877004 #> 274   0.100596426 #> 275   0.095849539 #> 276   0.091905265 #> 277   0.088740674 #> 278   0.586332832 #> 279  -0.415272396 #> 280   0.583902059 #> 281   1.583833263 #> 282   0.584567082 #> 283   0.586080582 #> 284   0.088373764 #> 285  -0.410663099 #> 286  -0.309419097 #> 287   0.688104266 #> 288  -0.319210986 #> 289   0.173473762 #> 290  -0.333887353 #> 291   0.158705668 #> 292  -0.348724243 #> 293  -0.356200018 #> 294  -0.363698724 #> 295   0.128779638 #> 296  -0.378787864 #> 297  -0.386378298 #> 298   0.105985405 #> 299   0.098326176 #> 300   0.090621083 #> 301  -0.417106941 #> 302  -0.424880830 #> 303  -0.432677650 #> 304   1.064662259 #> 305  -0.073805577 #> 306  -0.585133898 #> 307  -0.117376042 #> 308  -0.148242277 #> 309  -1.177732602 #> 310  -0.705847018 #> 311   0.767437408 #> 312  -1.257902258 #> 313   0.718133987 #> 314  -0.804430928 #> 315  -0.325619933 #> 316   0.654566971 #> 317  -0.863870215 #> 318  -0.880908560 #> 319  -1.396570996 #> 320  -1.410857522 #> 321   0.076254793 #> 322  -0.935256982 #> 323   1.561119790 #> 324  -0.108054753 #> 325  -0.107435594 #> 326  -0.105715707 #> 327  -0.104133411 #> 328  -0.102688707 #> 329   0.398618407 #> 330  -0.100212070 #> 331  -0.099180138 #> 332  -0.098285796 #> 333  -0.097529046 #> 334   0.403090113 #> 335  -0.096405387 #> 336  -0.096061410 #> 337  -0.095855023 #> 338  -0.095763296 #> 339  -0.095832091 #> 340  -0.096015546 #> 341  -0.096359523 #> 342  -0.096497114 #> 343   0.029915062 #> 344  -0.472469848 #> 345   0.019962650 #> 346  -0.988430397 #> 347  -0.497626059 #> 348  -0.507624334 #> 349  -0.018448155 #> 350  -0.530097521 #> 351  -1.042549501 #> 352  -0.555827027 #> 353  -0.069907167 #> 354  -1.084812852 #> 355  -0.600544083 #> 356   0.882922072 #> 357  -0.634437319 #> 358  -0.652599323 #> 359  -1.171586873 #> 360   0.308622963 #> 361  -0.198325380 #> 362  -0.251791424 #> 363   0.248644280 #> 364  -0.250140333 #> 365   0.250983326 #> 366   0.252015258 #> 367   0.252978395 #> 368  -0.246150196 #> 369   0.254629486 #> 370  -0.244682559 #> 371  -0.244063400 #> 372   0.256464032 #> 373  -0.243100263 #> 374  -0.242733354 #> 375  -0.242458172 #> 376   0.257725283 #> 377   0.257839942 #> 378  -0.242137127 #> 379   1.257794078 #> 380   0.757748214 #> 381   0.373066872 #> 382   0.871186462 #> 383  -0.134684085 #> 384  -0.141059132 #> 385  -0.147915747 #> 386  -0.155276862 #> 387  -0.663142478 #> 388   0.328510338 #> 389  -0.180364278 #> 390   0.310279538 #> 391   1.800418854 #> 392  -0.209946330 #> 393   0.279206917 #> 394  -0.732144336 #> 395  -0.244023020 #> 396   0.243639659 #> 397  -0.269225094 #> 398   0.217428584 #> 399   0.212750492 #> 400  -0.377847659 #> 401   0.123276000 #> 402  -0.373811658 #> 403   0.128573251 #> 404   0.630407797 #> 405  -0.368262157 #> 406   0.632517525 #> 407   0.632769775 #> 408  -0.367505407 #> 409   0.631691979 #> 410   1.630361934 #> 411  -0.371518476 #> 412  -0.373926317 #> 413  -0.376861591 #> 414  -0.380324296 #> 415  -0.384314434 #> 416  -0.388854935 #> 417  -0.393899936 #> 418   0.604242586 #> 419   0.452892550 #> 420  -0.553092656 #> 421   0.426085248 #> 422  -0.599690122 #> 423   0.369604166 #> 424  -0.666054820 #> 425  -0.206644148 #> 426  -0.252186749 #> 427  -0.802659693 #> 428  -0.358085911 #> 429  -0.418442471 #> 430   0.516247695 #> 431   0.445984587 #> 432   0.370791137 #> 433   0.290667345 #> 434  -0.794409721 #> 435  -0.884440061 #> 436  -0.479400743 #> 437  -1.012927069 #> 438   0.653489176 #> 439   0.114046439 #> 440  -1.496072179 #> 441  -0.097981203 #> 442   0.308319365 #> 443  -0.777147542 #> 444  -1.854427788 #> 445  -0.423498441 #> 446  -1.984336569 #> 447  -0.536988036 #> 448  -0.081429911 #> 449  -1.617639260 #> 450  -0.145661949 #> 451   1.334547887 #> 452  -1.177055616 #> 453  -0.680426594 #> 454   1.324389089 #> 455  -0.162562703 #> 456  -0.656233520 #> 457  -0.537797130 #> 458  -0.036123106 #> 459  -0.531949515 #> 460  -0.528784923 #> 461  -0.526675195 #> 462   0.974379669 #> 463  -0.525574468 #> 464   1.473416532 #> 465  -0.028624400 #> 466  -0.531720196 #> 467   0.464152075 #> 468  -0.041007585 #> 469   0.452800823 #> 470   1.945554366 #> 471   0.437275978 #> 472  -0.572057274 #> 473  -0.582399527 #> 474  -0.093796643 #> 475   0.402075629 #> 476   0.595425798 #> 477   1.578937817 #> 478   0.530001305 #> 479  -0.019806616 #> 480  -1.070508878 #> 481  -1.122082550 #> 482  -0.174550563 #> 483  -0.227912916 #> 484  -0.782146679 #> 485  -0.837274784 #> 486  -0.393297229 #> 487   1.049808916 #> 488  -0.507956347 #> 489   0.933361116 #> 490   2.373807169 #> 491   2.813358882 #> 492   1.752039186 #> 493   0.189825148 #> 494  -0.831593175 #> 495  -0.182904226 #> 496  -0.183729772 #> 497   0.313816523 #> 498   0.811294023 #> 499   0.308725658 #> 500   0.306065567 #> 501   0.303382544 #> 502  -0.199392207 #> 503   0.297787179 #> 504   0.294897769 #> 505   0.291939564 #> 506   0.788935495 #> 507  -0.214137370 #> 508   0.282743902 #> 509   0.279556379 #> 510  -0.223699940 #> 511   0.272974945 #> 512   0.269603967 #> 513   0.768434444 #> 514  -0.240600694 #> 515   0.255753146 #> 516  -0.254543243 #> 517  -0.264243405 #> 518  -0.273347339 #> 519   0.218167887 #> 520  -0.289720661 #> 521   0.703009951 #> 522  -0.303686141 #> 523   0.190236925 #> 524  -0.315243781 #> 525   0.179894673 #> 526  -0.324393578 #> 527   1.171937330 #> 528   0.168864466 #> 529   0.166410761 #> 530   1.164553283 #> 531  -0.336707967 #> 532   0.162993919 #> 533   0.086011787 #> 534  -0.416235532 #> 535   0.077068375 #> 536  -0.429765308 #> 537   0.063263417 #> 538   0.556154552 #> 539  -0.451091904 #> 540   0.041524049 #> 541  -0.465997590 #> 542   0.026343181 #> 543  -0.481453639 #> 544   0.010589018 #> 545   0.002517016 #> 546  -0.505692576 #> 547   0.485937308 #> 548  -0.522570399 #> 549  -0.031192764 #> 550   0.960024347 #> 551  -0.043002654 #> 552   0.368600650 #> 553   0.366857832 #> 554  -0.138370624 #> 555  -0.143805466 #> 556  -0.149446695 #> 557  -0.155294310 #> 558  -0.161348312 #> 559   0.332391301 #> 560  -0.174075474 #> 561  -0.180748634 #> 562  -0.187628182 #> 563   0.305285885 #> 564   0.297993565 #> 565   0.290517790 #> 566  -0.217187302 #> 567   0.274901218 #> 568  -0.233216647 #> 569  -0.241517967 #> 570  -0.244407377 #> 571  -0.116035028 #> 572  -0.116745914 #> 573   0.881442471 #> 574  -0.119956370 #> 575   0.379057562 #> 576  -0.121515734 #> 577  -0.121699188 #> 578   0.378553062 #> 579  -0.120781915 #> 580  -0.119727052 #> 581  -0.118259415 #> 582  -0.116356073 #> 583   0.385937109 #> 584  -0.111356936 #> 585   0.391761792 #> 586  -0.104706707 #> 587  -0.100785365 #> 588  -0.096428319 #> 589  -0.094846023 #> 590   1.009528670 #> 591   1.489646779 #> 592  -0.066903098 #> 593  -0.620861679 #> 594   0.827793968 #> 595  -0.220936158 #> 596  -0.767074987 #> 597  -0.310622520 #> 598  -0.851555826 #> 599   0.110102165 #> 600   0.074374384 #> 601  -0.958762102 #> 602   1.510692709 #> 603  -0.517238252 #> 604   1.957445015 #> 605  -0.065280423 #> 606   0.914585436 #> 607  -0.602934477 #> 608   0.391676544"},{"path":"/reference/pivot_for_scan.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn a long data frame into a wide matrix — pivot_for_scan","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"friendly wrapper pivot_wider takes long data.frame transforms wide matrix. format expected input #' scanstatistics package.","code":""},{"path":"/reference/pivot_for_scan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"","code":"pivot_for_scan(spacetime_data, value_col)"},{"path":"/reference/pivot_for_scan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. value_col expression defining values spacetime_data pivoted wide matrix. argument uses data masking specified bare code (string). Can also scalar, case entries wide matrix equal value_col.","code":""},{"path":"/reference/pivot_for_scan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"matrix, rows corresponding values id_time columns corresponding id_space. Exception: value_col = NULL, returns NULL.","code":""},{"path":"/reference/pivot_for_scan.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"Functions calculating scan statistics scanstatistics package expect case counts baseline estimates formatted matrices, rows correspond time (organized earliest latest) columns correspond space. pivot_for_scan takes spacetime_data, pivots data format. rows ordered id_time column smaller largest, columns ordered id_space column spacetime_data, also smallest largest. pivot_for_scan expects data complete, every combination id_space id_time associated exactly one value. combination id_space id_time corresponding value spacetime_data, entry returned matrix <NA>.","code":""},{"path":"/reference/pivot_for_scan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turn a long data frame into a wide matrix — pivot_for_scan","text":"","code":"df <- data.frame(vals = c(1, 2, 3, 4, 5, 6),                  id_space = rep(1:3, 2),                  id_time = rep(1:2, each = 3))  pivot_for_scan(df, vals) #>   1 2 3 #> 1 1 2 3 #> 2 4 5 6   # Non-exist combinations create NA's incomplete_df <- df[1:5, ] pivot_for_scan(incomplete_df, vals) #>   1 2  3 #> 1 1 2  3 #> 2 4 5 NA  # Returns NULL: pivot_for_scan(df, NULL) #> NULL"},{"path":"/reference/predict.arima_tidy.html","id":null,"dir":"Reference","previous_headings":"","what":"Forecast from arima_tidy fits — predict.arima_tidy","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"Forecast models fit arima_tidy. Calls predict.Arima hood.","code":""},{"path":"/reference/predict.arima_tidy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"","code":"# S3 method for arima_tidy predict(object, only_newdata = NULL, n.ahead, se.fit = TRUE, ...)"},{"path":"/reference/predict.arima_tidy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"object result arima_tidy fit only_newdata New data used prediction. transformed newxreg using formula stored object. n.ahead number steps ahead prediction required. Optional only_newdata specified, otherwise required. se.fit Logical: standard errors prediction returned? ... arguments passed methods.","code":""},{"path":"/reference/predict.arima_tidy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"time series predictions, se.fit = TRUE, list timeseries pred se.","code":""},{"path":"/reference/predict.arima_tidy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"Even though arima_tidy models fit like lm glm models, important remember behave differently, order data points crucial ARIMA models. rows only_newdata assumed ordered earliest latest, assumed follow immeadiately data used fit model. extract fitted values generate predictions single step, use augment.arima_tidy.","code":""},{"path":[]},{"path":"/reference/predict.arima_tidy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Forecast from arima_tidy fits — predict.arima_tidy","text":"","code":"data(presidents_df) # Fit on the first 110 rows, predict the last 10 fit <- arima_tidy(approval_rating ~ 1,                   data = presidents_df[1:110, ],                   order = c(1, 0, 0)) predict(fit, n.ahead = 10) #> $pred #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>  [1] 60.50137 60.10897 59.80017 59.55715 59.36591 59.21541 59.09698 59.00377 #>  [9] 58.93042 58.87270 #>  #> $se #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>  [1]  9.082644 11.557828 12.853905 13.594751 14.033962 14.299204 14.461029 #>  [8] 14.560346 14.621515 14.659269 #>   fit <- arima_tidy(approval_rating ~ election_year,                   data = presidents_df[1:110, ],                   order = c(1, 0, 0)) predict(fit, only_newdata = presidents_df[111:120, ], n.ahead = 10) #> $pred #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>      111      112      113      114      115      116      117      118  #> 59.99809 62.32400 61.70657 61.22189 60.84140 60.54271 60.30824 60.12417  #>      119      120  #> 59.97968 59.86625  #>  #> $se #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>  [1]  9.031329 11.481687 12.759482 13.486764 13.916035 14.174099 14.330817 #>  [8] 14.426546 14.485224 14.521266 #>  predict(fit, only_newdata = presidents_df[111:120, ]) #> $pred #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>      111      112      113      114      115      116      117      118  #> 59.99809 62.32400 61.70657 61.22189 60.84140 60.54271 60.30824 60.12417  #>      119      120  #> 59.97968 59.86625  #>  #> $se #> Time Series: #> Start = 111  #> End = 120  #> Frequency = 1  #>  [1]  9.031329 11.481687 12.759482 13.486764 13.916035 14.174099 14.330817 #>  [8] 14.426546 14.485224 14.521266 #>"},{"path":"/reference/prepare_training_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare data for prediction in statistical surveillance — prepare_training_data","title":"Prepare data for prediction in statistical surveillance — prepare_training_data","text":"Prepare data prediction statistical surveillance","code":""},{"path":"/reference/prepare_training_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare data for prediction in statistical surveillance — prepare_training_data","text":"","code":"prepare_training_data(   spacetime_data,   outcome_cols,   split_id,   prep_strategy = c(\"NA\", \"truncate\") )"},{"path":"/reference/prepare_training_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare data for prediction in statistical surveillance — prepare_training_data","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_cols <tidyr_tidy_select> Outcome columns removed NA'd training data. Follows tidy-select principles tidyverse. split_id value id_time marks beginning prediction data. entries outcome columns associated id_time greater equal split_id removed NA'd training data. prep_strategy Whether values converted NA (prep_strategy = \"NA\") rows removed (prep_strategy = \"truncate\")","code":""},{"path":"/reference/prepare_training_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare data for prediction in statistical surveillance — prepare_training_data","text":"data frame selected values converted NA removed, designated prep_strategy","code":""},{"path":"/reference/prepare_training_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare data for prediction in statistical surveillance — prepare_training_data","text":"","code":"x = rnorm(100) spacetime_data <- data.frame(id_space = rep(1:10, each = 10),                              id_time = rep(1:10, 10),                              x = x,                              y = 2.04 * x + 1.23,                              y2 = (2.04 * x + 1.23)^2)  # NA-out a single column prepare_training_data(spacetime_data, y, split_id = 9) #>     id_space id_time            x           y           y2 #> 1          1       1  0.846869397  2.95761357 8.747478e+00 #> 2          1       2  0.289797103  1.82118609 3.316719e+00 #> 3          1       3 -0.455661138  0.30045128 9.027097e-02 #> 4          1       4 -0.120609164  0.98395730 9.681720e-01 #> 5          1       5  0.323701479  1.89035102 3.573427e+00 #> 6          1       6 -0.242792754  0.73470278 5.397882e-01 #> 7          1       7 -1.162309122 -1.14111061 1.302133e+00 #> 8          1       8 -1.628357761 -2.09184983 4.375836e+00 #> 9          1       9  1.099096129          NA 1.205587e+01 #> 10         1      10  0.095564740          NA 2.030488e+00 #> 11         2       1 -1.192322471 -1.20233784 1.445616e+00 #> 12         2       2 -0.292184020  0.63394460 4.018858e-01 #> 13         2       3  0.904031481  3.07422422 9.450855e+00 #> 14         2       4  0.378723623  2.00259619 4.010392e+00 #> 15         2       5  0.604929568  2.46405632 6.071574e+00 #> 16         2       6 -1.000137395 -0.81028029 6.565541e-01 #> 17         2       7  0.807282402  2.87685610 8.276301e+00 #> 18         2       8 -0.376117252  0.46272081 2.141105e-01 #> 19         2       9 -0.696751935          NA 3.662399e-02 #> 20         2      10 -0.673842044          NA 2.092008e-02 #> 21         3       1  0.798776048  2.85950314 8.176758e+00 #> 22         3       2  0.597404118  2.44870440 5.996153e+00 #> 23         3       3 -0.311625673  0.59428363 3.531730e-01 #> 24         3       4 -0.393228151  0.42781457 1.830253e-01 #> 25         3       5  2.188897121  5.69535013 3.243701e+01 #> 26         3       6  0.461360015  2.17117443 4.713998e+00 #> 27         3       7  0.974930068  3.21885734 1.036104e+01 #> 28         3       8  0.485507540  2.22043538 4.930333e+00 #> 29         3       9  1.448336223          NA 1.751093e+01 #> 30         3      10  1.119655519          NA 1.234888e+01 #> 31         4       1 -0.805235888 -0.41268121 1.703058e-01 #> 32         4       2  1.600780237  4.49559168 2.021034e+01 #> 33         4       3 -0.715547221 -0.22971633 5.276959e-02 #> 34         4       4 -1.287071150 -1.39562515 1.947770e+00 #> 35         4       5  0.815259874  2.89313014 8.370202e+00 #> 36         4       6 -0.070630992  1.08591278 1.179207e+00 #> 37         4       7 -0.018097109  1.19308190 1.423444e+00 #> 38         4       8 -0.970277248 -0.74936559 5.615488e-01 #> 39         4       9 -0.046794614          NA 1.287179e+00 #> 40         4      10  0.876179522          NA 9.104740e+00 #> 41         5       1 -0.045629610  1.13691559 1.292577e+00 #> 42         5       2  0.591829528  2.43733224 5.940588e+00 #> 43         5       3  0.390773389  2.02717771 4.109449e+00 #> 44         5       4  0.335713472  1.91485548 3.666672e+00 #> 45         5       5  1.356254073  3.99675831 1.597408e+01 #> 46         5       6 -0.214746801  0.79191653 6.271318e-01 #> 47         5       7 -0.012695749  1.20410067 1.449858e+00 #> 48         5       8 -0.928024047 -0.66316906 4.397932e-01 #> 49         5       9  1.953132106          NA 2.718986e+01 #> 50         5      10  1.492505140          NA 1.827315e+01 #> 51         6       1 -0.595075878  0.01604521 2.574487e-04 #> 52         6       2 -1.633478913 -2.10229698 4.419653e+00 #> 53         6       3  1.332074224  3.94743142 1.558221e+01 #> 54         6       4  0.186611837  1.61068815 2.594316e+00 #> 55         6       5 -0.008543471  1.21257132 1.470329e+00 #> 56         6       6  0.497079901  2.24404300 5.035729e+00 #> 57         6       7  0.083847694  1.40104930 1.962939e+00 #> 58         6       8  0.326840468  1.89675455 3.597678e+00 #> 59         6       9  0.098897888          NA 2.049913e+00 #> 60         6      10  0.348056776          NA 3.763739e+00 #> 61         7       1 -0.103945433  1.01795132 1.036225e+00 #> 62         7       2  0.227346734  1.69378734 2.868916e+00 #> 63         7       3  2.031012081  5.37326465 2.887197e+01 #> 64         7       4  0.221963908  1.68280637 2.831837e+00 #> 65         7       5  2.637643737  6.61079322 4.370259e+01 #> 66         7       6 -1.443755569 -1.71526136 2.942122e+00 #> 67         7       7 -0.956117286 -0.72047926 5.190904e-01 #> 68         7       8 -0.182490946  0.85771847 7.356810e-01 #> 69         7       9  1.861330816          NA 2.527188e+01 #> 70         7      10  0.828443485          NA 8.526544e+00 #> 71         8       1  0.531210254  2.31366892 5.353064e+00 #> 72         8       2 -0.004128931  1.22157698 1.492250e+00 #> 73         8       3 -0.676207567 -0.14946344 2.233932e-02 #> 74         8       4  0.228571453  1.69628576 2.877385e+00 #> 75         8       5  2.060793529  5.43401880 2.952856e+01 #> 76         8       6  1.250625379  3.78127577 1.429805e+01 #> 77         8       7  0.394004558  2.03376930 4.136218e+00 #> 78         8       8  0.542711034  2.33713051 5.462179e+00 #> 79         8       9 -0.305519502          NA 3.681337e-01 #> 80         8      10  2.508846475          NA 4.029770e+01 #> 81         9       1  0.713624674  2.68579434 7.213491e+00 #> 82         9       2  1.176272934  3.62959678 1.317397e+01 #> 83         9       3  1.220099799  3.71900359 1.383099e+01 #> 84         9       4 -0.701922247 -0.20192138 4.077225e-02 #> 85         9       5  0.498580322  2.24710386 5.049476e+00 #> 86         9       6  0.334212564  1.91179363 3.654955e+00 #> 87         9       7  1.082418318  3.43813337 1.182076e+01 #> 88         9       8 -1.268606521 -1.35795730 1.844048e+00 #> 89         9       9 -0.604883499          NA 1.570012e-05 #> 90         9      10  0.242484199          NA 2.974479e+00 #> 91        10       1  1.766816262  4.83430517 2.337051e+01 #> 92        10       2 -2.061966415 -2.97641149 8.859025e+00 #> 93        10       3 -0.991669740 -0.79300627 6.288589e-01 #> 94        10       4 -0.978416117 -0.76596888 5.867083e-01 #> 95        10       5 -0.209345980  0.80293420 6.447033e-01 #> 96        10       6  1.444200333  4.17616868 1.744038e+01 #> 97        10       7  0.144674259  1.52513549 2.326038e+00 #> 98        10       8 -2.126999077 -3.10907812 9.666367e+00 #> 99        10       9  0.464926452          NA 4.745644e+00 #> 100       10      10  0.023903480          NA 1.635235e+00  # NA-out multiple columns prepare_training_data(spacetime_data, c(y, y2), split_id = 9) #>     id_space id_time            x           y           y2 #> 1          1       1  0.846869397  2.95761357 8.747478e+00 #> 2          1       2  0.289797103  1.82118609 3.316719e+00 #> 3          1       3 -0.455661138  0.30045128 9.027097e-02 #> 4          1       4 -0.120609164  0.98395730 9.681720e-01 #> 5          1       5  0.323701479  1.89035102 3.573427e+00 #> 6          1       6 -0.242792754  0.73470278 5.397882e-01 #> 7          1       7 -1.162309122 -1.14111061 1.302133e+00 #> 8          1       8 -1.628357761 -2.09184983 4.375836e+00 #> 9          1       9  1.099096129          NA           NA #> 10         1      10  0.095564740          NA           NA #> 11         2       1 -1.192322471 -1.20233784 1.445616e+00 #> 12         2       2 -0.292184020  0.63394460 4.018858e-01 #> 13         2       3  0.904031481  3.07422422 9.450855e+00 #> 14         2       4  0.378723623  2.00259619 4.010392e+00 #> 15         2       5  0.604929568  2.46405632 6.071574e+00 #> 16         2       6 -1.000137395 -0.81028029 6.565541e-01 #> 17         2       7  0.807282402  2.87685610 8.276301e+00 #> 18         2       8 -0.376117252  0.46272081 2.141105e-01 #> 19         2       9 -0.696751935          NA           NA #> 20         2      10 -0.673842044          NA           NA #> 21         3       1  0.798776048  2.85950314 8.176758e+00 #> 22         3       2  0.597404118  2.44870440 5.996153e+00 #> 23         3       3 -0.311625673  0.59428363 3.531730e-01 #> 24         3       4 -0.393228151  0.42781457 1.830253e-01 #> 25         3       5  2.188897121  5.69535013 3.243701e+01 #> 26         3       6  0.461360015  2.17117443 4.713998e+00 #> 27         3       7  0.974930068  3.21885734 1.036104e+01 #> 28         3       8  0.485507540  2.22043538 4.930333e+00 #> 29         3       9  1.448336223          NA           NA #> 30         3      10  1.119655519          NA           NA #> 31         4       1 -0.805235888 -0.41268121 1.703058e-01 #> 32         4       2  1.600780237  4.49559168 2.021034e+01 #> 33         4       3 -0.715547221 -0.22971633 5.276959e-02 #> 34         4       4 -1.287071150 -1.39562515 1.947770e+00 #> 35         4       5  0.815259874  2.89313014 8.370202e+00 #> 36         4       6 -0.070630992  1.08591278 1.179207e+00 #> 37         4       7 -0.018097109  1.19308190 1.423444e+00 #> 38         4       8 -0.970277248 -0.74936559 5.615488e-01 #> 39         4       9 -0.046794614          NA           NA #> 40         4      10  0.876179522          NA           NA #> 41         5       1 -0.045629610  1.13691559 1.292577e+00 #> 42         5       2  0.591829528  2.43733224 5.940588e+00 #> 43         5       3  0.390773389  2.02717771 4.109449e+00 #> 44         5       4  0.335713472  1.91485548 3.666672e+00 #> 45         5       5  1.356254073  3.99675831 1.597408e+01 #> 46         5       6 -0.214746801  0.79191653 6.271318e-01 #> 47         5       7 -0.012695749  1.20410067 1.449858e+00 #> 48         5       8 -0.928024047 -0.66316906 4.397932e-01 #> 49         5       9  1.953132106          NA           NA #> 50         5      10  1.492505140          NA           NA #> 51         6       1 -0.595075878  0.01604521 2.574487e-04 #> 52         6       2 -1.633478913 -2.10229698 4.419653e+00 #> 53         6       3  1.332074224  3.94743142 1.558221e+01 #> 54         6       4  0.186611837  1.61068815 2.594316e+00 #> 55         6       5 -0.008543471  1.21257132 1.470329e+00 #> 56         6       6  0.497079901  2.24404300 5.035729e+00 #> 57         6       7  0.083847694  1.40104930 1.962939e+00 #> 58         6       8  0.326840468  1.89675455 3.597678e+00 #> 59         6       9  0.098897888          NA           NA #> 60         6      10  0.348056776          NA           NA #> 61         7       1 -0.103945433  1.01795132 1.036225e+00 #> 62         7       2  0.227346734  1.69378734 2.868916e+00 #> 63         7       3  2.031012081  5.37326465 2.887197e+01 #> 64         7       4  0.221963908  1.68280637 2.831837e+00 #> 65         7       5  2.637643737  6.61079322 4.370259e+01 #> 66         7       6 -1.443755569 -1.71526136 2.942122e+00 #> 67         7       7 -0.956117286 -0.72047926 5.190904e-01 #> 68         7       8 -0.182490946  0.85771847 7.356810e-01 #> 69         7       9  1.861330816          NA           NA #> 70         7      10  0.828443485          NA           NA #> 71         8       1  0.531210254  2.31366892 5.353064e+00 #> 72         8       2 -0.004128931  1.22157698 1.492250e+00 #> 73         8       3 -0.676207567 -0.14946344 2.233932e-02 #> 74         8       4  0.228571453  1.69628576 2.877385e+00 #> 75         8       5  2.060793529  5.43401880 2.952856e+01 #> 76         8       6  1.250625379  3.78127577 1.429805e+01 #> 77         8       7  0.394004558  2.03376930 4.136218e+00 #> 78         8       8  0.542711034  2.33713051 5.462179e+00 #> 79         8       9 -0.305519502          NA           NA #> 80         8      10  2.508846475          NA           NA #> 81         9       1  0.713624674  2.68579434 7.213491e+00 #> 82         9       2  1.176272934  3.62959678 1.317397e+01 #> 83         9       3  1.220099799  3.71900359 1.383099e+01 #> 84         9       4 -0.701922247 -0.20192138 4.077225e-02 #> 85         9       5  0.498580322  2.24710386 5.049476e+00 #> 86         9       6  0.334212564  1.91179363 3.654955e+00 #> 87         9       7  1.082418318  3.43813337 1.182076e+01 #> 88         9       8 -1.268606521 -1.35795730 1.844048e+00 #> 89         9       9 -0.604883499          NA           NA #> 90         9      10  0.242484199          NA           NA #> 91        10       1  1.766816262  4.83430517 2.337051e+01 #> 92        10       2 -2.061966415 -2.97641149 8.859025e+00 #> 93        10       3 -0.991669740 -0.79300627 6.288589e-01 #> 94        10       4 -0.978416117 -0.76596888 5.867083e-01 #> 95        10       5 -0.209345980  0.80293420 6.447033e-01 #> 96        10       6  1.444200333  4.17616868 1.744038e+01 #> 97        10       7  0.144674259  1.52513549 2.326038e+00 #> 98        10       8 -2.126999077 -3.10907812 9.666367e+00 #> 99        10       9  0.464926452          NA           NA #> 100       10      10  0.023903480          NA           NA  # We can use dplyr selection helpers prepare_training_data(spacetime_data, dplyr::starts_with(\"y\"), split_id = 9) #>     id_space id_time            x           y           y2 #> 1          1       1  0.846869397  2.95761357 8.747478e+00 #> 2          1       2  0.289797103  1.82118609 3.316719e+00 #> 3          1       3 -0.455661138  0.30045128 9.027097e-02 #> 4          1       4 -0.120609164  0.98395730 9.681720e-01 #> 5          1       5  0.323701479  1.89035102 3.573427e+00 #> 6          1       6 -0.242792754  0.73470278 5.397882e-01 #> 7          1       7 -1.162309122 -1.14111061 1.302133e+00 #> 8          1       8 -1.628357761 -2.09184983 4.375836e+00 #> 9          1       9  1.099096129          NA           NA #> 10         1      10  0.095564740          NA           NA #> 11         2       1 -1.192322471 -1.20233784 1.445616e+00 #> 12         2       2 -0.292184020  0.63394460 4.018858e-01 #> 13         2       3  0.904031481  3.07422422 9.450855e+00 #> 14         2       4  0.378723623  2.00259619 4.010392e+00 #> 15         2       5  0.604929568  2.46405632 6.071574e+00 #> 16         2       6 -1.000137395 -0.81028029 6.565541e-01 #> 17         2       7  0.807282402  2.87685610 8.276301e+00 #> 18         2       8 -0.376117252  0.46272081 2.141105e-01 #> 19         2       9 -0.696751935          NA           NA #> 20         2      10 -0.673842044          NA           NA #> 21         3       1  0.798776048  2.85950314 8.176758e+00 #> 22         3       2  0.597404118  2.44870440 5.996153e+00 #> 23         3       3 -0.311625673  0.59428363 3.531730e-01 #> 24         3       4 -0.393228151  0.42781457 1.830253e-01 #> 25         3       5  2.188897121  5.69535013 3.243701e+01 #> 26         3       6  0.461360015  2.17117443 4.713998e+00 #> 27         3       7  0.974930068  3.21885734 1.036104e+01 #> 28         3       8  0.485507540  2.22043538 4.930333e+00 #> 29         3       9  1.448336223          NA           NA #> 30         3      10  1.119655519          NA           NA #> 31         4       1 -0.805235888 -0.41268121 1.703058e-01 #> 32         4       2  1.600780237  4.49559168 2.021034e+01 #> 33         4       3 -0.715547221 -0.22971633 5.276959e-02 #> 34         4       4 -1.287071150 -1.39562515 1.947770e+00 #> 35         4       5  0.815259874  2.89313014 8.370202e+00 #> 36         4       6 -0.070630992  1.08591278 1.179207e+00 #> 37         4       7 -0.018097109  1.19308190 1.423444e+00 #> 38         4       8 -0.970277248 -0.74936559 5.615488e-01 #> 39         4       9 -0.046794614          NA           NA #> 40         4      10  0.876179522          NA           NA #> 41         5       1 -0.045629610  1.13691559 1.292577e+00 #> 42         5       2  0.591829528  2.43733224 5.940588e+00 #> 43         5       3  0.390773389  2.02717771 4.109449e+00 #> 44         5       4  0.335713472  1.91485548 3.666672e+00 #> 45         5       5  1.356254073  3.99675831 1.597408e+01 #> 46         5       6 -0.214746801  0.79191653 6.271318e-01 #> 47         5       7 -0.012695749  1.20410067 1.449858e+00 #> 48         5       8 -0.928024047 -0.66316906 4.397932e-01 #> 49         5       9  1.953132106          NA           NA #> 50         5      10  1.492505140          NA           NA #> 51         6       1 -0.595075878  0.01604521 2.574487e-04 #> 52         6       2 -1.633478913 -2.10229698 4.419653e+00 #> 53         6       3  1.332074224  3.94743142 1.558221e+01 #> 54         6       4  0.186611837  1.61068815 2.594316e+00 #> 55         6       5 -0.008543471  1.21257132 1.470329e+00 #> 56         6       6  0.497079901  2.24404300 5.035729e+00 #> 57         6       7  0.083847694  1.40104930 1.962939e+00 #> 58         6       8  0.326840468  1.89675455 3.597678e+00 #> 59         6       9  0.098897888          NA           NA #> 60         6      10  0.348056776          NA           NA #> 61         7       1 -0.103945433  1.01795132 1.036225e+00 #> 62         7       2  0.227346734  1.69378734 2.868916e+00 #> 63         7       3  2.031012081  5.37326465 2.887197e+01 #> 64         7       4  0.221963908  1.68280637 2.831837e+00 #> 65         7       5  2.637643737  6.61079322 4.370259e+01 #> 66         7       6 -1.443755569 -1.71526136 2.942122e+00 #> 67         7       7 -0.956117286 -0.72047926 5.190904e-01 #> 68         7       8 -0.182490946  0.85771847 7.356810e-01 #> 69         7       9  1.861330816          NA           NA #> 70         7      10  0.828443485          NA           NA #> 71         8       1  0.531210254  2.31366892 5.353064e+00 #> 72         8       2 -0.004128931  1.22157698 1.492250e+00 #> 73         8       3 -0.676207567 -0.14946344 2.233932e-02 #> 74         8       4  0.228571453  1.69628576 2.877385e+00 #> 75         8       5  2.060793529  5.43401880 2.952856e+01 #> 76         8       6  1.250625379  3.78127577 1.429805e+01 #> 77         8       7  0.394004558  2.03376930 4.136218e+00 #> 78         8       8  0.542711034  2.33713051 5.462179e+00 #> 79         8       9 -0.305519502          NA           NA #> 80         8      10  2.508846475          NA           NA #> 81         9       1  0.713624674  2.68579434 7.213491e+00 #> 82         9       2  1.176272934  3.62959678 1.317397e+01 #> 83         9       3  1.220099799  3.71900359 1.383099e+01 #> 84         9       4 -0.701922247 -0.20192138 4.077225e-02 #> 85         9       5  0.498580322  2.24710386 5.049476e+00 #> 86         9       6  0.334212564  1.91179363 3.654955e+00 #> 87         9       7  1.082418318  3.43813337 1.182076e+01 #> 88         9       8 -1.268606521 -1.35795730 1.844048e+00 #> 89         9       9 -0.604883499          NA           NA #> 90         9      10  0.242484199          NA           NA #> 91        10       1  1.766816262  4.83430517 2.337051e+01 #> 92        10       2 -2.061966415 -2.97641149 8.859025e+00 #> 93        10       3 -0.991669740 -0.79300627 6.288589e-01 #> 94        10       4 -0.978416117 -0.76596888 5.867083e-01 #> 95        10       5 -0.209345980  0.80293420 6.447033e-01 #> 96        10       6  1.444200333  4.17616868 1.744038e+01 #> 97        10       7  0.144674259  1.52513549 2.326038e+00 #> 98        10       8 -2.126999077 -3.10907812 9.666367e+00 #> 99        10       9  0.464926452          NA           NA #> 100       10      10  0.023903480          NA           NA  # Remove all rows above split_id prepare_training_data(spacetime_data, y, split_id = 9, prep_strategy = \"truncate\") #>    id_space id_time            x           y           y2 #> 1         1       1  0.846869397  2.95761357 8.747478e+00 #> 2         1       2  0.289797103  1.82118609 3.316719e+00 #> 3         1       3 -0.455661138  0.30045128 9.027097e-02 #> 4         1       4 -0.120609164  0.98395730 9.681720e-01 #> 5         1       5  0.323701479  1.89035102 3.573427e+00 #> 6         1       6 -0.242792754  0.73470278 5.397882e-01 #> 7         1       7 -1.162309122 -1.14111061 1.302133e+00 #> 8         1       8 -1.628357761 -2.09184983 4.375836e+00 #> 11        2       1 -1.192322471 -1.20233784 1.445616e+00 #> 12        2       2 -0.292184020  0.63394460 4.018858e-01 #> 13        2       3  0.904031481  3.07422422 9.450855e+00 #> 14        2       4  0.378723623  2.00259619 4.010392e+00 #> 15        2       5  0.604929568  2.46405632 6.071574e+00 #> 16        2       6 -1.000137395 -0.81028029 6.565541e-01 #> 17        2       7  0.807282402  2.87685610 8.276301e+00 #> 18        2       8 -0.376117252  0.46272081 2.141105e-01 #> 21        3       1  0.798776048  2.85950314 8.176758e+00 #> 22        3       2  0.597404118  2.44870440 5.996153e+00 #> 23        3       3 -0.311625673  0.59428363 3.531730e-01 #> 24        3       4 -0.393228151  0.42781457 1.830253e-01 #> 25        3       5  2.188897121  5.69535013 3.243701e+01 #> 26        3       6  0.461360015  2.17117443 4.713998e+00 #> 27        3       7  0.974930068  3.21885734 1.036104e+01 #> 28        3       8  0.485507540  2.22043538 4.930333e+00 #> 31        4       1 -0.805235888 -0.41268121 1.703058e-01 #> 32        4       2  1.600780237  4.49559168 2.021034e+01 #> 33        4       3 -0.715547221 -0.22971633 5.276959e-02 #> 34        4       4 -1.287071150 -1.39562515 1.947770e+00 #> 35        4       5  0.815259874  2.89313014 8.370202e+00 #> 36        4       6 -0.070630992  1.08591278 1.179207e+00 #> 37        4       7 -0.018097109  1.19308190 1.423444e+00 #> 38        4       8 -0.970277248 -0.74936559 5.615488e-01 #> 41        5       1 -0.045629610  1.13691559 1.292577e+00 #> 42        5       2  0.591829528  2.43733224 5.940588e+00 #> 43        5       3  0.390773389  2.02717771 4.109449e+00 #> 44        5       4  0.335713472  1.91485548 3.666672e+00 #> 45        5       5  1.356254073  3.99675831 1.597408e+01 #> 46        5       6 -0.214746801  0.79191653 6.271318e-01 #> 47        5       7 -0.012695749  1.20410067 1.449858e+00 #> 48        5       8 -0.928024047 -0.66316906 4.397932e-01 #> 51        6       1 -0.595075878  0.01604521 2.574487e-04 #> 52        6       2 -1.633478913 -2.10229698 4.419653e+00 #> 53        6       3  1.332074224  3.94743142 1.558221e+01 #> 54        6       4  0.186611837  1.61068815 2.594316e+00 #> 55        6       5 -0.008543471  1.21257132 1.470329e+00 #> 56        6       6  0.497079901  2.24404300 5.035729e+00 #> 57        6       7  0.083847694  1.40104930 1.962939e+00 #> 58        6       8  0.326840468  1.89675455 3.597678e+00 #> 61        7       1 -0.103945433  1.01795132 1.036225e+00 #> 62        7       2  0.227346734  1.69378734 2.868916e+00 #> 63        7       3  2.031012081  5.37326465 2.887197e+01 #> 64        7       4  0.221963908  1.68280637 2.831837e+00 #> 65        7       5  2.637643737  6.61079322 4.370259e+01 #> 66        7       6 -1.443755569 -1.71526136 2.942122e+00 #> 67        7       7 -0.956117286 -0.72047926 5.190904e-01 #> 68        7       8 -0.182490946  0.85771847 7.356810e-01 #> 71        8       1  0.531210254  2.31366892 5.353064e+00 #> 72        8       2 -0.004128931  1.22157698 1.492250e+00 #> 73        8       3 -0.676207567 -0.14946344 2.233932e-02 #> 74        8       4  0.228571453  1.69628576 2.877385e+00 #> 75        8       5  2.060793529  5.43401880 2.952856e+01 #> 76        8       6  1.250625379  3.78127577 1.429805e+01 #> 77        8       7  0.394004558  2.03376930 4.136218e+00 #> 78        8       8  0.542711034  2.33713051 5.462179e+00 #> 81        9       1  0.713624674  2.68579434 7.213491e+00 #> 82        9       2  1.176272934  3.62959678 1.317397e+01 #> 83        9       3  1.220099799  3.71900359 1.383099e+01 #> 84        9       4 -0.701922247 -0.20192138 4.077225e-02 #> 85        9       5  0.498580322  2.24710386 5.049476e+00 #> 86        9       6  0.334212564  1.91179363 3.654955e+00 #> 87        9       7  1.082418318  3.43813337 1.182076e+01 #> 88        9       8 -1.268606521 -1.35795730 1.844048e+00 #> 91       10       1  1.766816262  4.83430517 2.337051e+01 #> 92       10       2 -2.061966415 -2.97641149 8.859025e+00 #> 93       10       3 -0.991669740 -0.79300627 6.288589e-01 #> 94       10       4 -0.978416117 -0.76596888 5.867083e-01 #> 95       10       5 -0.209345980  0.80293420 6.447033e-01 #> 96       10       6  1.444200333  4.17616868 1.744038e+01 #> 97       10       7  0.144674259  1.52513549 2.326038e+00 #> 98       10       8 -2.126999077 -3.10907812 9.666367e+00"},{"path":"/reference/presidents_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Quarterly Approval Ratings of US Presidents — presidents_df","title":"Quarterly Approval Ratings of US Presidents — presidents_df","text":"data frame containing approximately quarterly approval rating   President United States, 1945 - 1974. Converted data frame   presidents time series.","code":""},{"path":"/reference/presidents_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quarterly Approval Ratings of US Presidents — presidents_df","text":"","code":"presidents_df"},{"path":"/reference/presidents_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Quarterly Approval Ratings of US Presidents — presidents_df","text":"data frame 120 rows 3 columns: approval_rating quarterly approval rating US President, percent (23-87) date year, decimal (1945.25 - 1975.00) election_year 1 current year presidential election year, 0 otherwise (0/1)","code":""},{"path":"/reference/presidents_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Quarterly Approval Ratings of US Presidents — presidents_df","text":"presidents","code":""},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics augment","code":""},{"path":"/reference/remove_overlapping_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"addition reporting details likely cluster (MLC), scanstatistics objects also contain detailed information likelihood cluster possible spatial zones temporal durations. information can used identify independent secondary clusters exist study area. searching secondary clusters, generally interested clusters significantly overlap primary cluster.","code":""},{"path":"/reference/remove_overlapping_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"","code":"remove_overlapping_clusters(   scan_result,   zones,   order_by,   take_highest = TRUE,   max_overlap_frac = 0 )"},{"path":"/reference/remove_overlapping_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"scan_result object class scanstatistic, generated scan_bayes_negbin scan_eb_poisson2. zones list integer vectors. vector corresponds single zone; elements numbers locations zone. order_by column order clusters . column scan_result$observed scan_result$posteriors$window_posteriors valid. Specified bare text. take_highest Boolean. clusters ordered highest lowest (take_highest = TRUE) lowest highest (take_highest = FALSE). max_overlap_frac Optional. maximum overlap fraction allowed clusters? Defaults 0.","code":""},{"path":"/reference/remove_overlapping_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"object class scanstatistic, observed posteriors$window_posteriors data frame modified contain non-overlapping clusters. Otherwise identical scan_result input.","code":""},{"path":"/reference/remove_overlapping_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"remove_overlapping_clusters goes information likelihood cluster possible spatial zones temporal durations, keeps information non-overlapping spatial zones. Potential clusters gone -likely least likely (determined order_by take_highest). Information spatial zone duration retained fraction spatial locations zone present already identified cluster less equal max_overlap_frac.","code":""},{"path":[]},{"path":"/reference/remove_overlapping_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove overlapping clusters from scan statistics — remove_overlapping_clusters","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scanres <- scan_eb_poisson2(NM_data, count, zones,                             baseline_est, n_mcsim = 100)  # Order by cluster score remove_overlapping_clusters(scanres, zones, order_by = score) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 100 #> Monte Carlo P-value:              0.079 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32  # Order by mc-pvalue remove_overlapping_clusters(scanres, zones, order_by = mc_pvalue,                             take_highest = FALSE) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 100 #> Monte Carlo P-value:              0.079 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32  # Order by mc-pvalue, allow some overlap remove_overlapping_clusters(scanres, zones, order_by = mc_pvalue,                             take_highest = FALSE,                             max_overlap_frac = 0.2) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 100 #> Monte Carlo P-value:              0.079 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/report_top_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract clusters identified by scanning alarm functions — report_top_clusters","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"Extract space-time clusters, based values calculated scan statistic. can either absolute measure intensity, score calculate scan_eb_poisson relative measure, Monte-Carlo p-value.","code":""},{"path":"/reference/report_top_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"","code":"report_top_clusters(   scan_result,   order_by,   take_highest = TRUE,   cutoff_val = NULL,   max_reported = 10,   min_reported = 1,   single_duration = TRUE )"},{"path":"/reference/report_top_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"scan_result object class scanstatistic, generated scan_bayes_negbin scan_eb_poisson2. order_by column order clusters . column scan_result$observed scan_result$posteriors$window_posteriors valid. Specified bare text. take_highest Boolean. clusters ordered highest lowest (take_highest = TRUE) lowest highest (take_highest = FALSE). cutoff_val cutoff value used reporting clusters. take_highest = TRUE, clusters values order_by greater cutoff_val reported; take_highest = FALSE, report clusters values cutoff_val. Defaults NULL, cutoff value applied. max_reported maximum number clusters reported. Defaults 10. min_reported minimum number clusters reported. number clusters always reported, even meet threshold set cutoff_val. single_duration Boolean. TRUE, remove clusters spatial zone different duration another, intense, cluster.","code":""},{"path":"/reference/report_top_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"data frame containing information likely clusters study area, min_reported max_reported rows, including columns zone, duration, column specified order_by.","code":""},{"path":"/reference/report_top_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"scanstatistics objects contain detailed information likelihood cluster possible spatial zones temporal durations. report_top_clusters uses information report zones likely contain cluster. results can customized using cutoff_val, max_reported, min_reported, single_duration options.","code":""},{"path":[]},{"path":"/reference/report_top_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract clusters identified by scanning alarm functions — report_top_clusters","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scanres <- scan_eb_poisson2(NM_data, count, zones,                             baseline_est, n_mcsim = 100)  report_top_clusters(scanres, score) #> # A tibble: 10 x 6 #>     zone duration score relrisk action_level mc_pvalue #>    <dbl>    <dbl> <dbl>   <dbl>        <dbl>     <dbl> #>  1   136        7  7.26    1.27         7.26    0.0297 #>  2   116        7  6.82    1.28         6.82    0.0396 #>  3   135        7  6.66    1.26         6.66    0.0396 #>  4   126        7  6.01    1.27         6.01    0.0891 #>  5   127        7  5.88    1.26         5.88    0.0891 #>  6    68        6  5.56    1.65         5.56    0.109  #>  7    71        9  5.45    1.21         5.45    0.139  #>  8   142        7  5.43    1.26         5.43    0.139  #>  9     4        7  5.40    1.23         5.40    0.139  #> 10   106        7  5.36    1.24         5.36    0.149   report_top_clusters(scanres, mc_pvalue,                     take_highest = FALSE,                     cutoff_val = 0.05) #> # A tibble: 3 x 6 #>    zone duration score relrisk action_level mc_pvalue #>   <dbl>    <dbl> <dbl>   <dbl>        <dbl>     <dbl> #> 1   136        7  7.26    1.27         7.26    0.0297 #> 2   116        7  6.82    1.28         6.82    0.0396 #> 3   135        7  6.66    1.26         6.66    0.0396  # Always report at least 3 clusters: report_top_clusters(scanres, mc_pvalue,                     take_highest = FALSE,                     cutoff_val = 0.05,                     min_reported = 3) #> # A tibble: 3 x 6 #>    zone duration score relrisk action_level mc_pvalue #>   <dbl>    <dbl> <dbl>   <dbl>        <dbl>     <dbl> #> 1   136        7  7.26    1.27         7.26    0.0297 #> 2   116        7  6.82    1.28         6.82    0.0396 #> 3   135        7  6.66    1.26         6.66    0.0396  # First remove overlapping clusters, then report: remove_overlapping_clusters(scanres, zones,                             order_by = mc_pvalue,                             take_highest = FALSE,                             max_overlap_frac = 0.2) %>%   report_top_clusters(mc_pvalue, take_highest = FALSE,                       cutoff_val = 0.05) #> # A tibble: 1 x 6 #>    zone duration score relrisk action_level mc_pvalue #>   <dbl>    <dbl> <dbl>   <dbl>        <dbl>     <dbl> #> 1   136        7  7.26    1.27         7.26    0.0297"},{"path":"/reference/rowmute.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply mutate rowwise — rowmute","title":"Apply mutate rowwise — rowmute","text":"version mutate automatically works row-wise handles list-columns elegantly","code":""},{"path":"/reference/rowmute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply mutate rowwise — rowmute","text":"","code":"rowmute(.data, ...)"},{"path":"/reference/rowmute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply mutate rowwise — rowmute","text":".data data frame data frame extension (e.g. tibble) ... <data-masking> Name-value pairs. name gives name column output. output vector length 1 stored list-column.","code":""},{"path":"/reference/rowmute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply mutate rowwise — rowmute","text":"object type `.data`, modified columns.","code":""},{"path":"/reference/rowmute.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply mutate rowwise — rowmute","text":"mutate extremely powerful function adding transforming variables data frame. However, designed working list-columns, syntax often unwieldy. rowmute wrapper around mutate handles syntax helps avoid pitfalls. rowmute differs mutate 3 ways: rowmute always works one row time. rowmute automatically puts complex output, model fit results, list      columns rowmute can automatically display progress output using      progressr package","code":""},{"path":"/reference/rowmute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply mutate rowwise — rowmute","text":"","code":"library(dplyr) library(tidyr) library(broom) data(mtcars)  by_cyl <- mtcars %>%   nest(data = -cyl)  model_results <- by_cyl %>%   rowmute(mod = lm(mpg ~ wt, data = data),           aug_data = augment(mod, data),           mod_summary = glance(mod))"},{"path":"/reference/scan_bayes_negbin2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","title":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","text":"Calculate \"Bayesian Spatial Scan Statistic\" Neill et al. (2006), adapted spatio-temporal setting. scan_bayes_negbin2  helpful wrapper around scan_bayes_negbin allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_bayes_negbin2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","text":"","code":"scan_bayes_negbin2(   spacetime_data,   outcome_col,   zones,   baseline_col = NULL,   pop_col = NULL,   outbreak_prob = 0.05,   alpha_null = 1,   beta_null = 1,   alpha_alt = alpha_null,   beta_alt = beta_null,   inc_values = seq(1, 3, by = 0.1),   inc_probs = 1 )"},{"path":"/reference/scan_bayes_negbin2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Optional pop_col provided, otherwise required. pop_col Optional. column spacetime_data containing population location/time. Used estimate baseline baseline_col NULL, otherwise ignored. outbreak_prob scalar; probability outbreak (time, place). Defaults 0.05. alpha_null scalar; shape parameter gamma distribution null hypothesis anomaly. Defaults 1. beta_null scalar; scale parameter gamma distribution null hypothesis anomaly. Defaults 1. alpha_alt scalar; shape parameter gamma distribution alternative hypothesis anomaly. Defaults value alpha_null. beta_alt scalar; scale parameter gamma distribution alternative hypothesis anomaly. Defaults value beta_null. inc_values vector possible values increase mean (variance) anomalous count. Defaults evenly spaced values  1 3, difference 0.1 consecutive values. inc_probs vector prior probabilities value  inc_values. Defaults 1, implying discrete uniform  distribution.","code":""},{"path":"/reference/scan_bayes_negbin2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_bayes_negbin2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the negative binomial bayesian scan statistic.. — scan_bayes_negbin2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_bayes_negbin2(NM_data, outcome_col = count, zones,                    baseline_col = baseline_est) #> Data distribution:                negative binomial (Gamma-Poisson mixture) #> Type of scan statistic:           Bayesian #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Overall event probability:        1 #> Probability of event in MLC:      0.277 #> Most likely event duration:       19 #> ID of locations in MLC:           1, 10, 26, 30, 32  scan_bayes_negbin2(NM_data, outcome_col = count, zones,                    pop_col = population) #> Data distribution:                negative binomial (Gamma-Poisson mixture) #> Type of scan statistic:           Bayesian #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Overall event probability:        1 #> Probability of event in MLC:      0.245 #> Most likely event duration:       19 #> ID of locations in MLC:           1, 10, 26, 30, 32  scan_bayes_negbin2(NM_data, outcome_col = count, zones,                    baseline_col = baseline_est,                    outbreak_prob = 0.1) #> Data distribution:                negative binomial (Gamma-Poisson mixture) #> Type of scan statistic:           Bayesian #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Overall event probability:        1 #> Probability of event in MLC:      0.277 #> Most likely event duration:       19 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_cusum_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"Calculate CUSUM alarm statistic large set spatio-temporal zones, described Sonesson (2007).","code":""},{"path":"/reference/scan_cusum_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"","code":"scan_cusum_poisson(   wide_cases,   key_matrix,   wide_baseline,   scaling = 1.5,   n_mcsim = 100 )"},{"path":"/reference/scan_cusum_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. key_matrix matrix specifying locations belong zone. row different zone column location. element (,j) 1 location j part zone 0 otherwise. Can generated list specifying zones using zones_to_key_matrix function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. scaling scalar number > 1. Represents proportional increase number cases beyond wide_baseline event outbreak. wide_baseline number expected cases normal conditions, scaling * wide_baseline number expected cases event outbreak. Used calculate downward drift. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_cusum_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"list , addition information type scan    statistic, following components:  MLC list containing number zone likely            cluster (MLC), locations zone, duration             MLC, calculated score, relative risk. order,             elements list named  zone_number, locations,             duration, score, relative_risk. observed data frame containing, combination zone             duration investigated, zone number, duration, score,             relative risk. table sorted score top-scoring             location top. max_only = TRUE, contains single             row corresponding MLC. replicates data frame Monte Carlo replicates scan             statistic (), corresponding zones durations. MC_pvalue Monte Carlo \\(P\\)-value. Gumbel_pvalue \\(P\\)-value obtained fitting Gumbel             distribution replicate scan statistics. n_zones number zones scanned. n_locations number locations. max_duration maximum duration considered. n_mcsim number Monte Carlo replicates made.","code":""},{"path":"/reference/scan_cusum_poisson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"CUSUM statistic widely used surveillance technique purely temporal processes. calculated taking cumulative sum standard residuals downward drift floor 0. Poisson process \\(x(t)\\) expected value \\(\\lambda\\) expected value ourbreak \\(\\delta\\lambda\\) optimal downward drift \\(k =   \\lambda(\\delta - 1) / (log(\\delta)\\). applied scan statistic, total number cases expected number cases aggregated large number spatial-temporal zones, zone consists one neighboring spatial locations. zone, single CUSUM statistic calculated, incorporating information earliest time point recent. returned value, duration fields refer number time points since CUSUM statistic last equal 0. different behavoir scan-type functions, duration indicates size temporal window.","code":""},{"path":"/reference/scan_cusum_poisson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"Sonesson, C. (2007). CUSUM framework detection space-time disease clusters using scan statistics, Stat Med 26(26): 4770-4789.","code":""},{"path":[]},{"path":"/reference/scan_cusum_poisson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson","text":"","code":"# Apply scan_cusum_poisson to a 3x3 spatial grid with 4 time points # And inject an outbreak into the upper-left corner in the 2 most recent time points library(\"magrittr\") x_coord <- rep(c(1:3), 3) y_coord <- rep(c(1:3), each =3) geo <- matrix(c(x_coord, y_coord), ncol = 2, byrow = FALSE) zones <- geo %>%   scanstatistics::coords_to_knn(k = 4) %>%   scanstatistics::knn_zones() key_matrix <- zones_to_key_matrix(zones) outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- scan_cusum_poisson(wide_cases, key_matrix, wide_baseline,                               scaling = 1.5,                               n_mcsim = 10)"},{"path":"/reference/scan_cusum_poisson2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","text":"Calculate CUSUM alarm statistic large set spatio-temporal zones, described Sonesson (2007). scan_cusum_poisson2 helpful wrapper around scan_cusum_poisson allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_cusum_poisson2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","text":"","code":"scan_cusum_poisson2(   spacetime_data,   outcome_col,   zones,   baseline_col,   scaling = 1.5,   n_mcsim = 10 )"},{"path":"/reference/scan_cusum_poisson2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Optional pop_col provided, otherwise required. scaling scalar number > 1. Represents proportional increase number cases beyond wide_baseline event outbreak. wide_baseline number expected cases normal conditions, scaling * wide_baseline number expected cases event outbreak. Used calculate downward drift. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_cusum_poisson2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_cusum_poisson2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the CUSUM statistic over a set of spatial-temporal zones — scan_cusum_poisson2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_cusum_poisson2(NM_data, outcome_col = count, zones,                     baseline_col = baseline_est) #> Data distribution:                Poisson #> Type of scan statistic:           cusum-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 10 #> Monte Carlo P-value:              0.182 #> Gumbel P-value:                   NULL #> Most likely event duration:       6 #> ID of locations in MLC:           15, 26  scan_cusum_poisson2(NM_data, outcome_col = count, zones,                     baseline_col = baseline_est,                     scaling = 1.25,                     n_mcsim = 99) #> Data distribution:                Poisson #> Type of scan statistic:           cusum-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_eb_negbin2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","title":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","text":"Calculate expectation-based scan statistic using negative binomial distribution, devised Tango et al. (2011). scan_eb_negbin2 helpful wrapper around scan_eb_negbin allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_eb_negbin2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","text":"","code":"scan_eb_negbin2(   spacetime_data,   outcome_col,   zones,   baseline_col,   theta_col = 1,   type = c(\"hotspot\", \"emerging\"),   n_mcsim = 10,   gumbel = FALSE,   max_only = FALSE )"},{"path":"/reference/scan_eb_negbin2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Typically estimated past data using model. theta_col dispersion parameter negative binomial distribution. value theta increases, negative binomial distribution approaches Poisson distribution. parameter typically estimates past data using model. Can specified either scalar column spacetime_data. type string, either \"hotspot\" \"emerging\". \"hotspot\", relative risk assumed fixed time. \"emerging\", relative risk assumed increase duration outbreak. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value. gumbel Logical: Gumbel P-value calculated? Default FALSE. max_only Boolean. FALSE (default) statistic calculated zone duration returned. TRUE, largest  statistic (.e. scan statistic) returned, along  corresponding zone duration.","code":""},{"path":"/reference/scan_eb_negbin2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_eb_negbin2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based negative binomial scan statistic. — scan_eb_negbin2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_eb_negbin2(NM_data, outcome_col = count, zones,                 baseline_col = baseline_est, theta_col = 1,                 n_mcsim = 99) #> Data distribution:                negative binomial #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.73 #> Gumbel P-value:                   NULL #> Most likely event duration:       2 #> ID of locations in MLC:           20  NM_data$thetas <- sqrt(NM_data$count) + 0.1 scan_eb_negbin2(NM_data, outcome_col = count, zones,                 baseline_col = baseline_est, theta_col = thetas,                 type = \"emerging\",                 n_mcsim = 99) #> Data distribution:                negative binomial #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.74 #> Gumbel P-value:                   NULL #> Most likely event duration:       1 #> ID of locations in MLC:           27"},{"path":"/reference/scan_eb_negbin_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"Calculate expectation-based scan statistic using negative binomial distribution, devised Tango et al. (2011). Note although implemenation based given scanstatistics package, gives different results. addition, implementation typically 10-40x faster original implementation.","code":""},{"path":"/reference/scan_eb_negbin_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"","code":"scan_eb_negbin_fast(   wide_cases,   key_matrix,   wide_baseline,   thetas = 1,   n_mcsim = 0 )"},{"path":"/reference/scan_eb_negbin_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. key_matrix matrix specifying locations belong zone. row different zone column location. element (,j) 1 location j part zone 0 otherwise. Can generated list specifying zones using zones_to_key_matrix function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. thetas Optional. matrix dimensions counts,  scalar. Holds dispersion parameter distribution,  \\(\\mu\\) expected value, variance  \\(\\mu+\\mu^2/\\theta\\). parameters typically estimated past  data using e.g. GLM. scalar supplied, dispersion parameter  assumed locations time points. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_eb_negbin_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"list , addition information type scan    statistic, following components:  MLC list containing number zone likely            cluster (MLC), locations zone, duration             MLC, calculated score. order,             elements list named  zone_number, locations,             duration, score. observed data frame containing, combination zone             duration investigated, zone number, duration, score.             table sorted score top-scoring location top.             max_only = TRUE, contains single row             corresponding MLC. replicates data frame Monte Carlo replicates scan             statistic (), corresponding zones durations. MC_pvalue Monte Carlo \\(P\\)-value. Gumbel_pvalue \\(P\\)-value obtained fitting Gumbel             distribution replicate scan statistics. n_zones number zones scanned. n_locations number locations. max_duration maximum duration considered. n_mcsim number Monte Carlo replicates made.","code":""},{"path":"/reference/scan_eb_negbin_fast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"\\(n\\) number cases, \\(\\mu\\) expected number, \\(\\omega\\) overispersion, score zone $$S = (n-\\mu)/\\omega * 1/\\sqrt(\\mu/\\omega)$$ scores reported scan_eb_negbin include square root denominator.","code":""},{"path":"/reference/scan_eb_negbin_fast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"Tango, T., Takahashi, K. & Kohriyama, K. (2011), space-time scan    statistic detecting emerging outbreaks, Biometrics 67(1), 106â€“115.","code":""},{"path":[]},{"path":"/reference/scan_eb_negbin_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast","text":"","code":"#Apply scan_eb_negbin_fast to a 3x3 spatial grid with 4 time points #And inject an outbreak into the upper-left corner in the 2 most recent time points library(\"magrittr\") x_coord <- rep(c(1:3), 3) y_coord <- rep(c(1:3), each =3) geo <- matrix(c(x_coord, y_coord), ncol = 2, byrow = FALSE) zones <- geo %>%   scanstatistics::coords_to_knn(k = 4) %>%   scanstatistics::knn_zones() key_matrix <- zones_to_key_matrix(zones) outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- scan_eb_negbin_fast(wide_cases, key_matrix, wide_baseline,                                n_mcsim = 10, thetas = 2)"},{"path":"/reference/scan_eb_negbin_fast2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","text":"Calculate expectation-based scan statistic using negative binomial distribution, devised Tango et al. (2011). Note although implementation based given scanstatistics package, gives different results. scan_eb_negbin_fast2 helpful wrapper around scan_eb_negbin_fast allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_eb_negbin_fast2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","text":"","code":"scan_eb_negbin_fast2(   spacetime_data,   outcome_col,   zones,   baseline_col,   theta_col = 1,   n_mcsim = 0 )"},{"path":"/reference/scan_eb_negbin_fast2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Required scan_eb_negbin_fast2. theta_col dispersion parameter negative binomial distribution. value theta increases, negative binomial distribution approaches Poisson distribution. parameter typically estimates past data using model. Can specified either scalar column spacetime_data. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_eb_negbin_fast2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_eb_negbin_fast2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based negative binomial scan statistic via linear algebra — scan_eb_negbin_fast2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_eb_negbin_fast2(NM_data, outcome_col = count, zones,                      baseline_col = baseline_est, theta_col = 1,                      n_mcsim = 99) #> Data distribution:                negative binomial #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.81 #> Gumbel P-value:                   NULL #> Most likely event duration:       2 #> ID of locations in MLC:           20  NM_data$thetas <- sqrt(NM_data$count) + 0.1 scan_eb_negbin_fast2(NM_data, outcome_col = count, zones,                      baseline_col = baseline_est, theta_col = thetas,                      n_mcsim = 99) #> Data distribution:                negative binomial #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.92 #> Gumbel P-value:                   NULL #> Most likely event duration:       14 #> ID of locations in MLC:           6, 10, 20, 25, 30"},{"path":"/reference/scan_eb_poisson2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","title":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","text":"Calculate expectation-based Poisson scan statistic using data frames. scan_eb_poisson2 helpful wrapper around scan_eb_poisson allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_eb_poisson2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","text":"","code":"scan_eb_poisson2(   spacetime_data,   outcome_col,   zones,   baseline_col = NULL,   pop_col = NULL,   n_mcsim = 10,   gumbel = FALSE,   max_only = FALSE )"},{"path":"/reference/scan_eb_poisson2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Optional pop_col provided, otherwise required. pop_col Optional. column spacetime_data containing population location/time. Used estimate baseline baseline_col NULL, otherwise ignored. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value. gumbel Logical: Gumbel P-value calculated? Default FALSE. max_only Boolean. FALSE (default) log-likelihood ratio statistic zone duration returned. TRUE, largest statistic (.e. scan statistic) returned, along corresponding zone duration.","code":""},{"path":"/reference/scan_eb_poisson2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_eb_poisson2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based Poisson scan statistic. — scan_eb_poisson2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_eb_poisson2(NM_data, outcome_col = count, zones,                  baseline_col = baseline_est, n_mcsim = 100) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 100 #> Monte Carlo P-value:              0.069 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32 scan_eb_poisson2(NM_data, outcome_col = count, zones,                  pop_col = population, n_mcsim = 100, gumbel = TRUE) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 100 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   0 #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_eb_poisson_fast.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"Calculate expectation-based scan statistic using Poisson distribution, devised Neill (2009). function give identical results calculated scan_eb_poisson, significantly faster scanning large areas.","code":""},{"path":"/reference/scan_eb_poisson_fast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"","code":"scan_eb_poisson_fast(wide_cases, key_matrix, wide_baseline, n_mcsim)"},{"path":"/reference/scan_eb_poisson_fast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"wide_cases matrix observed counts. Rows indicate time ordered least recent (row 1) recent (row nrow(counts)). Columns indicate locations, numbered 1 . Can generated data.frame pivot_for_scan function. key_matrix matrix specifying locations belong zone. row different zone column location. element (,j) 1 location j part zone 0 otherwise. Can generated list specifying zones using zones_to_key_matrix function. wide_baseline matrix dimensions wide_cases, holding expected value cases space-time location.value typically estimated past data using GLM model. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_eb_poisson_fast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"list , addition information type scan    statistic, following components:  MLC list containing number zone likely            cluster (MLC), locations zone, duration             MLC, calculated score, relative risk. order,             elements list named  zone_number, locations,             duration, score, relative_risk. observed data frame containing, combination zone             duration investigated, zone number, duration, score,             relative risk. table sorted score top-scoring             location top. max_only = TRUE, contains single             row corresponding MLC. replicates data frame Monte Carlo replicates scan             statistic (), corresponding zones durations. MC_pvalue Monte Carlo \\(P\\)-value. Gumbel_pvalue \\(P\\)-value obtained fitting Gumbel             distribution replicate scan statistics. n_zones number zones scanned. n_locations number locations. max_duration maximum duration considered. n_mcsim number Monte Carlo replicates made.","code":""},{"path":"/reference/scan_eb_poisson_fast.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"Neill, D. B., Moore, . W., Sabhnani, M. Daniel, K. (2005).     Detection emerging space-time clusters. Proceeding     eleventh ACM SIGKDD international conference Knowledge discovery     data mining - KDD â€™05, 218.","code":""},{"path":[]},{"path":"/reference/scan_eb_poisson_fast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast","text":"","code":"# Apply scan_eb_poisson_fast to a 3x3 spatial grid with 4 time points # And inject an outbreak into the upper-left corner in the 2 most recent time points library(\"magrittr\") x_coord <- rep(c(1:3), 3) y_coord <- rep(c(1:3), each =3) geo <- matrix(c(x_coord, y_coord), ncol = 2, byrow = FALSE) zones <- geo %>%   scanstatistics::coords_to_knn(k = 4) %>%   scanstatistics::knn_zones() key_matrix <- zones_to_key_matrix(zones) outbreak_sp <- c(1, 2, 4, 5) outbreak_tm <- c(3, 4) wide_cases <- matrix(2, nrow = 4, ncol = 9) wide_cases[outbreak_tm, outbreak_sp] <- 5 wide_cases[c(3, 4), c(8, 9)] <- 2.5 wide_baseline <- matrix(2, nrow = 4, ncol = 9) scanres <- scan_eb_poisson_fast(wide_cases, key_matrix, wide_baseline,                                 n_mcsim = 10)"},{"path":"/reference/scan_eb_poisson_fast2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","text":"Calculate expectation-based scan statistic using Poisson distribution, devised Neill (2009). scan_eb_poisson_fast2 helpful wrapper around scan_eb_poisson_fast allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_eb_poisson_fast2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","text":"","code":"scan_eb_poisson_fast2(   spacetime_data,   outcome_col,   zones,   baseline_col,   n_mcsim = 10 )"},{"path":"/reference/scan_eb_poisson_fast2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Required scan_eb_poisson_fast2. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value.","code":""},{"path":"/reference/scan_eb_poisson_fast2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_eb_poisson_fast2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based Poisson scan statistic via linear algebra — scan_eb_poisson_fast2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_eb_poisson_fast2(NM_data, outcome_col = count, zones,                       baseline_col = baseline_est, n_mcsim = 99) #> Data distribution:                Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_eb_zip2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","title":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","text":"Calculates expectation-based scan statistic zero-inflated Poisson distribution. scan_eb_zip2 helpful wrapper around scan_eb_zip allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_eb_zip2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","text":"","code":"scan_eb_zip2(   spacetime_data,   outcome_col,   zones,   baseline_col = NULL,   prob_col = NULL,   pop_col = NULL,   n_mcsim = 10,   gumbel = FALSE,   max_only = FALSE,   rel_tol = 0.001 )"},{"path":"/reference/scan_eb_zip2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. baseline_col column data containing baseline estimates outcome interest. Optional pop_col provided, otherwise required. prob_col column spacetime_data containing structural zero probability ZIP distribution space time. Can alternatively specified scalar, structural zero probability constant. Optional; provided, estimated heuristically. pop_col Optional. column spacetime_data containing population location/time. Used estimate baseline strucutural zero probabilitiy baseline_col prob_col NULL, otherwise ignored. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value. gumbel Logical: Gumbel P-value calculated? Default FALSE. max_only Boolean. FALSE (default) log-likelihood ratio statistic zone duration returned. TRUE, largest statistic (.e. scan statistic) returned, along corresponding zone duration. rel_tol positive scalar. relative change incomplete information likelihood less value, EM algorithm deemed converged.","code":""},{"path":"/reference/scan_eb_zip2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_eb_zip2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the expectation-based ZIP scan statistic. — scan_eb_zip2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_eb_zip2(NM_data, outcome_col = count, zones,              baseline_col = baseline_est, prob_col = NULL,              n_mcsim = 99) #> Warning: baselines and/or probs not supplied. Estimating ZIP parameters in heuristic fashion. #> Data distribution:                zero-inflated Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   NULL #> Most likely event duration:       19 #> ID of locations in MLC:           30  scan_eb_zip2(NM_data, outcome_col = count, zones,              baseline_col = baseline_est, prob_col = 0.2,              n_mcsim = 99) #> Data distribution:                zero-inflated Poisson #> Type of scan statistic:           expectation-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.02 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_pb_poisson2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","title":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","text":"Calculate population-based Poisson scan statistic devised Kulldorff (1997, 2001). scan_pb_poisson2 helpful wrapper around scan_pb_poisson allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_pb_poisson2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","text":"","code":"scan_pb_poisson2(   spacetime_data,   outcome_col,   zones,   pop_col = NULL,   n_mcsim = 10,   gumbel = FALSE,   max_only = FALSE )"},{"path":"/reference/scan_pb_poisson2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. pop_col Optional. column spacetime_data containing population location/time. necessary want account different population location time. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value. gumbel Logical: Gumbel P-value calculated? Default FALSE. max_only Boolean. FALSE (default) log-likelihood ratio statistic zone duration returned. TRUE, largest statistic (.e. scan statistic) returned, along corresponding zone duration.","code":""},{"path":"/reference/scan_pb_poisson2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_pb_poisson2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the population-based Poisson scan statistic. — scan_pb_poisson2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_pb_poisson2(NM_data, outcome_col = count, zones,                  n_mcsim = 99) #> Data distribution:                Poisson #> Type of scan statistic:           population-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.99 #> Gumbel P-value:                   NULL #> Most likely event duration:       2 #> ID of locations in MLC:           20  scan_pb_poisson2(NM_data, outcome_col = count, zones,                  pop_col = population,                  n_mcsim = 99) #> Data distribution:                Poisson #> Type of scan statistic:           population-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.01 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/scan_permutation2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the space-time permutation scan statistic. — scan_permutation2","title":"Calculate the space-time permutation scan statistic. — scan_permutation2","text":"Calculate space-time permutation scan statistic devised Kulldorff (2005). scan_permutation2 helpful wrapper around scan_permutation allowing data passed single long data frame, instead series wide matrices.","code":""},{"path":"/reference/scan_permutation2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the space-time permutation scan statistic. — scan_permutation2","text":"","code":"scan_permutation2(   spacetime_data,   outcome_col,   zones,   pop_col = NULL,   n_mcsim = 0,   gumbel = FALSE,   max_only = FALSE )"},{"path":"/reference/scan_permutation2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the space-time permutation scan statistic. — scan_permutation2","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. outcome_col column spacetime_data containing outcome interest, observed counts zones list integer vectors. vector corresponds single zone; elements numbers locations zone. pop_col Optional. column spacetime_data containing population location/time. necessary want account different population location time. n_mcsim non-negative integer; number replicate scan statistics generate order calculate \\(P\\)-value. gumbel Logical: Gumbel P-value calculated? Default FALSE. max_only Boolean. FALSE (default) log-likelihood ratio statistic zone duration returned. TRUE, largest statistic (.e. scan statistic) returned, along corresponding zone duration.","code":""},{"path":"/reference/scan_permutation2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the space-time permutation scan statistic. — scan_permutation2","text":"object class scanstatistics, containing information type scan statistic, likely cluster (MLC), calculated scan statistics every zone duration investigated.","code":""},{"path":[]},{"path":"/reference/scan_permutation2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the space-time permutation scan statistic. — scan_permutation2","text":"","code":"library(sf) data(\"NM_data\") data(\"NM_county_sf\") zones <- create_zones(NM_county_sf, max_k = 5) scan_permutation2(NM_data, outcome_col = count, zones,                   n_mcsim = 99) #> Data distribution:                non-parametric #> Type of scan statistic:           population-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.71 #> Gumbel P-value:                   NULL #> Most likely event duration:       2 #> ID of locations in MLC:           20  scan_permutation2(NM_data, outcome_col = count, zones,                   pop_col = population,                   n_mcsim = 99) #> Data distribution:                non-parametric #> Type of scan statistic:           population-based #> Setting:                          univariate #> Number of locations considered:   32 #> Maximum duration considered:      19 #> Number of spatial zones:          144 #> Number of Monte Carlo replicates: 99 #> Monte Carlo P-value:              0.5 #> Gumbel P-value:                   NULL #> Most likely event duration:       7 #> ID of locations in MLC:           1, 10, 26, 30, 32"},{"path":"/reference/spacetime_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data frames including information on space and time — spacetime_data","title":"Data frames including information on space and time — spacetime_data","text":"Data frames including information space time","code":""},{"path":"/reference/spacetime_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Data frames including information on space and time — spacetime_data","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values.","code":""},{"path":"/reference/statsurv.html","id":null,"dir":"Reference","previous_headings":"","what":"statsurv: A package for developing and performing statistical surveillance — statsurv","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"Statistical surveillance sort systematic, ongoing analysis aimed detecting changes outcomes occur.  amount data reported large significant natural variability rate case events, statistical techniques can extremely helpful determining change number events important, merely noise.  statsurv package designed help designing statistical surveillance system implementing routine use. One key part making easy apply statistical surveillance varying \"windows\" data, mimic process routinely implementing surveillance technique time. allows performance different statistical surveillance methods compared evaluated.","code":""},{"path":"/reference/statsurv.html","id":"overview","dir":"Reference","previous_headings":"","what":"Overview","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"statsurv package designed performing statistical surveillance developing evaluating statistical surveillance methods. Typically, conduct statistical surveillance, need collect aggregate measurements variable interest, compare measurements baseline estimate, typically generated model. process repeated additional measurements collected time. functions package fall 5 main categories: Functions preparing data analysis Functions making easier generate predictions models Functions comparing outcomes baseline estimates (scan statistic functions) Functions used generate reports summaries surveillance outcomes Functions applying previous functions varying data windows developing statistical surveillance system scratch, generally first steps collect analyze data, compare model, run scan statistic generate results. first four categories functions used process. , process must repeated varying data windows see system performed routine use since data collection began. can performance system, including average time detect simulated cluster average rate false alarms, evaluated.","code":""},{"path":[]},{"path":"/reference/statsurv.html","id":"key-functions-","dir":"Reference","previous_headings":"","what":"Key functions:","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"validate_spacetime_data pad_spacetime_data calculate_surveillance_residuals collapse_all create_zones prepare_training_data pivot_for_scan","code":""},{"path":[]},{"path":"/reference/statsurv.html","id":"key-functions--1","dir":"Reference","previous_headings":"","what":"Key functions:","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"extract_yhat arima_tidy glance_inla tidy_inla","code":""},{"path":[]},{"path":"/reference/statsurv.html","id":"key-functions--2","dir":"Reference","previous_headings":"","what":"Key functions:","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"parallel_cusum_gaussian parallel_cusum_gaussian2 parallel_cusum_poisson parallel_cusum_poisson2 parallel_shewhart_gaussian parallel_shewhart_gaussian2 scan_eb_negbin_fast scan_eb_negbin_fast2 scan_eb_poisson_fast scan_eb_poisson_fast2 scan_cusum_poisson scan_bayes_negbin2 scan_pb_poisson2 scan_eb_poisson2 scan_eb_zip2 scan_permutation2 scan_eb_negbin2 scan_bayes_negbin2 scan_cusum_poisson scan_bayes_negbin2","code":""},{"path":[]},{"path":"/reference/statsurv.html","id":"key-functions--3","dir":"Reference","previous_headings":"","what":"Key functions:","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"report_top_clusters remove_overlapping_clusters","code":""},{"path":[]},{"path":"/reference/statsurv.html","id":"key-functions--4","dir":"Reference","previous_headings":"","what":"Key functions:","title":"statsurv: A package for developing and performing statistical surveillance — statsurv","text":"rowmute window_idtime prepare_training_data","code":""},{"path":"/reference/switch_zone_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"Change how spatial zones are represented — switch_zone_rep","title":"Change how spatial zones are represented — switch_zone_rep","text":"Scan-type alarm functions work computing alarm function large number spatial zones, zone consists one neighboring spatial locations. Information spatial locations belong zone can specified form list, entry list contains indexes locations particular zone, form matrix, row represents zone column represents location. set zones can generated using create_zones function, conversion list- matrix-representation zones accomplished functions zones_to_key_matrix key_matrix_to_zones.","code":""},{"path":"/reference/switch_zone_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change how spatial zones are represented — switch_zone_rep","text":"","code":"zones_to_key_matrix(zones)  key_matrix_to_zones(key_matrix)"},{"path":"/reference/switch_zone_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change how spatial zones are represented — switch_zone_rep","text":"zones list entry zone. entry vector containing indices spatial locations zone. key_matrix matrix, row zone column location. entry [, j] 1 location j part zone 0 otherwise.","code":""},{"path":"/reference/switch_zone_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Change how spatial zones are represented — switch_zone_rep","text":"zones_to_key_matrix, matrix. increase speed, matrix represented sparse matrix Matrix package. create_zones, key_matrix_to_zones list zones.","code":""},{"path":[]},{"path":"/reference/switch_zone_rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Change how spatial zones are represented — switch_zone_rep","text":"","code":"library(\"sf\") data(\"NM_county_sf\")  zones <- create_zones(NM_county_sf, max_k = 5) key_matrix <- zones_to_key_matrix(zones)  zones <- key_matrix_to_zones(key_matrix)"},{"path":"/reference/tidy_inla.html","id":null,"dir":"Reference","previous_headings":"","what":"Report information about the components of an INLA model — tidy_inla","title":"Report information about the components of an INLA model — tidy_inla","text":"tidy summarizes information components model. tidy_inla adapts INLA models.","code":""},{"path":"/reference/tidy_inla.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report information about the components of an INLA model — tidy_inla","text":"","code":"tidy_inla(fit, include_random = FALSE)"},{"path":"/reference/tidy_inla.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report information about the components of an INLA model — tidy_inla","text":"fit model fit object generated INLA. include_random Boolean. information random effects included results?","code":""},{"path":"/reference/tidy_inla.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report information about the components of an INLA model — tidy_inla","text":"data frame containing estimates standard errors coefficients fit, one row per coefficient. result always contain results fixed effects hyperparameters. include_random = TRUE, result also include random effects, individual effects iid BYM model. data frame contains columns \"term\", \"estimate\", \"std.error\", \"statistic\", \"p.value\", \"type\".","code":""},{"path":[]},{"path":"/reference/tidy_inla.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report information about the components of an INLA model — tidy_inla","text":"","code":"x <- rnorm(20, mean = 0, sd = 3) y <- 1.3 + 2.5 * x + rnorm(20, sd = 1) df <- data.frame(x = x, y = y)  if (FALSE) { fit_inla <- INLA::inla(y ~ x, data = df) tidy_inla(fit_inla)  data(NM_data) fit_inla <- INLA::inla(count ~ population + f(county, model = \"iid\"),                        data = NM_data) tidy_inla(fit_inla, include_random = TRUE) }"},{"path":"/reference/unlist_scalars.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert list columns back to regular columns where possible — unlist_scalars","title":"Convert list columns back to regular columns where possible — unlist_scalars","text":"Given data frame, convert list columns containing atomic scalars regular columns. grouping structure data frame preserved.","code":""},{"path":"/reference/unlist_scalars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert list columns back to regular columns where possible — unlist_scalars","text":"","code":"unlist_scalars(df)"},{"path":"/reference/unlist_scalars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert list columns back to regular columns where possible — unlist_scalars","text":"df data frame data frame extension. Can grouped.","code":""},{"path":"/reference/unlist_scalars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert list columns back to regular columns where possible — unlist_scalars","text":"data frame column names grouping structure input.","code":""},{"path":"/reference/unlist_scalars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert list columns back to regular columns where possible — unlist_scalars","text":"","code":"# Create a data frame with some list columns df <- tibble::tibble(x = c(1, 2, 3),                      y = list(\"A\", \"B\", \"C\"),                      z = list(14, 201, c(99, 45)))  # Converts y into a regular column, leaves z as a list column unlist_scalars(df) #> # A tibble: 3 x 3 #>       x y     z         #>   <dbl> <chr> <list>    #> 1     1 A     <dbl [1]> #> 2     2 B     <dbl [1]> #> 3     3 C     <dbl [2]>"},{"path":"/reference/validate_spacetime_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"statsurv package represents spacetime data ordinary data frames follow specific conventions. data frames must contain columns id_space id_time, set consecutive integers. column id_time identifies time point associated row data frame, lower numbers earlier higher numbers later. column id_space identifies spatial location area associated row. specific values id_space assumed meaning order beyond identification.","code":""},{"path":"/reference/validate_spacetime_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"","code":"validate_spacetime_data(df)"},{"path":"/reference/validate_spacetime_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"df data frame validate","code":""},{"path":"/reference/validate_spacetime_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"Throws error data frame valid spacetime data frame. Otherwise, returns df, invisibly.","code":""},{"path":"/reference/validate_spacetime_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"valid spacetime data frame, following must true: data frame must contain columns id_time id_space. entires columns must consecutive integers combinations id_time id_space must associated 1 row.","code":""},{"path":"/reference/validate_spacetime_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check that a data frame is formatted as a valid spacetime data frame — validate_spacetime_data","text":"","code":"valid_data <- data.frame(id_space = c(1, 2, 1, 2), id_time = c(1, 1, 2, 2), y = c(0.4, 0.5, 0.7, 0.8))  validate_spacetime_data(valid_data)  if (FALSE) {   invalid_data <- data.frame(id_space = c(1, 2.5, 1, 2.5),                              id_time = c(1, 1, 2, 2),                              y = c(-1, -2, -0.5, -8))   #Gives an error   validate_spacetime_data(invalid_data) }"},{"path":"/reference/window_idtime.html","id":null,"dir":"Reference","previous_headings":"","what":"Divide data into overlapping windows — window_idtime","title":"Divide data into overlapping windows — window_idtime","text":"function divides dataframe overlapping time windows, preparation repeatedly applying statistical surveillance methods. window consists 0 data points fit statistical model , 0 points generate predictions .","code":""},{"path":"/reference/window_idtime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Divide data into overlapping windows — window_idtime","text":"","code":"window_idtime(   spacetime_data,   min_train,   max_train = Inf,   n_predict = 1,   step = 1,   split_spatial_locations = FALSE )"},{"path":"/reference/window_idtime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Divide data into overlapping windows — window_idtime","text":"spacetime_data data frame data frame extension (e.g., tibble) includes columns `id_space` `id_time` set consecutive integers. column `id_time` identifies time point associated row, lower numbers earlier higher numbers later. column `id_space` identifies spatial location area associated row, meaning order ascribed values. min_train, max_train minimum maximum number time points (identified id_time) include training data set. Times fewer number time points included windows. Later times include time points training data set, maximum number identified max_train. n_predict number time points (identified id_time) predictions generated . step often window generated? Default 1, window generated every value id_time. split_spatial_locations Whether spatial area (identified id_space) located data window (split_spatial_locations = TRUE) included one window (split_spatial_locations = \"FALSE\").","code":""},{"path":"/reference/window_idtime.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Divide data into overlapping windows — window_idtime","text":"tibble one row per data window, containing columns id_time, id_space, split_id, curr_data. id_time id_space identify time point defining end time point spatial area areas associated data window.  split_id first time point data window prediction set. data window stored curr_data column. difference windowed data data training set prediction set, information used statsurv functions.","code":""},{"path":"/reference/window_idtime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Divide data into overlapping windows — window_idtime","text":"","code":"x = rnorm(100) spacetime_data <- data.frame(id_space = rep(1:10, each = 10),                              id_time = rep(1:10, 10),                              x = x,                              y = 2.04 * x + 1.23)  # Create overlapping groups of data with at least 4 time points # and up to 8 time points in the # training set, and 2 time points in the prediction set. window_idtime(spacetime_data, min_train = 4, max_train = 8,               n_predict = 2, split_spatial_locations = TRUE) #> # A tibble: 50 x 4 #>    window_time_id window_space_id split_id curr_data        #>             <int>           <int>    <dbl> <list>           #>  1              6               1        5 <tibble [6 x 4]> #>  2              6               2        5 <tibble [6 x 4]> #>  3              6               3        5 <tibble [6 x 4]> #>  4              6               4        5 <tibble [6 x 4]> #>  5              6               5        5 <tibble [6 x 4]> #>  6              6               6        5 <tibble [6 x 4]> #>  7              6               7        5 <tibble [6 x 4]> #>  8              6               8        5 <tibble [6 x 4]> #>  9              6               9        5 <tibble [6 x 4]> #> 10              6              10        5 <tibble [6 x 4]> #> # ... with 40 more rows  # The same, but put each spatial area in its own window window_idtime(spacetime_data, min_train = 4, max_train = 8,               n_predict = 2, split_spatial_locations = TRUE) #> # A tibble: 50 x 4 #>    window_time_id window_space_id split_id curr_data        #>             <int>           <int>    <dbl> <list>           #>  1              6               1        5 <tibble [6 x 4]> #>  2              6               2        5 <tibble [6 x 4]> #>  3              6               3        5 <tibble [6 x 4]> #>  4              6               4        5 <tibble [6 x 4]> #>  5              6               5        5 <tibble [6 x 4]> #>  6              6               6        5 <tibble [6 x 4]> #>  7              6               7        5 <tibble [6 x 4]> #>  8              6               8        5 <tibble [6 x 4]> #>  9              6               9        5 <tibble [6 x 4]> #> 10              6              10        5 <tibble [6 x 4]> #> # ... with 40 more rows"}]
