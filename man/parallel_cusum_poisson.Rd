% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel_cusum.R
\name{parallel_cusum_poisson}
\alias{parallel_cusum_poisson}
\title{Calculate the Poisson CUSUM statistic over multiple spatial regions}
\usage{
parallel_cusum_poisson(wide_cases, wide_baseline, scaling = 1.5)
}
\arguments{
\item{wide_cases}{A matrix of observed counts. Rows indicate time and are ordered from least
recent (row 1) to most recent (row \code{nrow(counts)}). Columns indicate locations, numbered from 1
and up. Can be generated from a data.frame with the \code{\link{pivot_for_scan}} function.}

\item{wide_baseline}{A matrix of the same dimensions as \code{wide_cases}, holding the expected value
of cases at each space-time location.This value is typically estimated from past data using a
GLM or other model.}

\item{scaling}{The expected proportional increase in the number of cases  above \code{wide_baseline}
in the event of an outbreak. If \code{wide_baseline} is the number of expected cases under normal
conditions, then \code{scaling * wide_baseline} is the number of expected cases in the event of an
outbreak. \code{scaling} can be a scalar, a vector with a separate value for each spatial region, or
a matrix the same dimensions as \code{wide_cases}}
}
\value{
A matrix with the same dimensions as \code{wide_cases}, where rows indicate time (oldest to
newst) and columns indicate locations. Element \verb{(i, j) } indicates the value of the CUSUM
statistic at time \code{i} in region \code{j}. The value of the CUSUM statistic at row \code{i} incorporates
informations from time points \code{1} thought \code{i}.
}
\description{
\code{parallel_cusum_poisson} calculates the Poisson CUSUM statistic independently over
each spatial region, over all time points. Unlike \code{\link{scan_cusum_poisson}}, information
from multiple spatial regions is never aggregated.
}
\details{
The CUSUM statistic is widely used surveillance technique for purely temporal processes.
It is calculated by taking the cumulative sum of the standard residuals with a downward drift
and a floor of 0. For a Poisson process \eqn{x(t)} with expected value \eqn{\lambda} and an
expected value during an ourbreak of \eqn{\delta\lambda} the optimal downward drift is \eqn{k =
  \lambda(\delta - 1) / (log(\delta)}.
}
\examples{
outbreak_sp <- c(1, 2, 4, 5)
outbreak_tm <- c(3, 4)
wide_cases <- matrix(2, nrow = 4, ncol = 9)
wide_cases[outbreak_tm, outbreak_sp] <- 5
wide_cases[c(3, 4), c(8, 9)] <- 2.5
wide_baseline <- matrix(2, nrow = 4, ncol = 9)
scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,
                                  scaling = 1.5)

v_scaling <- c(rep(1.5, 8), 3) # Special scaling for region 9
scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,
                                  scaling = v_scaling)


m_scaling <- matrix(1.5, nrow = 4, ncol = 9)
m_scaling[4, 1] <- 3
scanres <- parallel_cusum_poisson(wide_cases, wide_baseline,
                                  scaling = m_scaling)
}
\seealso{
\code{\link{scan_cusum_poisson}}, \code{\link{pivot_for_scan}},
\code{\link{build_key_matrix}}, \code{\link{parallel_cusum_gaussian}}
}
