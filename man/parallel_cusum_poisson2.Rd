% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parallel2.R
\name{parallel_cusum_poisson2}
\alias{parallel_cusum_poisson2}
\title{Calculate the Poisson CUSUM statistic over multiple spatial regions}
\usage{
parallel_cusum_poisson2(
  spacetime_data,
  outcome_col,
  baseline_col,
  scaling = 1.5
)
}
\arguments{
\item{spacetime_data}{A data frame or a data frame extension (e.g., a tibble) that includes
columns `id_space` and `id_time` that are each a set of consecutive integers. The column
`id_time` identifies the time point associated with each row, with lower numbers being earlier
and higher numbers being later. The column `id_space` identifies the spatial location or area
associated with each row, but no meaning or order is ascribed to the values.}

\item{outcome_col}{The column in \code{data} containing the outcome of interest, such as observed counts}

\item{baseline_col}{The column in \code{data} containing baseline estimates of the outcome
of interest.}

\item{scaling}{The expected proportional increase in the number of cases above \code{baseline}
in the event of an outbreak. If \code{baseline} is the number of expected cases under normal
conditions, then \code{scaling * baseline} is the number of expected cases in the event of an
outbreak. \code{scaling} can either be a scalar value or a column in \code{spacetime_data}.}
}
\value{
\code{spacetime_data} with the added column \code{.action_level} containing the value of the CUSUM
statistic at that point and time.
}
\description{
\code{parallel_cusum_poisson} calculates the Poisson CUSUM statistic independently over each spatial
region, over all time points. Each spatial region is considered independently.
}
\details{
The CUSUM statistic is widely used surveillance technique for purely temporal processes.
It is calculated by taking the cumulative sum of the standard residuals with a downward drift
and a floor of 0. For a Poisson process \eqn{x(t)} with expected value \eqn{\lambda} and an
expected value during an ourbreak of \eqn{\delta\lambda} the optimal downward drift is \eqn{k =
  \lambda(\delta - 1) / (log(\delta)}.
}
\examples{
data(NM_data)

parallel_cusum_poisson2(NM_data, count, baseline_est)
parallel_cusum_poisson2(NM_data, count,
                        population * mean(count) / mean(population), scaling = 2)
}
\seealso{
parallel_cusum_poisson

Other parallel2_alarms: 
\code{\link{parallel_cusum_gaussian2}()},
\code{\link{parallel_shewhart_gaussian2}()}
}
\concept{parallel2_alarms}
