% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/collapse.R
\name{collapse_all}
\alias{collapse_all}
\title{Merge rows from each group into a list}
\usage{
collapse_all(
  df,
  combine_dfs = TRUE,
  unique_only = FALSE,
  unlist_scalars = TRUE,
  .groups = NULL
)
}
\arguments{
\item{df}{A data frame or data frame extension. Can be grouped.}

\item{combine_dfs}{Logical. Whether columns containtaining data frames should be combined into a
single longer data frame (\code{combine_dfs = TRUE}) or left as a list of data frames (\code{combine_dfs = FALSE})}

\item{unique_only}{Logical. Whether the entries in a list should contain the values from all
rows, including repeats (\code{unique_only = FALSE}) or if only unique values should be reported
(\code{unique_only = TRUE}). Does not apply to data frames if \code{combine_dfs = TRUE}.}

\item{unlist_scalars}{Logical. After columns are reduced to a single row, should columns
containing scalar values be converted from list columns into regular columns.}

\item{.groups}{\ifelse{{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}} Grouping structure of the result.
\itemize{
\item "drop_last": dropping the last level of grouping. This was the
only supported option before version 1.0.0.
\item "drop": All levels of grouping are dropped.
\item "keep": Same grouping structure as \code{.data}.
\item "rowwise": Each row is its own group.
}

When \code{.groups} is not specified, it is chosen
based on the number of rows of the results:
\itemize{
\item If all the results have 1 row, you get "drop_last".
\item If the number of rows varies, you get "keep".
}

In addition, a message informs you of that choice, unless the result is ungrouped,
the option "dplyr.summarise.inform" is set to \code{FALSE},
or when \code{summarise()} is called from a function in a package.}
}
\value{
An object of the same type as \code{df}, with one row per group in the original data frame.
Columns other than grouping variables are transformed into list columns. If \code{unlist_scalars = TRUE}, some of the list columns may be conveted back into regular columns.
}
\description{
\code{collapse_all()} takes a data frame and for each column, combines all the entries for each group
into a list. Other parameters control whether data frames should be merged into a single longer
data frame, whether only unique values should be reported, or whether columns should be
transformed back into atomic columns where possible.
}
\details{
While \code{collapse_all} can be used on any data frame, it's designed around data frames that having
a sequential series of model fits. Each model might be associated with some parameters, such as
what date and location it corresponds to, some data, and some predictions. If you have a separate
model for each location, it's natural to want to combine the predictions from each location into
a larger dataset that you can look at together. \code{collapse_all} simplifies the process of
combining the data and predictions from each model fit into a single data frame. \code{collapse_all}
works with grouping variables, so if you have model fits for multiple locations from multiple
different models, it's easy to combine the predictions from each model separately.

One way to think about \code{collapse_all} is that it's halfway between \code{\link[dplyr]{summarize}}
and \code{\link[tidyr]{nest}}. Like \code{summarize}, it combines all the rows for each group into a
single row. Like \code{nest}, it stores all the data (unlike \code{unique_only = TRUE}), instead of
reporting a single summary value for each group. Unlike \code{nest} though, \code{collapse_all} works on
each column individually, and it stores the data as a list instead of as a data frame.

In fact, \code{collapse_all} is a wrapper around \code{summarize} (not \code{nest}), and a call to
\code{collapse_all} can always be replaced with a call to \code{summarize}, with assistance from the helper
functions \code{\link{collapse}} and \code{\link{unlist_scalars}}:
\preformatted{
df %>%
   collapse_all()
}
is equivalent to
\preformatted{
df %>%
  summarize(across(everything()), .fns = collapse, combined_dfs = TRUE) %>%
  unlist_scalars()
}
}
\examples{
mtcars_nested <- mtcars \%>\%
  group_by(cyl) \%>\%
  nest()

# Generate two models for mpg with different predicting variables
model_fits <- tidyr::crossing(mtcars_nested, model_var = c("wt", "hp")) \%>\%
  rowwise() \%>\%
  mutate(model = list(lm(paste0("mpg ~ ", model_var), data = data)),
         predictions = list(broom::augment(model)))

# Combine the results from each model separately
model_fits \%>\%
  group_by(model_var) \%>\%
  collapse_all()
}
