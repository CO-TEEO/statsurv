scan_eb_poisson2(df, fin_time, zones, baseline_col = NULL)
devtools::load_all(".")
?scan_eb_zip
devtools::load_all(".")
?scan_bayes_negbin
?scan_cusum_poisson
source('~/r-analysis/statsurv/tests/testthat/test-standardized_alarm_functions.R')
set.seed(373953261)
library("scanstatistics")
devtools::load_all(".")
set.seed(373953261)
library("scanstatistics")
source("build_data_for_alarm_functions.R")
n_sim <- 0
library("here")
source(here("tests", "testthat", "build_data_for_alarm_functions.R"))
spacetime_data_lg
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
destandardize <- function(alarm_res) {
if (attr(alarm_res, "alarm_type") == "scan") {
if (alarm_res$type == "Bayesian") {
alarm_res$observed <- NULL
alarm_res$MLC$action_level <- NULL
} else {
alarm_res$observed$action_level <- NULL
alarm_res$replicates$action_level <- NULL
alarm_res$MLC$action_level <- NULL
}
alarm_res$zone_info <- NULL
}
attr(alarm_res, "alarm_type") <- NULL
return(alarm_res)
}
expect_equal(destandardize(scanres_gen), scanres)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
test_that("scan_eb_poisson matches", {
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
})
spacetime_data_lg <- data.frame(id_space = rep(1:9, 4),
id_time = rep(1:4, each = 9)) %>%
dplyr::mutate(cases = dplyr::case_when(id_space %in% c(1, 2, 4, 5) & id_time %in% c(3,4) ~ 5,
id_space %in% c(8,9) & id_time %in% c(3, 4) ~ 3,
TRUE ~ 2),
.fitted = 2,
pop = id_space * 6)
spacetime_data_lg
wide_pop_lg <- matrix(spacetime_data_lg$pop, nrow = 4, ncol = 9)
wide_pop_lg
wide_pop_lg <- matrix(spacetime_data_lg$pop, nrow = 4, ncol = 9, byrow = TRUE)
wide_pop_lg
scanres2 <- scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg,
.fitted, pop,
n_mcsim = n_sim)
test_that("scan_eb_poisson matches", {
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
population = wide_pop_lg,
n_mcsim = n_sim)
scanres2 <- scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg,
.fitted, pop,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
})
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg,
population = wide_pop_lg,
n_mcsim = n_sim)
scanres2 <- scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg,
pop_col = pop,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
test_that("scan_eb_poisson matches", {
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg, n_mcsim = n_sim)
scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg, n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson(wide_cases_lg, zones_lg,
population = wide_pop_lg,
n_mcsim = n_sim)
scanres2 <- scanres2 <- scan_eb_poisson2(spacetime_data_lg, cases, zones_lg,
pop_col = pop,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_poisson
})
?scan_eb_poisson
?scan_pb_poisson
devtools::load_all(".")
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg, population = wide_pop_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = NULL,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
test_that("scan_pb_poisson matches", {
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg, population = wide_pop_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = NULL,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
})
?scan_eb_negbin
scanres_gen <- standardized_alarm_functions("scan_eb_negbin",
wide_cases_lg,
zones_lg,
wide_baseline_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres2 <- scan_eb_negbin2(data, cases, zones_lg,
n_mcsim = n_sim,
theta_col = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
theta_col = 1.5)
devtools::load_all(".")
test_that("scan_pb_poisson matches", {
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg, population = wide_pop_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_pb_poisson(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
scanres2 <- scan_pb_poisson2(spacetime_data_lg, cases, zones_lg, pop_col = NULL,
n_mcsim = n_sim,
gumbel = TRUE)
expect_equal(destandardize(scanres2), scanres)
})
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
theta_col = 1.5)
devtools::load_all(".")
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
theta_col = 1.5)
devtools::load_all(".")
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
theta_col = 1.5)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baselines = NULL,
n_mcsim = n_sim,
thetas = 1.5)
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baselines = wide_baseline_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres2 <- scan_eb_negbin2(data, cases, zones_lg,
n_mcsim = n_sim,
theta_col = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim,
theta_col = 1.5)
devtools::load_all(".")
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim, type = "emerging",
thetas = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim, type = "emerging"
theta_col = 1.5)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim, type = "emerging",
theta_col = 1.5)
expect_equal(destandardize(scanres2), scanres)
wide_pop_lg
scanres <- scan_eb_negbin(wide_cases_lg, zones_lg, baseline = wide_baseline_lg,
n_mcsim = n_sim,
thetas = wide_pop_lg)
scanres2 <- scan_eb_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
theta_col = pop)
expect_equal(destandardize(scanres2), scanres)
wide_probs_lg <- matrix(0.1, nrow = 4, ncol = 9)
source('~/r-analysis/statsurv/tests/testthat/build_data_for_alarm_functions.R')
?scan_eb_zip
scanres_gen <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
prob_col = prob)
v
spacetime_data_lg
devtools::load_all(".")
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
prob_col = prob)
spacetime_data_lg
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
prob_col = probs)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, wide_baseline_lg,
n_mcsim = n_sim,
probs = wide_probs_lg)
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
prob_col = probs)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_zip(wide_cases_lg, zones_lg,
n_mcsim = n_sim,
probs = wide_probs_lg)
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim,
prob_col = probs)
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, population = wide_pop_lg,
n_mcsim = n_sim,
probs = wide_probs_lg)
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim,
prob_col = probs)
expect_equal(destandardize(scanres2), scanres)
# Probs no
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, wide_baseline_lg,
n_mcsim = n_sim)
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
# Probs Scalar
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, wide_baseline_lg,
n_mcsim = n_sim,
probs = 1.2)
# Probs Scalar
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, wide_baseline_lg,
n_mcsim = n_sim,
probs = 0.2)
# Probs Scalar
scanres <- scan_eb_zip(wide_cases_lg, zones_lg, wide_baseline_lg,
n_mcsim = n_sim,
probs = wide_probs_lg)
scanres2 <- scan_eb_zip2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
n_mcsim = n_sim,
prob_col = 0.1)
expect_equal(destandardize(scanres2), scanres)
?scan_permutation
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim)
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg, pop_col = pops,
n_mcsim = n_sim)
devtools::load_all(".")
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg, pop_col = pops,
n_mcsim = n_sim)
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim)
devtools::load_all(".")
scanres <- scan_permutation(wide_cases_lg, zones_lg, population = wide_pop_lg,
n_mcsim = n_sim)
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
n_mcsim = n_sim)
scanres_gen <- standardized_alarm_functions("scan_permutation",
wide_cases_lg,
zones_lg,
wide_baseline_lg,
n_mcsim = n_sim)
expect_equal(destandardize(scanres_gen), scanres)
expect_equal(destandardize(scanres), scanres2)
devtools::load_all(".")
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_permutation(wide_cases_lg, zones_lg,
n_mcsim = n_sim)
scanres2 <- scan_permutation2(spacetime_data_lg, cases, zones_lg,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_permutation(wide_cases_lg, zones_lg, population = 15,
n_mcsim = n_sim)
?scan_bayes_negbin
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, .fitted,
bate_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, .fitted,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
beta_null = 2)
devtools::load_all(".")
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, wide_baseline_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, population = wide_pop_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, population = wide_pop_lg,
baseline = wide_baseline_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
baseline_col = .fitted,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
# Check that all the parameters get passed through OK
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, wide_baseline_lg,
outbreak_prob = 0.02, alpha_null = 1.2, beta_null = 0.8,
alpha_alt = 0.8, beta_alt = 1.2, inc_values = c(1.5, 2, 2.9),
inc_probs = c(2, 1, 3))
# Check that all the parameters get passed through OK
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, wide_baseline_lg,
outbreak_prob = 0.02, alpha_null = 1.2, beta_null = 0.8,
alpha_alt = 0.8, beta_alt = 1.2, inc_values = c(1.5, 2, 2.9),
inc_probs = c(2, 1, 3))
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
outbreak_prob = 0.02, alpha_null = 1.2, beta_null = 0.8,
alpha_alt = 0.8, beta_alt = 1.2, inc_values = c(1.5, 2, 2.9),
inc_probs = c(2, 1, 3))
expect_equal(destandardize(scanres2), scanres)
test_that("scan_bayes_negbin matches", {
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, wide_baseline_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, population = wide_pop_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, population = wide_pop_lg,
baseline = wide_baseline_lg,
beta_null = 2)
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, pop_col = pop,
baseline_col = .fitted,
beta_null = 2)
expect_equal(destandardize(scanres2), scanres)
# Check that all the parameters get passed through OK
scanres <- scan_bayes_negbin(wide_cases_lg, zones_lg, wide_baseline_lg,
outbreak_prob = 0.02, alpha_null = 1.2, beta_null = 0.8,
alpha_alt = 0.8, beta_alt = 1.2, inc_values = c(1.5, 2, 2.9),
inc_probs = c(2, 1, 3))
scanres2 <- scan_bayes_negbin2(spacetime_data_lg, cases, zones_lg, baseline_col = .fitted,
outbreak_prob = 0.02, alpha_null = 1.2, beta_null = 0.8,
alpha_alt = 0.8, beta_alt = 1.2, inc_values = c(1.5, 2, 2.9),
inc_probs = c(2, 1, 3))
expect_equal(destandardize(scanres2), scanres)
})
?scan_eb_poisson_fast
test_that("scan_eb_poisson_fast matches", {
scanres <- scan_eb_poisson_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim)
scanres2 <- scan_eb_poisson_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
})
?scan_eb_negbin_fast
spacetime_data_lg
spacetime_data_lg <- data.frame(id_space = rep(1:9, 4),
id_time = rep(1:4, each = 9)) %>%
dplyr::mutate(cases = dplyr::case_when(id_space %in% c(1, 2, 4, 5) & id_time %in% c(3,4) ~ 5,
id_space %in% c(8,9) & id_time %in% c(3, 4) ~ 3,
TRUE ~ 2),
.fitted = 2,
pop = id_space * 6,
probs = 0.1,
thetas = 1.5)
wide_thetas_lg <- matrix(1.5, nrow = 4, ncol =9)
source('~/r-analysis/statsurv/tests/testthat/build_data_for_alarm_functions.R')
scanres <- scan_eb_negbin_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim,
thetas = 1.5)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 1.5)
expect_equal(destandardize(scanres2), scanres)
devtools::load_all(".")
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 1.5)
devtools::load_all(".")
expect_equal(destandardize(scanres2), scanres)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 1.5)
devtools::load_all(".")
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 1.5,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_negbin_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim,
thetas = wide_thetas_lg)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = thetas,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_negbin_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim,
thetas = 2.5)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 2.5,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
test_that("scan_eb_negbin_fast matches", {
scanres <- scan_eb_negbin_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim,
thetas = 2.5)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = 2.5,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
scanres <- scan_eb_negbin_fast(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
n_mcsim = n_sim,
thetas = wide_thetas_lg)
scanres2 <- scan_eb_negbin_fast2(spacetime_data_lg, cases, zones_lg, .fitted,
theta_col = thetas,
n_mcsim = n_sim)
expect_equal(destandardize(scanres2), scanres)
})
?scan_cusum_poisson
scanres <- scan_cusum_poisson(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
scaling = 2.5,
n_mcsim = n_sim)
devtools::load_all(".")
scanres <- scan_cusum_poisson(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
scaling = 2.5,
n_mcsim = n_sim)
scanres2 <- scan_cusum_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
scaling = 2.5,
n_mcsim = n_im)
devtools::load_all(".")
scanres <- scan_cusum_poisson(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
scaling = 2.5,
n_mcsim = n_sim)
scanres2 <- scan_cusum_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
scaling = 2.5,
n_mcsim = n_im)
scanres2 <- scan_cusum_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
scaling = 2.5,
n_mcsim = n_sim)
devtools::load_all(".")
scanres2 <- scan_cusum_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
scaling = 2.5,
n_mcsim = n_sim)
expect_equal(scanres, scanres2)
scanres <- scan_cusum_poisson(wide_cases_lg, key_matrix_lg, wide_baseline_lg,
scaling = 2.5,
n_mcsim = n_sim)
scanres2 <- scan_cusum_poisson2(spacetime_data_lg, cases, zones_lg, .fitted,
scaling = 2.5,
n_mcsim = n_sim)
expect_equal(scanres, scanres2)
waldo::compare(scanres, scanres2)
expect_equal(destandardize(scanres), scanres2)
expect_equal(destandardize(scanres2), scanres)
