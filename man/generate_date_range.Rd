% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_coordinates.R
\name{generate_date_range}
\alias{generate_date_range}
\title{Generate a gridcoord covering a specified date range}
\usage{
generate_date_range(
  start_date,
  end_date,
  time_division = c("month", "quarter", "year", "week", "day"),
  coordinate_name = "date_label",
  week_start = 7
)
}
\arguments{
\item{start_date}{The first day that must be included in the date range}

\item{end_date}{The last day that must be included in the date range}

\item{time_division}{The length of each interval}

\item{coordinate_name}{The name to use for the first column of the generated data.frame,
containing the labels of the time spans.}

\item{week_start}{What day do weeks start on? Can only be 7 (Sunday) or 1 (Monday). Only used if
\code{time_division = "week"}}
}
\value{
A three column gridcoord dataframe, where the first column is the name of the time span,
  the second column is the starting date, and the third column is the ending date. Each row
  represents a time span. The first row will always include the \code{start_date}, and the last
  row will always include the \code{end_date}. The returned time spans are left-closed,
  right-open. The column names are `coordinate_name`, "start_date", and "end_date".
}
\description{
\code{generate_date_range} generates set a span coordinates following the
  conventions of the gridcoord package (\code{\link[gridcoord]{gc_gridcoord}}) where each span is
  the same length.
}
\details{
The time spans returned by \code{generate_date_range} are always aligned to standard
  breaks in time. If \code{time_division} is "month", then each time span will start on the 1st
  of the month and end on the last of the month, even if \code{start_date} is (for example) the
  14th. The time spans are inclusive, meaning that they will always add dates before
  \code{start_date} or after \code{end_date} to align the time spans with breaks in the calendar.

Assigning days of the year to a specific week is remarkably confusing, as weeks can span multiple
years. The convention used here is to assign weeks to the year in which they have the majority of
their days. While this assigns each day to a single week, it can lead to some oddities around the
new year. If we assign weeks starting on Sunday, then 29 Dec 2019 is the first day of Week 1 in
2020, while 02 Jan 2016 is the last day of week 52 in 2015. Some years have a different number of
weeks than other years. The weeks assigned by \code{generate_date_range} are designed to match
those used by the CDC in their reporting.
}
\examples{
library("lubridate")

generate_date_range(ymd("2012-01-01"), ymd("2012-12-15"), "month")
generate_date_range(ymd("2012-04-04"), ymd("2050-12-15"), "year")
generate_date_range(ymd("2012-04-04"), ymd("2050-12-15"), "week")
generate_date_range(ymd("2012-04-04"),
                    ymd("2050-12-15"),
                    "week",
                    week_start = 1)
}
\references{
\url{https://wwwn.cdc.gov/nndss/document/MMWR_Week_overview.pdf}
}
