% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_prediction_data.R
\name{prepare_prediction_data}
\alias{prepare_prediction_data}
\title{Prepare data for prediction in statistical surveillance}
\usage{
prepare_prediction_data(
  spacetime_data,
  outcome_cols,
  split_id,
  prep_strategy = c("NA", "truncate")
)
}
\arguments{
\item{spacetime_data}{A data frame or a data frame extension (e.g., a tibble) that includes
columns `id_space` and `id_time` that are each a set of consecutive integers. The column
`id_time` identifies the time point associated with each row, with lower numbers being earlier
and higher numbers being later. The column `id_space` identifies the spatial location or area
associated with each row, but no meaning or order is ascribed to the values.}

\item{outcome_cols}{\code{<\link[tidyr]{tidyr_tidy_select }>} Outcome columns that should be
removed or NA'd out of the training data. Follows the \code{tidy-select} principles of the tidyverse.}

\item{split_id}{The value of \code{id_time} that marks the beginning of the prediction data. All
entries in the outcome columns associated with an \code{id_time} that is greater than or equal to
\code{split_id} will be removed or NA'd out of the training data.}

\item{prep_strategy}{Whether the values should be converted to NA (\code{prep_strategy = "NA"}) or if
those rows should be removed (\code{prep_strategy = "truncate"})}
}
\value{
A data frame with the selected values converted to NA or removed, as designated by
\code{prep_strategy}
}
\description{
Prepare data for prediction in statistical surveillance
}
\examples{
x = rnorm(100)
spacetime_data <- data.frame(id_space = rep(1:10, each = 10),
                             id_time = rep(1:10, 10),
                             x = x,
                             y = 2.04 * x + 1.23,
                             y2 = (2.04 * x + 1.23)^2)

# NA-out a single column
prepare_prediction_data(spacetime_data, y, split_id = 9)

# NA-out multiple columns
prepare_prediction_data(spacetime_data, c(y, y2), split_id = 9)

# We can use dplyr selection helpers
prepare_prediction_data(spacetime_data, dplyr::starts_with("y"), split_id = 9)

# Remove all rows above split_id
prepare_prediction_data(spacetime_data, y, split_id = 9, prep_strategy = "truncate")
}
